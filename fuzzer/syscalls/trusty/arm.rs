//! System call information of trusty/arm
//! AUTOGENERATED FILE. DO NOT EDIT.
use std::rc::Rc;
use hlang::ast::*;

pub fn syscalls() -> (Vec<Syscall>, Vec<Rc<Type>>){
	let tys = types();
	let calls = vec![
		Syscall::new(0, 18, "accept", "accept", 0, vec![Param{ name: "handle_id", ty: tys[3].clone(), dir: None }, Param{ name: "peer_uuid", ty: tys[17].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(1, 2, "brk", "brk", 0, vec![Param{ name: "brk", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(2, 19, "close", "close", 0, vec![Param{ name: "handle_id", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(3, 17, "connect", "connect", 0, vec![Param{ name: "path", ty: tys[11].clone(), dir: None }, Param{ name: "flags", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(4, 3, "exit_etc", "exit_etc", 0, vec![Param{ name: "status", ty: tys[3].clone(), dir: None }, Param{ name: "flags", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(5, 11, "finish_dma", "finish_dma", 0, vec![Param{ name: "uaddr", ty: tys[22].clone(), dir: None }, Param{ name: "size", ty: tys[7].clone(), dir: None }, Param{ name: "flags", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(6, 32, "get_msg", "get_msg", 0, vec![Param{ name: "handle", ty: tys[3].clone(), dir: None }, Param{ name: "msg_info", ty: tys[15].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(7, 7, "gettime", "gettime", 0, vec![Param{ name: "clock_id", ty: tys[3].clone(), dir: None }, Param{ name: "flags", ty: tys[3].clone(), dir: None }, Param{ name: "time", ty: tys[18].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(8, 21, "handle_set_create", "handle_set_create", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(9, 22, "handle_set_ctrl", "handle_set_ctrl", 0, vec![Param{ name: "handle", ty: tys[3].clone(), dir: None }, Param{ name: "cmd", ty: tys[3].clone(), dir: None }, Param{ name: "evt", ty: tys[8].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(10, 5, "ioctl", "ioctl", 0, vec![Param{ name: "fd", ty: tys[3].clone(), dir: None }, Param{ name: "req", ty: tys[3].clone(), dir: None }, Param{ name: "buf", ty: tys[14].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(11, 8, "mmap", "mmap", 0, vec![Param{ name: "uaddr", ty: tys[29].clone(), dir: None }, Param{ name: "size", ty: tys[7].clone(), dir: None }, Param{ name: "flags", ty: tys[3].clone(), dir: None }, Param{ name: "handle", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(12, 9, "munmap", "munmap", 0, vec![Param{ name: "uaddr", ty: tys[29].clone(), dir: None }, Param{ name: "size", ty: tys[7].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(13, 6, "nanosleep", "nanosleep", 0, vec![Param{ name: "clock_id", ty: tys[3].clone(), dir: None }, Param{ name: "flags", ty: tys[3].clone(), dir: None }, Param{ name: "sleep_time", ty: tys[4].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(14, 16, "port_create", "port_create", 0, vec![Param{ name: "path", ty: tys[11].clone(), dir: None }, Param{ name: "num_recv_bufs", ty: tys[3].clone(), dir: None }, Param{ name: "recv_buf_size", ty: tys[3].clone(), dir: None }, Param{ name: "flags", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(15, 10, "prepare_dma", "prepare_dma", 0, vec![Param{ name: "uaddr", ty: tys[22].clone(), dir: None }, Param{ name: "size", ty: tys[7].clone(), dir: None }, Param{ name: "flags", ty: tys[3].clone(), dir: None }, Param{ name: "pmem", ty: tys[9].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(16, 34, "put_msg", "put_msg", 0, vec![Param{ name: "handle", ty: tys[3].clone(), dir: None }, Param{ name: "msg_id", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(17, 4, "read", "read", 0, vec![Param{ name: "fd", ty: tys[3].clone(), dir: None }, Param{ name: "msg", ty: tys[22].clone(), dir: None }, Param{ name: "size", ty: tys[6].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(18, 33, "read_msg", "read_msg", 0, vec![Param{ name: "handle", ty: tys[3].clone(), dir: None }, Param{ name: "msg_id", ty: tys[3].clone(), dir: None }, Param{ name: "offset", ty: tys[3].clone(), dir: None }, Param{ name: "msg", ty: tys[20].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(19, 35, "send_msg", "send_msg", 0, vec![Param{ name: "handle", ty: tys[3].clone(), dir: None }, Param{ name: "msg", ty: tys[10].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(20, 20, "set_cookie", "set_cookie", 0, vec![Param{ name: "handle", ty: tys[3].clone(), dir: None }, Param{ name: "cookie", ty: tys[5].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(21, 0, "syz_builtin0", "syz_builtin0", 0, vec![Param{ name: "a", ty: tys[13].clone(), dir: None }, ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(22, 0, "syz_builtin1", "syz_builtin1", 0, vec![Param{ name: "a", ty: tys[21].clone(), dir: None }, ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(23, 24, "wait", "wait", 0, vec![Param{ name: "handle_id", ty: tys[3].clone(), dir: None }, Param{ name: "event", ty: tys[8].clone(), dir: None }, Param{ name: "timeout_msecs", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(24, 25, "wait_any", "wait_any", 0, vec![Param{ name: "event", ty: tys[19].clone(), dir: None }, Param{ name: "timeout_msecs", ty: tys[3].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
		Syscall::new(25, 1, "write", "write", 0, vec![Param{ name: "fd", ty: tys[3].clone(), dir: None }, Param{ name: "msg", ty: tys[14].clone(), dir: None }, Param{ name: "size", ty: tys[6].clone(), dir: None }, ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}),
	];
	(calls, tys)
}

fn types() -> Vec<Rc<Type>>{
	vec![
		Type::new(0, "array", 0, 8, false, true, TypeKind::Array{elem: 31, range:None}),
		Type::new(1, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRand, )),
		Type::new(2, "string", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_str(vec![], false), )),
		Type::new(3, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0}),
		Type::new(4, "int64", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0}),
		Type::new(5, "intptr", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0}),
		Type::new(6, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec![msg, ])),
		Type::new(7, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec![uaddr, ])),
		Type::new(8, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::In), elem: TypeRef::Id(35)}),
		Type::new(9, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::In), elem: TypeRef::Id(32)}),
		Type::new(10, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::In), elem: TypeRef::Id(33)}),
		Type::new(11, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::In), elem: TypeRef::Id(2)}),
		Type::new(12, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::In), elem: TypeRef::Id(0)}),
		Type::new(13, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::In), elem: TypeRef::Id(30)}),
		Type::new(14, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::In), elem: TypeRef::Id(1)}),
		Type::new(15, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::In), elem: TypeRef::Id(34)}),
		Type::new(16, "ptr64", 8, 8, false, false, TypeKind::Ptr{dir: Some(Dir::In), elem: TypeRef::Id(0)}),
		Type::new(17, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::Out), elem: TypeRef::Id(36)}),
		Type::new(18, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::Out), elem: TypeRef::Id(4)}),
		Type::new(19, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::Out), elem: TypeRef::Id(35)}),
		Type::new(20, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::Out), elem: TypeRef::Id(33)}),
		Type::new(21, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::Out), elem: TypeRef::Id(31)}),
		Type::new(22, "ptr", 4, 4, false, false, TypeKind::Ptr{dir: Some(Dir::Out), elem: TypeRef::Id(1)}),
		Type::new(23, "ANYRES16", 2, 2, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES16", vec!["ANYRES16", ], vec![18446744073709551615, 0, ])}),
		Type::new(24, "ANYRES32", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES32", vec!["ANYRES32", ], vec![18446744073709551615, 0, ])}),
		Type::new(25, "ANYRES64", 18, 1, false, false, TypeKind::Res{fmt: BinFmt::StrHex, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])}),
		Type::new(26, "ANYRES64", 20, 1, false, false, TypeKind::Res{fmt: BinFmt::StrDec, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])}),
		Type::new(27, "ANYRES64", 23, 1, false, false, TypeKind::Res{fmt: BinFmt::StrOct, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])}),
		Type::new(28, "ANYRES64", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])}),
		Type::new(29, "vma", 4, 4, false, false, TypeKind::Vma{begin: 0, end: 0}),
		Type::new(30, "ANYPTRS", 8, 8, false, false, TypeKind::new_union(vec![Field{ name: "ANYPTR", ty: TypeRef::Id(12), dir: None }, Field{ name: "ANYPTR64", ty: TypeRef::Id(16), dir: None }, ])),
		Type::new(31, "ANYUNION", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: "ANYBLOB", ty: TypeRef::Id(1), dir: None }, Field{ name: "ANYRES16", ty: TypeRef::Id(23), dir: None }, Field{ name: "ANYRES32", ty: TypeRef::Id(24), dir: None }, Field{ name: "ANYRES64", ty: TypeRef::Id(28), dir: None }, Field{ name: "ANYRESDEC", ty: TypeRef::Id(26), dir: None }, Field{ name: "ANYRESHEX", ty: TypeRef::Id(25), dir: None }, Field{ name: "ANYRESOCT", ty: TypeRef::Id(27), dir: None }, ])),
		Type::new(32, "dma_pmem", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: "todo", ty: TypeRef::Id(3), dir: None }, ])),
		Type::new(33, "ipc_msg", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: "todo", ty: TypeRef::Id(3), dir: None }, ])),
		Type::new(34, "ipc_msg_info", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: "todo", ty: TypeRef::Id(3), dir: None }, ])),
		Type::new(35, "uevent", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: "todo", ty: TypeRef::Id(3), dir: None }, ])),
		Type::new(36, "uuid", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: "todo", ty: TypeRef::Id(3), dir: None }, ])),
	]
}
