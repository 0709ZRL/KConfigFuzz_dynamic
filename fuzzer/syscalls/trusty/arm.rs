//! System call information of trusty/arm
//! AUTOGENERATED FILE. DO NOT EDIT.
use hlang::ast::*;
use std::rc::Rc;

pub fn syscalls() -> (Vec<Syscall>, Vec<Rc<Type>>) {
    let tys = types();
    let calls = vec![
        Syscall::new(
            0,
            18,
            "accept",
            "accept",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle_id".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("peer_uuid".to_string()),
                    ty: tys[17].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            1,
            2,
            "brk",
            "brk",
            0,
            vec![Param {
                name: String::into_boxed_str("brk".to_string()),
                ty: tys[3].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            2,
            19,
            "close",
            "close",
            0,
            vec![Param {
                name: String::into_boxed_str("handle_id".to_string()),
                ty: tys[3].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            3,
            17,
            "connect",
            "connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[11].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            4,
            3,
            "exit_etc",
            "exit_etc",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("status".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            5,
            11,
            "finish_dma",
            "finish_dma",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("uaddr".to_string()),
                    ty: tys[22].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[7].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            6,
            32,
            "get_msg",
            "get_msg",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("msg_info".to_string()),
                    ty: tys[15].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            7,
            7,
            "gettime",
            "gettime",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("clock_id".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("time".to_string()),
                    ty: tys[18].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            8,
            21,
            "handle_set_create",
            "handle_set_create",
            0,
            vec![],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            9,
            22,
            "handle_set_ctrl",
            "handle_set_ctrl",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("cmd".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("evt".to_string()),
                    ty: tys[8].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            10,
            5,
            "ioctl",
            "ioctl",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("req".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buf".to_string()),
                    ty: tys[14].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            11,
            8,
            "mmap",
            "mmap",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("uaddr".to_string()),
                    ty: tys[29].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[7].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            12,
            9,
            "munmap",
            "munmap",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("uaddr".to_string()),
                    ty: tys[29].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[7].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            13,
            6,
            "nanosleep",
            "nanosleep",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("clock_id".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("sleep_time".to_string()),
                    ty: tys[4].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            14,
            16,
            "port_create",
            "port_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[11].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_recv_bufs".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("recv_buf_size".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            15,
            10,
            "prepare_dma",
            "prepare_dma",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("uaddr".to_string()),
                    ty: tys[22].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[7].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("pmem".to_string()),
                    ty: tys[9].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            16,
            34,
            "put_msg",
            "put_msg",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("msg_id".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            17,
            4,
            "read",
            "read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("msg".to_string()),
                    ty: tys[22].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[6].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            18,
            33,
            "read_msg",
            "read_msg",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("msg_id".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("msg".to_string()),
                    ty: tys[20].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            19,
            35,
            "send_msg",
            "send_msg",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("msg".to_string()),
                    ty: tys[10].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            20,
            20,
            "set_cookie",
            "set_cookie",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("cookie".to_string()),
                    ty: tys[5].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            21,
            0,
            "syz_builtin0",
            "syz_builtin0",
            0,
            vec![Param {
                name: String::into_boxed_str("a".to_string()),
                ty: tys[13].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: true,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            22,
            0,
            "syz_builtin1",
            "syz_builtin1",
            0,
            vec![Param {
                name: String::into_boxed_str("a".to_string()),
                ty: tys[21].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: true,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            23,
            24,
            "wait",
            "wait",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle_id".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("event".to_string()),
                    ty: tys[8].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("timeout_msecs".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            24,
            25,
            "wait_any",
            "wait_any",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("event".to_string()),
                    ty: tys[19].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("timeout_msecs".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            25,
            1,
            "write",
            "write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[3].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("msg".to_string()),
                    ty: tys[14].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[6].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
    ];
    (calls, tys)
}

fn types() -> Vec<Rc<Type>> {
    vec![
        Rc::new(Type::new(
            0,
            "array",
            0,
            8,
            false,
            true,
            TypeKind::Array {
                elem: TypeRef::Id(31),
                range: None,
            },
        )),
        Rc::new(Type::new(
            1,
            "array",
            0,
            1,
            false,
            true,
            TypeKind::new_buffer(BufferKind::BlobRand, ""),
        )),
        Rc::new(Type::new(
            2,
            "string",
            0,
            1,
            false,
            true,
            TypeKind::new_buffer(BufferKind::new_str(vec![], false), ""),
        )),
        Rc::new(Type::new(
            3,
            "int32",
            4,
            4,
            false,
            false,
            TypeKind::Int {
                int_fmt: IntFmt {
                    fmt: BinFmt::Native,
                    bitfield_off: 0,
                    bitfield_len: 0,
                    bitfield_unit: 0,
                    bitfield_unit_off: 0,
                },
                range: None,
                align: 0,
            },
        )),
        Rc::new(Type::new(
            4,
            "int64",
            8,
            8,
            false,
            false,
            TypeKind::Int {
                int_fmt: IntFmt {
                    fmt: BinFmt::Native,
                    bitfield_off: 0,
                    bitfield_len: 0,
                    bitfield_unit: 0,
                    bitfield_unit_off: 0,
                },
                range: None,
                align: 0,
            },
        )),
        Rc::new(Type::new(
            5,
            "intptr",
            4,
            4,
            false,
            false,
            TypeKind::Int {
                int_fmt: IntFmt {
                    fmt: BinFmt::Native,
                    bitfield_off: 0,
                    bitfield_len: 0,
                    bitfield_unit: 0,
                    bitfield_unit_off: 0,
                },
                range: None,
                align: 0,
            },
        )),
        Rc::new(Type::new(
            6,
            "len",
            4,
            4,
            false,
            false,
            TypeKind::new_len(
                IntFmt {
                    fmt: BinFmt::Native,
                    bitfield_off: 0,
                    bitfield_len: 0,
                    bitfield_unit: 0,
                    bitfield_unit_off: 0,
                },
                0,
                false,
                vec!["msg"],
            ),
        )),
        Rc::new(Type::new(
            7,
            "len",
            4,
            4,
            false,
            false,
            TypeKind::new_len(
                IntFmt {
                    fmt: BinFmt::Native,
                    bitfield_off: 0,
                    bitfield_len: 0,
                    bitfield_unit: 0,
                    bitfield_unit_off: 0,
                },
                0,
                false,
                vec!["uaddr"],
            ),
        )),
        Rc::new(Type::new(
            8,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::In,
                elem: TypeRef::Id(35),
            },
        )),
        Rc::new(Type::new(
            9,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::In,
                elem: TypeRef::Id(32),
            },
        )),
        Rc::new(Type::new(
            10,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::In,
                elem: TypeRef::Id(33),
            },
        )),
        Rc::new(Type::new(
            11,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::In,
                elem: TypeRef::Id(2),
            },
        )),
        Rc::new(Type::new(
            12,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::In,
                elem: TypeRef::Id(0),
            },
        )),
        Rc::new(Type::new(
            13,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::In,
                elem: TypeRef::Id(30),
            },
        )),
        Rc::new(Type::new(
            14,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::In,
                elem: TypeRef::Id(1),
            },
        )),
        Rc::new(Type::new(
            15,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::In,
                elem: TypeRef::Id(34),
            },
        )),
        Rc::new(Type::new(
            16,
            "ptr64",
            8,
            8,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::In,
                elem: TypeRef::Id(0),
            },
        )),
        Rc::new(Type::new(
            17,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::Out,
                elem: TypeRef::Id(36),
            },
        )),
        Rc::new(Type::new(
            18,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::Out,
                elem: TypeRef::Id(4),
            },
        )),
        Rc::new(Type::new(
            19,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::Out,
                elem: TypeRef::Id(35),
            },
        )),
        Rc::new(Type::new(
            20,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::Out,
                elem: TypeRef::Id(33),
            },
        )),
        Rc::new(Type::new(
            21,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::Out,
                elem: TypeRef::Id(31),
            },
        )),
        Rc::new(Type::new(
            22,
            "ptr",
            4,
            4,
            false,
            false,
            TypeKind::Ptr {
                dir: Dir::Out,
                elem: TypeRef::Id(1),
            },
        )),
        Rc::new(Type::new(
            23,
            "ANYRES16",
            2,
            2,
            false,
            false,
            TypeKind::Res {
                fmt: BinFmt::Native,
                desc: ResDesc::new("ANYRES16", vec!["ANYRES16"], vec![18446744073709551615, 0]),
            },
        )),
        Rc::new(Type::new(
            24,
            "ANYRES32",
            4,
            4,
            false,
            false,
            TypeKind::Res {
                fmt: BinFmt::Native,
                desc: ResDesc::new("ANYRES32", vec!["ANYRES32"], vec![18446744073709551615, 0]),
            },
        )),
        Rc::new(Type::new(
            25,
            "ANYRES64",
            18,
            1,
            false,
            false,
            TypeKind::Res {
                fmt: BinFmt::StrHex,
                desc: ResDesc::new("ANYRES64", vec!["ANYRES64"], vec![18446744073709551615, 0]),
            },
        )),
        Rc::new(Type::new(
            26,
            "ANYRES64",
            20,
            1,
            false,
            false,
            TypeKind::Res {
                fmt: BinFmt::StrDec,
                desc: ResDesc::new("ANYRES64", vec!["ANYRES64"], vec![18446744073709551615, 0]),
            },
        )),
        Rc::new(Type::new(
            27,
            "ANYRES64",
            23,
            1,
            false,
            false,
            TypeKind::Res {
                fmt: BinFmt::StrOct,
                desc: ResDesc::new("ANYRES64", vec!["ANYRES64"], vec![18446744073709551615, 0]),
            },
        )),
        Rc::new(Type::new(
            28,
            "ANYRES64",
            8,
            8,
            false,
            false,
            TypeKind::Res {
                fmt: BinFmt::Native,
                desc: ResDesc::new("ANYRES64", vec!["ANYRES64"], vec![18446744073709551615, 0]),
            },
        )),
        Rc::new(Type::new(
            29,
            "vma",
            4,
            4,
            false,
            false,
            TypeKind::Vma { begin: 0, end: 0 },
        )),
        Rc::new(Type::new(
            30,
            "ANYPTRS",
            8,
            8,
            false,
            false,
            TypeKind::new_union(vec![
                Field {
                    name: String::into_boxed_str("ANYPTR".to_string()),
                    ty: TypeRef::Id(12),
                    dir: None,
                },
                Field {
                    name: String::into_boxed_str("ANYPTR64".to_string()),
                    ty: TypeRef::Id(16),
                    dir: None,
                },
            ]),
        )),
        Rc::new(Type::new(
            31,
            "ANYUNION",
            0,
            8,
            false,
            true,
            TypeKind::new_union(vec![
                Field {
                    name: String::into_boxed_str("ANYBLOB".to_string()),
                    ty: TypeRef::Id(1),
                    dir: None,
                },
                Field {
                    name: String::into_boxed_str("ANYRES16".to_string()),
                    ty: TypeRef::Id(23),
                    dir: None,
                },
                Field {
                    name: String::into_boxed_str("ANYRES32".to_string()),
                    ty: TypeRef::Id(24),
                    dir: None,
                },
                Field {
                    name: String::into_boxed_str("ANYRES64".to_string()),
                    ty: TypeRef::Id(28),
                    dir: None,
                },
                Field {
                    name: String::into_boxed_str("ANYRESDEC".to_string()),
                    ty: TypeRef::Id(26),
                    dir: None,
                },
                Field {
                    name: String::into_boxed_str("ANYRESHEX".to_string()),
                    ty: TypeRef::Id(25),
                    dir: None,
                },
                Field {
                    name: String::into_boxed_str("ANYRESOCT".to_string()),
                    ty: TypeRef::Id(27),
                    dir: None,
                },
            ]),
        )),
        Rc::new(Type::new(
            32,
            "dma_pmem",
            4,
            4,
            false,
            false,
            TypeKind::new_struct(
                0,
                vec![Field {
                    name: String::into_boxed_str("todo".to_string()),
                    ty: TypeRef::Id(3),
                    dir: None,
                }],
            ),
        )),
        Rc::new(Type::new(
            33,
            "ipc_msg",
            4,
            4,
            false,
            false,
            TypeKind::new_struct(
                0,
                vec![Field {
                    name: String::into_boxed_str("todo".to_string()),
                    ty: TypeRef::Id(3),
                    dir: None,
                }],
            ),
        )),
        Rc::new(Type::new(
            34,
            "ipc_msg_info",
            4,
            4,
            false,
            false,
            TypeKind::new_struct(
                0,
                vec![Field {
                    name: String::into_boxed_str("todo".to_string()),
                    ty: TypeRef::Id(3),
                    dir: None,
                }],
            ),
        )),
        Rc::new(Type::new(
            35,
            "uevent",
            4,
            4,
            false,
            false,
            TypeKind::new_struct(
                0,
                vec![Field {
                    name: String::into_boxed_str("todo".to_string()),
                    ty: TypeRef::Id(3),
                    dir: None,
                }],
            ),
        )),
        Rc::new(Type::new(
            36,
            "uuid",
            4,
            4,
            false,
            false,
            TypeKind::new_struct(
                0,
                vec![Field {
                    name: String::into_boxed_str("todo".to_string()),
                    ty: TypeRef::Id(3),
                    dir: None,
                }],
            ),
        )),
    ]
}
