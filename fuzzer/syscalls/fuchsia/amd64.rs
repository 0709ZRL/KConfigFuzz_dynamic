//! System call information of fuchsia/amd64
//! AUTOGENERATED FILE. DO NOT EDIT.
use hlang::ast::*;
use std::rc::Rc;

pub fn syscalls() -> (Vec<Syscall>, Vec<Rc<Type>>) {
    let tys = types();
    let calls = vec![
        Syscall::new(
            0,
            0,
            "chdir",
            "chdir",
            0,
            vec![Param {
                name: String::into_boxed_str("dir".to_string()),
                ty: tys[273].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            1,
            0,
            "chmod",
            "chmod",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mode".to_string()),
                    ty: tys[232].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            2,
            0,
            "chown",
            "chown",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("uid".to_string()),
                    ty: tys[975].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("gid".to_string()),
                    ty: tys[973].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            3,
            0,
            "close",
            "close",
            0,
            vec![Param {
                name: String::into_boxed_str("fd".to_string()),
                ty: tys[972].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            4,
            0,
            "creat",
            "creat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mode".to_string()),
                    ty: tys[232].clone(),
                    dir: None,
                },
            ],
            Some(tys[972].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            5,
            0,
            "dup",
            "dup",
            0,
            vec![Param {
                name: String::into_boxed_str("oldfd".to_string()),
                ty: tys[972].clone(),
                dir: None,
            }],
            Some(tys[972].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            6,
            0,
            "dup2",
            "dup2",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("oldfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("newfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
            ],
            Some(tys[972].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            7,
            0,
            "dup3",
            "dup3",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("oldfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("newfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[225].clone(),
                    dir: None,
                },
            ],
            Some(tys[972].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            8,
            0,
            "faccessat",
            "faccessat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("dirfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("pathname".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mode".to_string()),
                    ty: tys[232].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[227].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            9,
            0,
            "fchmod",
            "fchmod",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mode".to_string()),
                    ty: tys[232].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            10,
            0,
            "fchmodat",
            "fchmodat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("dirfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mode".to_string()),
                    ty: tys[232].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            11,
            0,
            "fchown",
            "fchown",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("uid".to_string()),
                    ty: tys[975].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("gid".to_string()),
                    ty: tys[973].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            12,
            0,
            "fchownat",
            "fchownat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("dirfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("uid".to_string()),
                    ty: tys[975].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("gid".to_string()),
                    ty: tys[973].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[205].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            13,
            0,
            "fdatasync",
            "fdatasync",
            0,
            vec![Param {
                name: String::into_boxed_str("fd".to_string()),
                ty: tys[972].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            14,
            0,
            "fdio_service_connect$fuchsia_cobalt_Controller",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[703].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[978].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            15,
            0,
            "fdio_service_connect$fuchsia_cobalt_Logger",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[986].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            16,
            0,
            "fdio_service_connect$fuchsia_cobalt_LoggerBase",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[980].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            17,
            0,
            "fdio_service_connect$fuchsia_cobalt_LoggerFactory",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[452].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[982].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            18,
            0,
            "fdio_service_connect$fuchsia_cobalt_LoggerSimple",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[984].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            19,
            0,
            "fdio_service_connect$fuchsia_cobalt_MetricEventLogger",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[990].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            20,
            0,
            "fdio_service_connect$fuchsia_cobalt_MetricEventLoggerFactory",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[499].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[988].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            21,
            0,
            "fdio_service_connect$fuchsia_cobalt_SystemDataUpdater",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[508].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[992].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            22,
            0,
            "fdio_service_connect$fuchsia_devicesettings_DeviceSettingsManager",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[518].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[994].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            23,
            0,
            "fdio_service_connect$fuchsia_devicesettings_DeviceSettingsWatcher",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[996].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            24,
            0,
            "fdio_service_connect$fuchsia_hardware_ethernet_Device",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[998].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            25,
            0,
            "fdio_service_connect$fuchsia_io_Directory",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1004].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            26,
            0,
            "fdio_service_connect$fuchsia_io_DirectoryAdmin",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1000].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            27,
            0,
            "fdio_service_connect$fuchsia_io_DirectoryWatcher",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1002].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            28,
            0,
            "fdio_service_connect$fuchsia_io_File",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1006].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            29,
            0,
            "fdio_service_connect$fuchsia_io_Node",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1008].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            30,
            0,
            "fdio_service_connect$fuchsia_ldsvc_Loader",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[346].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1010].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            31,
            0,
            "fdio_service_connect$fuchsia_net_Connectivity",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[544].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1012].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            32,
            0,
            "fdio_service_connect$fuchsia_net_NameLookup",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[552].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1014].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            33,
            0,
            "fdio_service_connect$fuchsia_process_Launcher",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[564].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1016].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            34,
            0,
            "fdio_service_connect$fuchsia_process_Resolver",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[573].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1018].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            35,
            0,
            "fdio_service_connect$fuchsia_scpi_SystemController",
            "fdio_service_connect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[585].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1020].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            36,
            0,
            "fstat",
            "fstat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("statbuf".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            37,
            0,
            "fsync",
            "fsync",
            0,
            vec![Param {
                name: String::into_boxed_str("fd".to_string()),
                ty: tys[972].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            38,
            0,
            "ftruncate",
            "ftruncate",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            39,
            0,
            "get_root_resource",
            "get_root_resource",
            0,
            vec![],
            Some(tys[1029].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            40,
            0,
            "getcwd",
            "getcwd",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("buf".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[258].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            41,
            0,
            "getgid",
            "getgid",
            0,
            vec![],
            Some(tys[973].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            42,
            0,
            "getpid",
            "getpid",
            0,
            vec![],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            43,
            0,
            "getuid",
            "getuid",
            0,
            vec![],
            Some(tys[975].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            44,
            0,
            "lchown",
            "lchown",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("uid".to_string()),
                    ty: tys[975].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("gid".to_string()),
                    ty: tys[973].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            45,
            0,
            "link",
            "link",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("old".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("new".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            46,
            0,
            "linkat",
            "linkat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("oldfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("old".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("newfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("new".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[230].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            47,
            0,
            "lseek",
            "lseek",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("whence".to_string()),
                    ty: tys[213].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            48,
            0,
            "lstat",
            "lstat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("statbuf".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            49,
            0,
            "mkdir",
            "mkdir",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mode".to_string()),
                    ty: tys[232].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            50,
            0,
            "mkdirat",
            "mkdirat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mode".to_string()),
                    ty: tys[232].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            51,
            0,
            "open",
            "open",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[212].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mode".to_string()),
                    ty: tys[232].clone(),
                    dir: None,
                },
            ],
            Some(tys[972].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            52,
            0,
            "openat",
            "openat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[971].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[212].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mode".to_string()),
                    ty: tys[232].clone(),
                    dir: None,
                },
            ],
            Some(tys[972].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            53,
            0,
            "pipe",
            "pipe",
            0,
            vec![Param {
                name: String::into_boxed_str("pipefd".to_string()),
                ty: tys[915].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            54,
            0,
            "poll",
            "poll",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fds".to_string()),
                    ty: tys[634].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("nfds".to_string()),
                    ty: tys[261].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("timeout".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            55,
            0,
            "ppoll",
            "ppoll",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fds".to_string()),
                    ty: tys[634].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("nfds".to_string()),
                    ty: tys[261].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("tsp".to_string()),
                    ty: tys[648].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("sigmask".to_string()),
                    ty: tys[656].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[268].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            56,
            0,
            "preadv",
            "preadv",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vec".to_string()),
                    ty: tys[671].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vlen".to_string()),
                    ty: tys[270].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("off".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            57,
            0,
            "pwritev",
            "pwritev",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vec".to_string()),
                    ty: tys[687].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vlen".to_string()),
                    ty: tys[270].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("off".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            58,
            0,
            "read",
            "read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buf".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("count".to_string()),
                    ty: tys[258].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            59,
            0,
            "readlink",
            "readlink",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buf".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("siz".to_string()),
                    ty: tys[258].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            60,
            0,
            "readlinkat",
            "readlinkat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buf".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("siz".to_string()),
                    ty: tys[258].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            61,
            0,
            "readv",
            "readv",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vec".to_string()),
                    ty: tys[671].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vlen".to_string()),
                    ty: tys[270].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            62,
            0,
            "rename",
            "rename",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("old".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("new".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            63,
            0,
            "renameat",
            "renameat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("oldfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("old".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("newfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("new".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            64,
            0,
            "rmdir",
            "rmdir",
            0,
            vec![Param {
                name: String::into_boxed_str("path".to_string()),
                ty: tys[273].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            65,
            0,
            "select",
            "select",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("n".to_string()),
                    ty: tys[263].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("inp".to_string()),
                    ty: tys[947].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("outp".to_string()),
                    ty: tys[947].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("exp".to_string()),
                    ty: tys[947].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("tvp".to_string()),
                    ty: tys[951].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            66,
            0,
            "stat",
            "stat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("statbuf".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            67,
            0,
            "symlink",
            "symlink",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("old".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("new".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            68,
            0,
            "symlinkat",
            "symlinkat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("old".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("newfd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("new".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            69,
            0,
            "sync",
            "sync",
            0,
            vec![],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            70,
            0,
            "syz_builtin0",
            "syz_builtin0",
            0,
            vec![Param {
                name: String::into_boxed_str("a".to_string()),
                ty: tys[277].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: true,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            71,
            0,
            "syz_builtin1",
            "syz_builtin1",
            0,
            vec![Param {
                name: String::into_boxed_str("a".to_string()),
                ty: tys[961].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: true,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            72,
            0,
            "syz_execute_func",
            "syz_execute_func",
            0,
            vec![Param {
                name: String::into_boxed_str("text".to_string()),
                ty: tys[287].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            73,
            0,
            "syz_future_time",
            "syz_future_time",
            0,
            vec![Param {
                name: String::into_boxed_str("when".to_string()),
                ty: tys[244].clone(),
                dir: None,
            }],
            Some(tys[1033].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            74,
            0,
            "syz_job_default",
            "syz_job_default",
            0,
            vec![],
            Some(tys[1026].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            75,
            0,
            "syz_mmap",
            "syz_mmap",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("addr".to_string()),
                    ty: tys[1038].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[257].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            76,
            0,
            "syz_process_self",
            "syz_process_self",
            0,
            vec![],
            Some(tys[1028].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            77,
            0,
            "syz_thread_self",
            "syz_thread_self",
            0,
            vec![],
            Some(tys[1032].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            78,
            0,
            "syz_vmar_root_self",
            "syz_vmar_root_self",
            0,
            vec![],
            Some(tys[1036].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            79,
            0,
            "truncate",
            "truncate",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("file".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            80,
            0,
            "unlink",
            "unlink",
            0,
            vec![Param {
                name: String::into_boxed_str("path".to_string()),
                ty: tys[273].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            81,
            0,
            "unlinkat",
            "unlinkat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("path".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[217].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            82,
            0,
            "utime",
            "utime",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("filename".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("times".to_string()),
                    ty: tys[322].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            83,
            0,
            "utimensat",
            "utimensat",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("dir".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("pathname".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("times".to_string()),
                    ty: tys[330].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[218].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            84,
            0,
            "utimes",
            "utimes",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("filename".to_string()),
                    ty: tys[273].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("times".to_string()),
                    ty: tys[330].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            85,
            0,
            "write",
            "write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buf".to_string()),
                    ty: tys[597].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("count".to_string()),
                    ty: tys[258].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            86,
            0,
            "writev",
            "writev",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("fd".to_string()),
                    ty: tys[972].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vec".to_string()),
                    ty: tys[687].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vlen".to_string()),
                    ty: tys[270].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            87,
            0,
            "zx_cache_flush",
            "zx_cache_flush",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("addr".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("flags".to_string()),
                    ty: tys[223].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            88,
            0,
            "zx_channel_call",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[976].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[384].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            89,
            0,
            "zx_channel_call$fuchsia_cobalt_ControllerBlockUntilEmpty",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[977].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[450].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            90,
            0,
            "zx_channel_call$fuchsia_cobalt_ControllerGenerateAggregatedObservations",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[977].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[477].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            91,
            0,
            "zx_channel_call$fuchsia_cobalt_ControllerGetFailedSendAttempts",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[977].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[485].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            92,
            0,
            "zx_channel_call$fuchsia_cobalt_ControllerGetNumEventAggregatorRuns",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[977].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[492].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            93,
            0,
            "zx_channel_call$fuchsia_cobalt_ControllerGetNumObservationsAdded",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[977].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[495].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            94,
            0,
            "zx_channel_call$fuchsia_cobalt_ControllerGetNumSendAttempts",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[977].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[498].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            95,
            0,
            "zx_channel_call$fuchsia_cobalt_ControllerListenForInitialized",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[977].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[502].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            96,
            0,
            "zx_channel_call$fuchsia_cobalt_ControllerRequestSendSoon",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[977].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[505].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            97,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerBaseEndTimer",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[979].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[509].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            98,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerBaseLogElapsedTime",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[979].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[512].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            99,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerBaseLogEvent",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[979].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[515].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            100,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerBaseLogEventCount",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[979].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[519].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            101,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerBaseLogFrameRate",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[979].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[522].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            102,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerBaseLogMemoryUsage",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[979].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[525].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            103,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerBaseStartTimer",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[979].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[528].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            104,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerEndTimer",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[531].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            105,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectId",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[981].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[534].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            106,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectSpec",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[981].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[537].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            107,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerFactoryCreateLoggerSimpleFromProjectId",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[981].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[540].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            108,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerLogCobaltEvent",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[543].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            109,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerLogCobaltEvents",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[547].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            110,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerLogCustomEvent",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[550].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            111,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerLogElapsedTime",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[554].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            112,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerLogEvent",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[557].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            113,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerLogEventCount",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[560].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            114,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerLogFrameRate",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[563].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            115,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerLogIntHistogram",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[567].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            116,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerLogMemoryUsage",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[570].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            117,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerSimpleEndTimer",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[983].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[574].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            118,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerSimpleLogElapsedTime",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[983].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[577].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            119,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerSimpleLogEvent",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[983].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[580].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            120,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerSimpleLogEventCount",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[983].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[583].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            121,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerSimpleLogFrameRate",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[983].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[587].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            122,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerSimpleLogIntHistogram",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[983].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[591].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            123,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerSimpleLogMemoryUsage",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[983].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[594].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            124,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerSimpleStartTimer",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[983].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[598].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            125,
            0,
            "zx_channel_call$fuchsia_cobalt_LoggerStartTimer",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[985].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[601].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            126,
            0,
            "zx_channel_call$fuchsia_cobalt_MetricEventLoggerFactoryCreateMetricEventLogger",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[987].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[604].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            127,
            0,
            "zx_channel_call$fuchsia_cobalt_MetricEventLoggerLogCustomEvent",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[989].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[607].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            128,
            0,
            "zx_channel_call$fuchsia_cobalt_MetricEventLoggerLogInteger",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[989].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[610].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            129,
            0,
            "zx_channel_call$fuchsia_cobalt_MetricEventLoggerLogIntegerHistogram",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[989].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[613].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            130,
            0,
            "zx_channel_call$fuchsia_cobalt_MetricEventLoggerLogMetricEvents",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[989].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[616].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            131,
            0,
            "zx_channel_call$fuchsia_cobalt_MetricEventLoggerLogOccurrence",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[989].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[619].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            132,
            0,
            "zx_channel_call$fuchsia_cobalt_MetricEventLoggerLogString",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[989].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[622].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            133,
            0,
            "zx_channel_call$fuchsia_cobalt_SystemDataUpdaterSetChannel",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[991].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[625].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            134,
            0,
            "zx_channel_call$fuchsia_cobalt_SystemDataUpdaterSetExperimentState",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[991].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[628].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            135,
            0,
            "zx_channel_call$fuchsia_cobalt_SystemDataUpdaterSetSoftwareDistributionInfo",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[991].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[631].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            136,
            0,
            "zx_channel_call$fuchsia_devicesettings_DeviceSettingsManagerGetInteger",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[993].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[635].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            137,
            0,
            "zx_channel_call$fuchsia_devicesettings_DeviceSettingsManagerGetString",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[993].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[638].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            138,
            0,
            "zx_channel_call$fuchsia_devicesettings_DeviceSettingsManagerSetInteger",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[993].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[641].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            139,
            0,
            "zx_channel_call$fuchsia_devicesettings_DeviceSettingsManagerSetString",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[993].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[645].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            140,
            0,
            "zx_channel_call$fuchsia_devicesettings_DeviceSettingsManagerWatch",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[993].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[649].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            141,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceConfigMulticastAddMac",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[652].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            142,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceConfigMulticastDeleteMac",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[655].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            143,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceConfigMulticastSetPromiscuousMode",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[659].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            144,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceConfigMulticastTestFilter",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[662].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            145,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceDumpRegisters",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[665].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            146,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceGetFifos",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[668].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            147,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceGetInfo",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[672].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            148,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceGetStatus",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[675].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            149,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceListenStart",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[678].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            150,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceListenStop",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[681].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            151,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceSetClientName",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[684].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            152,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceSetIOBuffer",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[688].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            153,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceSetPromiscuousMode",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[691].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            154,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceStart",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[694].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            155,
            0,
            "zx_channel_call$fuchsia_hardware_ethernet_DeviceStop",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[997].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[697].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            156,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminClose",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[700].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            157,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminDescribe",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[704].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            158,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminGetAttr",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[707].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            159,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminGetDevicePath",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[710].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            160,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminGetToken",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[713].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            161,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminLink",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[716].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            162,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminMount",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[719].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            163,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminMountAndCreate",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[722].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            164,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminNodeGetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[725].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            165,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminNodeSetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[729].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            166,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminQueryFilesystem",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[732].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            167,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminReadDirents",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[276].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            168,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminRename",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[280].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            169,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminRewind",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[283].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            170,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminSetAttr",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[286].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            171,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminSync",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[290].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            172,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminUnlink",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[293].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            173,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminUnmount",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[296].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            174,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminUnmountNode",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[299].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            175,
            0,
            "zx_channel_call$fuchsia_io_DirectoryAdminWatch",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[302].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            176,
            0,
            "zx_channel_call$fuchsia_io_DirectoryClose",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[305].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            177,
            0,
            "zx_channel_call$fuchsia_io_DirectoryDescribe",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[308].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            178,
            0,
            "zx_channel_call$fuchsia_io_DirectoryGetAttr",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[311].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            179,
            0,
            "zx_channel_call$fuchsia_io_DirectoryGetToken",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[314].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            180,
            0,
            "zx_channel_call$fuchsia_io_DirectoryLink",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[317].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            181,
            0,
            "zx_channel_call$fuchsia_io_DirectoryNodeGetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[320].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            182,
            0,
            "zx_channel_call$fuchsia_io_DirectoryNodeSetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[324].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            183,
            0,
            "zx_channel_call$fuchsia_io_DirectoryReadDirents",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[327].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            184,
            0,
            "zx_channel_call$fuchsia_io_DirectoryRename",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[331].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            185,
            0,
            "zx_channel_call$fuchsia_io_DirectoryRewind",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[334].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            186,
            0,
            "zx_channel_call$fuchsia_io_DirectorySetAttr",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[337].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            187,
            0,
            "zx_channel_call$fuchsia_io_DirectorySync",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[340].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            188,
            0,
            "zx_channel_call$fuchsia_io_DirectoryUnlink",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[343].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            189,
            0,
            "zx_channel_call$fuchsia_io_DirectoryWatch",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[347].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            190,
            0,
            "zx_channel_call$fuchsia_io_FileClose",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[350].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            191,
            0,
            "zx_channel_call$fuchsia_io_FileDescribe",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[353].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            192,
            0,
            "zx_channel_call$fuchsia_io_FileGetAttr",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[356].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            193,
            0,
            "zx_channel_call$fuchsia_io_FileGetBuffer",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[359].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            194,
            0,
            "zx_channel_call$fuchsia_io_FileGetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[363].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            195,
            0,
            "zx_channel_call$fuchsia_io_FileNodeGetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[366].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            196,
            0,
            "zx_channel_call$fuchsia_io_FileNodeSetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[369].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            197,
            0,
            "zx_channel_call$fuchsia_io_FileRead",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[372].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            198,
            0,
            "zx_channel_call$fuchsia_io_FileReadAt",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[375].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            199,
            0,
            "zx_channel_call$fuchsia_io_FileSeek",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[378].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            200,
            0,
            "zx_channel_call$fuchsia_io_FileSetAttr",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[381].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            201,
            0,
            "zx_channel_call$fuchsia_io_FileSetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[385].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            202,
            0,
            "zx_channel_call$fuchsia_io_FileSync",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[388].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            203,
            0,
            "zx_channel_call$fuchsia_io_FileTruncate",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[391].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            204,
            0,
            "zx_channel_call$fuchsia_io_FileWrite",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[394].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            205,
            0,
            "zx_channel_call$fuchsia_io_FileWriteAt",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[397].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            206,
            0,
            "zx_channel_call$fuchsia_io_NodeClose",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1007].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[400].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            207,
            0,
            "zx_channel_call$fuchsia_io_NodeDescribe",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1007].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[403].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            208,
            0,
            "zx_channel_call$fuchsia_io_NodeGetAttr",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1007].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[406].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            209,
            0,
            "zx_channel_call$fuchsia_io_NodeNodeGetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1007].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[409].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            210,
            0,
            "zx_channel_call$fuchsia_io_NodeNodeSetFlags",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1007].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[412].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            211,
            0,
            "zx_channel_call$fuchsia_io_NodeSetAttr",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1007].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[415].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            212,
            0,
            "zx_channel_call$fuchsia_io_NodeSync",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1007].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[418].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            213,
            0,
            "zx_channel_call$fuchsia_ldsvc_LoaderClone",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1009].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[422].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            214,
            0,
            "zx_channel_call$fuchsia_ldsvc_LoaderConfig",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1009].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[425].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            215,
            0,
            "zx_channel_call$fuchsia_ldsvc_LoaderLoadObject",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1009].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[428].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            216,
            0,
            "zx_channel_call$fuchsia_net_NameLookupLookupHostname",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1013].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[432].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            217,
            0,
            "zx_channel_call$fuchsia_net_NameLookupLookupIp",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1013].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[435].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            218,
            0,
            "zx_channel_call$fuchsia_process_LauncherCreateWithoutStarting",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1015].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[438].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            219,
            0,
            "zx_channel_call$fuchsia_process_LauncherLaunch",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1015].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[441].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            220,
            0,
            "zx_channel_call$fuchsia_process_ResolverResolve",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1017].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[444].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            221,
            0,
            "zx_channel_call$fuchsia_scpi_SystemControllerGetDvfsInfo",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1019].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[447].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            222,
            0,
            "zx_channel_call$fuchsia_scpi_SystemControllerGetSystemStatus",
            "zx_channel_call",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1019].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("args".to_string()),
                    ty: tys[451].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            223,
            0,
            "zx_channel_create",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[764].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[764].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            224,
            0,
            "zx_channel_create$fuchsia_cobalt_Controller",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[781].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[745].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            225,
            0,
            "zx_channel_create$fuchsia_cobalt_Logger",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[866].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[790].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            226,
            0,
            "zx_channel_create$fuchsia_cobalt_LoggerBase",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[854].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[803].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            227,
            0,
            "zx_channel_create$fuchsia_cobalt_LoggerFactory",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[869].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[843].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            228,
            0,
            "zx_channel_create$fuchsia_cobalt_LoggerSimple",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[892].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[848].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            229,
            0,
            "zx_channel_create$fuchsia_cobalt_MetricEventLogger",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[909].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[850].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            230,
            0,
            "zx_channel_create$fuchsia_cobalt_MetricEventLoggerFactory",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[906].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[855].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            231,
            0,
            "zx_channel_create$fuchsia_cobalt_SystemDataUpdater",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[917].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[859].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            232,
            0,
            "zx_channel_create$fuchsia_devicesettings_DeviceSettingsManager",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[921].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[863].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            233,
            0,
            "zx_channel_create$fuchsia_devicesettings_DeviceSettingsWatcher",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[927].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[865].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            234,
            0,
            "zx_channel_create$fuchsia_hardware_ethernet_Device",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[929].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[868].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            235,
            0,
            "zx_channel_create$fuchsia_io_Directory",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[958].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[870].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            236,
            0,
            "zx_channel_create$fuchsia_io_DirectoryAdmin",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[949].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[872].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            237,
            0,
            "zx_channel_create$fuchsia_io_DirectoryWatcher",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[810].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[874].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            238,
            0,
            "zx_channel_create$fuchsia_io_File",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[762].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[877].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            239,
            0,
            "zx_channel_create$fuchsia_io_Node",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[783].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[878].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            240,
            0,
            "zx_channel_create$fuchsia_ldsvc_Loader",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[792].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[879].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            241,
            0,
            "zx_channel_create$fuchsia_net_Connectivity",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[811].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[882].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            242,
            0,
            "zx_channel_create$fuchsia_net_NameLookup",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[796].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[887].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            243,
            0,
            "zx_channel_create$fuchsia_process_Launcher",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[801].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[890].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            244,
            0,
            "zx_channel_create$fuchsia_process_Resolver",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[805].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[896].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            245,
            0,
            "zx_channel_create$fuchsia_scpi_SystemController",
            "zx_channel_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[807].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[901].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            246,
            0,
            "zx_channel_read",
            "zx_channel_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[976].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[224].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[767].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[260].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[262].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            247,
            0,
            "zx_channel_read$fuchsia_io_DirectoryAdminOnOpen",
            "zx_channel_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[797].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[812].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            248,
            0,
            "zx_channel_read$fuchsia_io_DirectoryOnOpen",
            "zx_channel_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[797].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[813].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            249,
            0,
            "zx_channel_read$fuchsia_io_FileOnOpen",
            "zx_channel_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[797].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[814].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            250,
            0,
            "zx_channel_read$fuchsia_io_NodeOnOpen",
            "zx_channel_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1007].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[797].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[815].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            251,
            0,
            "zx_channel_read$fuchsia_net_ConnectivityOnNetworkReachable",
            "zx_channel_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1011].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[797].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[816].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            252,
            0,
            "zx_channel_read_etc",
            "zx_channel_read_etc",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[976].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[767].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[260].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[262].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_bytes".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual_handles".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            253,
            0,
            "zx_channel_write",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[976].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[597].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[260].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[360].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[262].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            254,
            0,
            "zx_channel_write$fuchsia_devicesettings_DeviceSettingsWatcherOnChangeSettings",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[995].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[453].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[455].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            255,
            0,
            "zx_channel_write$fuchsia_io_DirectoryAdminClone",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[456].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[457].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            256,
            0,
            "zx_channel_write$fuchsia_io_DirectoryAdminOpen",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[999].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[458].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[459].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            257,
            0,
            "zx_channel_write$fuchsia_io_DirectoryClone",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[460].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[461].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            258,
            0,
            "zx_channel_write$fuchsia_io_DirectoryOpen",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1003].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[462].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[464].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            259,
            0,
            "zx_channel_write$fuchsia_io_DirectoryWatcherOnEvent",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1001].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[465].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[466].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            260,
            0,
            "zx_channel_write$fuchsia_io_FileClone",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1005].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[467].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[468].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            261,
            0,
            "zx_channel_write$fuchsia_io_NodeClone",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1007].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[469].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[470].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            262,
            0,
            "zx_channel_write$fuchsia_ldsvc_LoaderDone",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1009].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[471].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[472].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            263,
            0,
            "zx_channel_write$fuchsia_process_LauncherAddArgs",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1015].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[473].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[474].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            264,
            0,
            "zx_channel_write$fuchsia_process_LauncherAddEnvirons",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1015].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[475].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[476].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            265,
            0,
            "zx_channel_write$fuchsia_process_LauncherAddHandles",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1015].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[478].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[479].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            266,
            0,
            "zx_channel_write$fuchsia_process_LauncherAddNames",
            "zx_channel_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1015].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("bytes".to_string()),
                    ty: tys[480].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_bytes".to_string()),
                    ty: tys[249].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[481].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[250].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            267,
            0,
            "zx_clock_get",
            "zx_clock_get",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("clock_id".to_string()),
                    ty: tys[206].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("zx_time".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: true,
                brk_ret: false,
            },
        ),
        Syscall::new(
            268,
            0,
            "zx_clock_get_monotonic",
            "zx_clock_get_monotonic",
            0,
            vec![],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: true,
                brk_ret: false,
            },
        ),
        Syscall::new(
            269,
            0,
            "zx_cprng_add_entropy",
            "zx_cprng_add_entropy",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[597].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[259].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            270,
            0,
            "zx_cprng_draw",
            "zx_cprng_draw",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[259].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            271,
            0,
            "zx_deadline_after",
            "zx_deadline_after",
            0,
            vec![Param {
                name: String::into_boxed_str("ns".to_string()),
                ty: tys[242].clone(),
                dir: None,
            }],
            Some(tys[1033].clone()),
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: true,
                brk_ret: false,
            },
        ),
        Syscall::new(
            272,
            0,
            "zx_debuglog_create",
            "zx_debuglog_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("root_resource".to_string()),
                    ty: tys[1029].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[231].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[818].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            273,
            0,
            "zx_debuglog_read",
            "zx_debuglog_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1021].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("ptr".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[267].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: true,
                brk_ret: false,
            },
        ),
        Syscall::new(
            274,
            0,
            "zx_debuglog_write",
            "zx_debuglog_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1021].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("ptr".to_string()),
                    ty: tys[597].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[267].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            275,
            0,
            "zx_event_create",
            "zx_event_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[767].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            276,
            0,
            "zx_eventpair_create",
            "zx_eventpair_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[767].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[767].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            277,
            0,
            "zx_fifo_create",
            "zx_fifo_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("elem_count".to_string()),
                    ty: tys[209].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("elem_size".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[936].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[936].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            278,
            0,
            "zx_fifo_read",
            "zx_fifo_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1022].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[259].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_entries_read".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            279,
            0,
            "zx_fifo_write",
            "zx_fifo_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1022].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[259].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[597].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_entries_written".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            280,
            0,
            "zx_futex_requeue",
            "zx_futex_requeue",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("value_ptr".to_string()),
                    ty: tys[644].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("wake_count".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("current_value".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("requeue_ptr".to_string()),
                    ty: tys[644].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("requeue_count".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("new_requeue_owner".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            281,
            0,
            "zx_futex_wait",
            "zx_futex_wait",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("value_ptr".to_string()),
                    ty: tys[644].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("current_value".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("new_futext_owner".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            282,
            0,
            "zx_futex_wake",
            "zx_futex_wake",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("value_ptr".to_string()),
                    ty: tys[644].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("wake_count".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            283,
            0,
            "zx_futex_wake_handle_close_thread_exit",
            "zx_futex_wake_handle_close_thread_exit",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("value_ptr".to_string()),
                    ty: tys[644].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("wake_count".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("new_value".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("close_handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            284,
            0,
            "zx_guest_create",
            "zx_guest_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("root_resource".to_string()),
                    ty: tys[1029].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("guest".to_string()),
                    ty: tys[819].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vmar".to_string()),
                    ty: tys[751].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            285,
            0,
            "zx_guest_set_trap",
            "zx_guest_set_trap",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("guest".to_string()),
                    ty: tys[1023].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("kind".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vaddr".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("port".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("key".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            286,
            0,
            "zx_handle_close",
            "zx_handle_close",
            0,
            vec![Param {
                name: String::into_boxed_str("handle".to_string()),
                ty: tys[1024].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            287,
            0,
            "zx_handle_close_many",
            "zx_handle_close_many",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handles".to_string()),
                    ty: tys[360].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("num_handles".to_string()),
                    ty: tys[262].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            288,
            0,
            "zx_handle_duplicate",
            "zx_handle_duplicate",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("rights".to_string()),
                    ty: tys[222].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[767].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            289,
            0,
            "zx_handle_replace",
            "zx_handle_replace",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("rights".to_string()),
                    ty: tys[222].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[767].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            290,
            0,
            "zx_interrupt_ack",
            "zx_interrupt_ack",
            0,
            vec![Param {
                name: String::into_boxed_str("interrupt".to_string()),
                ty: tys[1025].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            291,
            0,
            "zx_interrupt_create",
            "zx_interrupt_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("src_obj".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("src_num".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[88].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("interrupt".to_string()),
                    ty: tys[820].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            292,
            0,
            "zx_interrupt_destroy",
            "zx_interrupt_destroy",
            0,
            vec![Param {
                name: String::into_boxed_str("interrupt".to_string()),
                ty: tys[1025].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            293,
            0,
            "zx_job_create",
            "zx_job_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("job".to_string()),
                    ty: tys[1026].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[742].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            294,
            0,
            "zx_job_set_policy",
            "zx_job_set_policy",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("job_handle".to_string()),
                    ty: tys[1026].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[211].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("policy".to_string()),
                    ty: tys[483].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("count".to_string()),
                    ty: tys[266].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            295,
            0,
            "zx_nanosleep",
            "zx_nanosleep",
            0,
            vec![Param {
                name: String::into_boxed_str("deadline".to_string()),
                ty: tys[1033].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            296,
            0,
            "zx_object_get_child",
            "zx_object_get_child",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("koid".to_string()),
                    ty: tys[974].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("rights".to_string()),
                    ty: tys[222].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[767].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            297,
            0,
            "zx_object_get_info$ZX_INFO_BTI",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("resource_handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[97].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[821].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            298,
            0,
            "zx_object_get_info$ZX_INFO_CPU_STATS",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("root_resource".to_string()),
                    ty: tys[1029].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[88].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[822].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            299,
            0,
            "zx_object_get_info$ZX_INFO_HANDLE_BASIC",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[117].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[823].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            300,
            0,
            "zx_object_get_info$ZX_INFO_HANDLE_COUNT",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[95].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[824].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            301,
            0,
            "zx_object_get_info$ZX_INFO_HANDLE_VALID",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[96].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            302,
            0,
            "zx_object_get_info$ZX_INFO_JOB",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[107].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[825].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            303,
            0,
            "zx_object_get_info$ZX_INFO_JOB_CHILDREN",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1026].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[195].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[826].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            304,
            0,
            "zx_object_get_info$ZX_INFO_JOB_PROCESSES",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1026].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[198].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[826].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            305,
            0,
            "zx_object_get_info$ZX_INFO_KMEM_STATS",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("root_resource".to_string()),
                    ty: tys[1029].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[91].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[827].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            306,
            0,
            "zx_object_get_info$ZX_INFO_PROCESS",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[135].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[828].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            307,
            0,
            "zx_object_get_info$ZX_INFO_PROCESS_HANDLE_STATS",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[98].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[829].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            308,
            0,
            "zx_object_get_info$ZX_INFO_PROCESS_MAPS",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[81].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[831].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            309,
            0,
            "zx_object_get_info$ZX_INFO_PROCESS_THREADS",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[149].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[826].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            310,
            0,
            "zx_object_get_info$ZX_INFO_PROCESS_VMOS",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[83].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[833].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            311,
            0,
            "zx_object_get_info$ZX_INFO_RESOURCE",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("resource_handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[92].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[834].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            312,
            0,
            "zx_object_get_info$ZX_INFO_SOCKET",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1036].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[100].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[835].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            313,
            0,
            "zx_object_get_info$ZX_INFO_TASK_STATS",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[79].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[836].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            314,
            0,
            "zx_object_get_info$ZX_INFO_THREAD",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[75].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[837].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            315,
            0,
            "zx_object_get_info$ZX_INFO_THREAD_EXCEPTION_REPORT",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1032].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[76].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[838].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            316,
            0,
            "zx_object_get_info$ZX_INFO_THREAD_STATS",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1032].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[85].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[839].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            317,
            0,
            "zx_object_get_info$ZX_INFO_VMAR",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1036].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[184].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[840].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            318,
            0,
            "zx_object_get_info$ZX_INFO_VMO",
            "zx_object_get_info",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1036].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("topic".to_string()),
                    ty: tys[104].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[832].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("avail".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            319,
            0,
            "zx_object_get_property",
            "zx_object_get_property",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("property".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("value".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[269].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            320,
            0,
            "zx_object_set_property",
            "zx_object_set_property",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("property".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("value".to_string()),
                    ty: tys[597].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[269].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            321,
            0,
            "zx_object_signal",
            "zx_object_signal",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("clear_mask".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("set_mask".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            322,
            0,
            "zx_object_signal_peer",
            "zx_object_signal_peer",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("clear_mask".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("set_mask".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            323,
            0,
            "zx_object_wait_async",
            "zx_object_wait_async",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("port".to_string()),
                    ty: tys[1027].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("key".to_string()),
                    ty: tys[272].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("signals".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[204].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            324,
            0,
            "zx_object_wait_many",
            "zx_object_wait_many",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("items".to_string()),
                    ty: tys[486].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("count".to_string()),
                    ty: tys[264].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            325,
            0,
            "zx_object_wait_one",
            "zx_object_wait_one",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("signals".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("observed".to_string()),
                    ty: tys[925].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            326,
            0,
            "zx_port_cancel",
            "zx_port_cancel",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("port".to_string()),
                    ty: tys[1027].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("source".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("key".to_string()),
                    ty: tys[272].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            327,
            0,
            "zx_port_create",
            "zx_port_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[841].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            328,
            0,
            "zx_port_queue",
            "zx_port_queue",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1027].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("packet".to_string()),
                    ty: tys[487].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            329,
            0,
            "zx_port_wait",
            "zx_port_wait",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1027].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("packet".to_string()),
                    ty: tys[842].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            330,
            0,
            "zx_process_create",
            "zx_process_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("job".to_string()),
                    ty: tys[1026].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("name".to_string()),
                    ty: tys[488].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("name_len".to_string()),
                    ty: tys[265].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("proc_handle".to_string()),
                    ty: tys[746].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vmar_handle".to_string()),
                    ty: tys[751].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            331,
            0,
            "zx_process_exit",
            "zx_process_exit",
            0,
            vec![Param {
                name: String::into_boxed_str("ret_code".to_string()),
                ty: tys[242].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            332,
            0,
            "zx_process_read_memory",
            "zx_process_read_memory",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("process".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vaddr".to_string()),
                    ty: tys[876].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[259].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            333,
            0,
            "zx_process_start",
            "zx_process_start",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("process".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("thread".to_string()),
                    ty: tys[1032].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("entry".to_string()),
                    ty: tys[287].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("stack".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("arg1".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("arg2".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            334,
            0,
            "zx_socket_create",
            "zx_socket_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[214].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out0".to_string()),
                    ty: tys[952].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out1".to_string()),
                    ty: tys[952].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            335,
            0,
            "zx_socket_read",
            "zx_socket_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1030].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[234].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[259].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            336,
            0,
            "zx_socket_shutdown",
            "zx_socket_shutdown",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handlez".to_string()),
                    ty: tys[1030].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[235].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            337,
            0,
            "zx_socket_write",
            "zx_socket_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1030].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[215].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[597].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[259].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("actual".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            338,
            0,
            "zx_system_get_num_cpus",
            "zx_system_get_num_cpus",
            0,
            vec![],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            339,
            0,
            "zx_system_get_physmem",
            "zx_system_get_physmem",
            0,
            vec![],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            340,
            0,
            "zx_system_get_version",
            "zx_system_get_version",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("version".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("version_len".to_string()),
                    ty: tys[271].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            341,
            0,
            "zx_task_create_exception_channel",
            "zx_task_create_exception_channel",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("task".to_string()),
                    ty: tys[1031].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[226].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[764].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            342,
            0,
            "zx_thread_create",
            "zx_thread_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("process".to_string()),
                    ty: tys[1028].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("name".to_string()),
                    ty: tys[488].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("name_len".to_string()),
                    ty: tys[265].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[748].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            343,
            0,
            "zx_thread_exit",
            "zx_thread_exit",
            0,
            vec![],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            344,
            0,
            "zx_thread_read_state",
            "zx_thread_read_state",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1032].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("kind".to_string()),
                    ty: tys[240].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[899].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            345,
            0,
            "zx_thread_read_state$0",
            "zx_thread_read_state",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1032].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("kind".to_string()),
                    ty: tys[74].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[844].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            346,
            0,
            "zx_thread_start",
            "zx_thread_start",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1032].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("entry".to_string()),
                    ty: tys[287].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("stack".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("arg1".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("arg2".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            347,
            0,
            "zx_thread_write_state",
            "zx_thread_write_state",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1032].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("kind".to_string()),
                    ty: tys[240].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[588].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            348,
            0,
            "zx_thread_write_state$0",
            "zx_thread_write_state",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1032].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("kind".to_string()),
                    ty: tys[74].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[490].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[248].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            349,
            0,
            "zx_ticks_get",
            "zx_ticks_get",
            0,
            vec![],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: true,
                brk_ret: false,
            },
        ),
        Syscall::new(
            350,
            0,
            "zx_ticks_per_second",
            "zx_ticks_per_second",
            0,
            vec![],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            351,
            0,
            "zx_timer_cancel",
            "zx_timer_cancel",
            0,
            vec![Param {
                name: String::into_boxed_str("handle".to_string()),
                ty: tys[1034].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            352,
            0,
            "zx_timer_create",
            "zx_timer_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[216].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("clock_id".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[845].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            353,
            0,
            "zx_timer_set",
            "zx_timer_set",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1034].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("deadline".to_string()),
                    ty: tys[1033].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("slack".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            354,
            0,
            "zx_vcpu_create",
            "zx_vcpu_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("guest".to_string()),
                    ty: tys[1023].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vaddr".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[846].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            355,
            0,
            "zx_vcpu_interrupt",
            "zx_vcpu_interrupt",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("vcpu".to_string()),
                    ty: tys[1035].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vector".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            356,
            0,
            "zx_vcpu_read_state",
            "zx_vcpu_read_state",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("vcpu".to_string()),
                    ty: tys[1035].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("kind".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[597].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buflen".to_string()),
                    ty: tys[259].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            357,
            0,
            "zx_vcpu_resume",
            "zx_vcpu_resume",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("vcpu".to_string()),
                    ty: tys[1035].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("port_packet".to_string()),
                    ty: tys[842].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            358,
            0,
            "zx_vcpu_write_state",
            "zx_vcpu_write_state",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("vcpu".to_string()),
                    ty: tys[1035].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("kind".to_string()),
                    ty: tys[241].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buflen".to_string()),
                    ty: tys[259].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            359,
            0,
            "zx_vmar_allocate",
            "zx_vmar_allocate",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("parent_handle".to_string()),
                    ty: tys[1036].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[236].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[751].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("child_addr".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            360,
            0,
            "zx_vmar_destroy",
            "zx_vmar_destroy",
            0,
            vec![Param {
                name: String::into_boxed_str("handle".to_string()),
                ty: tys[1036].clone(),
                dir: None,
            }],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            361,
            0,
            "zx_vmar_map",
            "zx_vmar_map",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1036].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[237].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vmar_offset".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vmo".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("vmo_offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("mapped_addr".to_string()),
                    ty: tys[908].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            362,
            0,
            "zx_vmar_protect",
            "zx_vmar_protect",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1036].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[238].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("addr".to_string()),
                    ty: tys[1038].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[257].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            363,
            0,
            "zx_vmar_unmap",
            "zx_vmar_unmap",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1036].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("addr".to_string()),
                    ty: tys[1038].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[257].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            364,
            0,
            "zx_vmar_unmap_handle_close_thread_exit",
            "zx_vmar_unmap_handle_close_thread_exit",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("vmar_handle".to_string()),
                    ty: tys[1036].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("addr".to_string()),
                    ty: tys[1038].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[257].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("close_handle".to_string()),
                    ty: tys[1024].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            365,
            0,
            "zx_vmo_create",
            "zx_vmo_create",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[203].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[943].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            366,
            0,
            "zx_vmo_create_child",
            "zx_vmo_create_child",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("options".to_string()),
                    ty: tys[239].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[943].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            367,
            0,
            "zx_vmo_get_size",
            "zx_vmo_get_size",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[931].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            368,
            0,
            "zx_vmo_op_range$ZX_VMO_OP_CACHE_CLEAN",
            "zx_vmo_op_range",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("op".to_string()),
                    ty: tys[195].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("data".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            369,
            0,
            "zx_vmo_op_range$ZX_VMO_OP_CACHE_CLEAN_INVALIDATE",
            "zx_vmo_op_range",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("op".to_string()),
                    ty: tys[198].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("data".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            370,
            0,
            "zx_vmo_op_range$ZX_VMO_OP_CACHE_INVALIDATE",
            "zx_vmo_op_range",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("op".to_string()),
                    ty: tys[184].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("data".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            371,
            0,
            "zx_vmo_op_range$ZX_VMO_OP_CACHE_SYNC",
            "zx_vmo_op_range",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("op".to_string()),
                    ty: tys[172].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("data".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            372,
            0,
            "zx_vmo_op_range$ZX_VMO_OP_COMMIT",
            "zx_vmo_op_range",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("op".to_string()),
                    ty: tys[96].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("data".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            373,
            0,
            "zx_vmo_op_range$ZX_VMO_OP_DECOMMIT",
            "zx_vmo_op_range",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("op".to_string()),
                    ty: tys[117].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("data".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("buffer_size".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            374,
            0,
            "zx_vmo_read",
            "zx_vmo_read",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("data".to_string()),
                    ty: tys[903].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            375,
            0,
            "zx_vmo_replace_as_executable",
            "zx_vmo_replace_as_executable",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("res".to_string()),
                    ty: tys[199].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("out".to_string()),
                    ty: tys[943].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            376,
            0,
            "zx_vmo_set_cache_policy",
            "zx_vmo_set_cache_policy",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("cache_policy".to_string()),
                    ty: tys[219].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            377,
            0,
            "zx_vmo_set_size",
            "zx_vmo_set_size",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("size".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
        Syscall::new(
            378,
            0,
            "zx_vmo_write",
            "zx_vmo_write",
            0,
            vec![
                Param {
                    name: String::into_boxed_str("handle".to_string()),
                    ty: tys[1037].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("data".to_string()),
                    ty: tys[597].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("offset".to_string()),
                    ty: tys[242].clone(),
                    dir: None,
                },
                Param {
                    name: String::into_boxed_str("len".to_string()),
                    ty: tys[245].clone(),
                    dir: None,
                },
            ],
            None,
            SyscallAttr {
                disable: false,
                timeout: 0,
                prog_tmout: 0,
                ignore_ret: false,
                brk_ret: false,
            },
        ),
    ];
    (calls, tys)
}

fn types() -> Vec<Rc<Type>> {
    vec![
		Rc::new(Type::new(0, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1759), range:None})),
		Rc::new(Type::new(1, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1758), range:None})),
		Rc::new(Type::new(2, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1779), range:None})),
		Rc::new(Type::new(3, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1780), range:None})),
		Rc::new(Type::new(4, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1778), range:None})),
		Rc::new(Type::new(5, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1295), range:None})),
		Rc::new(Type::new(6, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1296), range:None})),
		Rc::new(Type::new(7, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1323), range:None})),
		Rc::new(Type::new(8, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1324), range:None})),
		Rc::new(Type::new(9, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1331), range:None})),
		Rc::new(Type::new(10, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(43), range:None})),
		Rc::new(Type::new(11, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1421), range:None})),
		Rc::new(Type::new(12, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1443), range:None})),
		Rc::new(Type::new(13, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(1328), range:None})),
		Rc::new(Type::new(14, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1742), range:None})),
		Rc::new(Type::new(15, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1745), range:None})),
		Rc::new(Type::new(16, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1785), range:None})),
		Rc::new(Type::new(17, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1760), range:None})),
		Rc::new(Type::new(18, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1294), range:None})),
		Rc::new(Type::new(19, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1322), range:None})),
		Rc::new(Type::new(20, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1332), range:None})),
		Rc::new(Type::new(21, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1330), range:None})),
		Rc::new(Type::new(22, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1420), range:None})),
		Rc::new(Type::new(23, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1329), range:None})),
		Rc::new(Type::new(24, "array", 0, 1, false, false, TypeKind::Array{elem: TypeRef::Id(1327), range:None})),
		Rc::new(Type::new(25, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(1024), range:None})),
		Rc::new(Type::new(26, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(1832), range:None})),
		Rc::new(Type::new(27, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(1834), range:None})),
		Rc::new(Type::new(28, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(1805), range:None})),
		Rc::new(Type::new(29, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(241), range:None})),
		Rc::new(Type::new(30, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(1293), range:None})),
		Rc::new(Type::new(31, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(974), range:None})),
		Rc::new(Type::new(32, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(1816), range:None})),
		Rc::new(Type::new(33, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(1821), range:None})),
		Rc::new(Type::new(34, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(1831), range:None})),
		Rc::new(Type::new(35, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(242), range:None})),
		Rc::new(Type::new(36, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(1794), range:None})),
		Rc::new(Type::new(37, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(1793), range:None})),
		Rc::new(Type::new(38, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(1040), range:None})),
		Rc::new(Type::new(39, "array", 144, 8, false, false, TypeKind::Array{elem: TypeRef::Id(242), range:Some((18, 18))})),
		Rc::new(Type::new(40, "array", 256, 4, false, false, TypeKind::Array{elem: TypeRef::Id(241), range:Some((64, 64))})),
		Rc::new(Type::new(41, "array", 3, 1, false, false, TypeKind::Array{elem: TypeRef::Id(66), range:Some((3, 3))})),
		Rc::new(Type::new(42, "array", 32, 8, false, false, TypeKind::Array{elem: TypeRef::Id(242), range:Some((4, 4))})),
		Rc::new(Type::new(43, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRand, ""))),
		Rc::new(Type::new(44, "array", 16, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(16, 16), ""))),
		Rc::new(Type::new(45, "array", 32, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(32, 32), ""))),
		Rc::new(Type::new(46, "array", 4, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(4, 4), ""))),
		Rc::new(Type::new(47, "array", 6, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(6, 6), ""))),
		Rc::new(Type::new(48, "array", 65536, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(65536, 65536), ""))),
		Rc::new(Type::new(49, "filename", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))),
		Rc::new(Type::new(50, "string", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_str(vec![], false), ""))),
		Rc::new(Type::new(51, "string", 28, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.net.NameLookup\x00"#, ], false), ""))),
		Rc::new(Type::new(52, "string", 30, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.net.Connectivity\x00"#, ], false), ""))),
		Rc::new(Type::new(53, "string", 30, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.process.Launcher\x00"#, ], false), ""))),
		Rc::new(Type::new(54, "string", 30, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.process.Resolver\x00"#, ], false), ""))),
		Rc::new(Type::new(55, "string", 31, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.cobalt.Controller\x00"#, ], false), ""))),
		Rc::new(Type::new(56, "string", 34, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.cobalt.LoggerFactory\x00"#, ], false), ""))),
		Rc::new(Type::new(57, "string", 35, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.scpi.SystemController\x00"#, ], false), ""))),
		Rc::new(Type::new(58, "string", 38, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.cobalt.SystemDataUpdater\x00"#, ], false), ""))),
		Rc::new(Type::new(59, "string", 45, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.cobalt.MetricEventLoggerFactory\x00"#, ], false), ""))),
		Rc::new(Type::new(60, "string", 50, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/fuchsia.devicesettings.DeviceSettingsManager\x00"#, ], false), ""))),
		Rc::new(Type::new(61, "string", 6, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br#"/svc/\x00"#, ], false), ""))),
		Rc::new(Type::new(62, "stringnoz", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_str(vec![], true), ""))),
		Rc::new(Type::new(63, "text", 0, 1, false, true, TypeKind::new_buffer(BufferKind::Text(TextKind::Target),""))),
		Rc::new(Type::new(64, "void", 0, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(0, 0), ""))),
		Rc::new(Type::new(65, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})),
		Rc::new(Type::new(66, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})),
		Rc::new(Type::new(67, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})),
		Rc::new(Type::new(68, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})),
		Rc::new(Type::new(69, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})),
		Rc::new(Type::new(70, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3, pad: false})),
		Rc::new(Type::new(71, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4, pad: false})),
		Rc::new(Type::new(72, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5, pad: false})),
		Rc::new(Type::new(73, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7, pad: false})),
		Rc::new(Type::new(74, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})),
		Rc::new(Type::new(75, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 10, pad: false})),
		Rc::new(Type::new(76, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 11, pad: false})),
		Rc::new(Type::new(77, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1209179889647747072, pad: false})),
		Rc::new(Type::new(78, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1265176354698035200, pad: false})),
		Rc::new(Type::new(79, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 12, pad: false})),
		Rc::new(Type::new(80, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1395379817284632576, pad: false})),
		Rc::new(Type::new(81, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 13, pad: false})),
		Rc::new(Type::new(82, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1477455143367606272, pad: false})),
		Rc::new(Type::new(83, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 14, pad: false})),
		Rc::new(Type::new(84, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1509991341700939776, pad: false})),
		Rc::new(Type::new(85, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 15, pad: false})),
		Rc::new(Type::new(86, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1646690903668031488, pad: false})),
		Rc::new(Type::new(87, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1682143474989662208, pad: false})),
		Rc::new(Type::new(88, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 16, pad: false})),
		Rc::new(Type::new(89, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1728936181606907904, pad: false})),
		Rc::new(Type::new(90, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1788877243406090240, pad: false})),
		Rc::new(Type::new(91, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 17, pad: false})),
		Rc::new(Type::new(92, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 18, pad: false})),
		Rc::new(Type::new(93, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1936186706034163712, pad: false})),
		Rc::new(Type::new(94, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1984502369399865344, pad: false})),
		Rc::new(Type::new(95, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 19, pad: false})),
		Rc::new(Type::new(96, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})),
		Rc::new(Type::new(97, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 20, pad: false})),
		Rc::new(Type::new(98, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 21, pad: false})),
		Rc::new(Type::new(99, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2261615557713330176, pad: false})),
		Rc::new(Type::new(100, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 22, pad: false})),
		Rc::new(Type::new(101, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2314278406587416576, pad: false})),
		Rc::new(Type::new(102, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2345193005658406912, pad: false})),
		Rc::new(Type::new(103, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2348638754840772608, pad: false})),
		Rc::new(Type::new(104, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 23, pad: false})),
		Rc::new(Type::new(105, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2441488624861052928, pad: false})),
		Rc::new(Type::new(106, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2446327292067053568, pad: false})),
		Rc::new(Type::new(107, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 24, pad: false})),
		Rc::new(Type::new(108, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2552164773823250432, pad: false})),
		Rc::new(Type::new(109, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2583718567107100672, pad: false})),
		Rc::new(Type::new(110, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 261153905885315072, pad: false})),
		Rc::new(Type::new(111, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2646667141100601344, pad: false})),
		Rc::new(Type::new(112, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2666737171087491072, pad: false})),
		Rc::new(Type::new(113, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2735727333842354176, pad: false})),
		Rc::new(Type::new(114, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2776554506979115008, pad: false})),
		Rc::new(Type::new(115, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2921091529562914816, pad: false})),
		Rc::new(Type::new(116, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2956004661582102528, pad: false})),
		Rc::new(Type::new(117, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})),
		Rc::new(Type::new(118, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3077242749305487360, pad: false})),
		Rc::new(Type::new(119, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3099682110886117376, pad: false})),
		Rc::new(Type::new(120, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3136513839156166656, pad: false})),
		Rc::new(Type::new(121, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3167576666138476544, pad: false})),
		Rc::new(Type::new(122, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3223129383757676544, pad: false})),
		Rc::new(Type::new(123, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3260696599407362048, pad: false})),
		Rc::new(Type::new(124, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3361158860873138176, pad: false})),
		Rc::new(Type::new(125, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3384189828428988416, pad: false})),
		Rc::new(Type::new(126, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3458431237243273216, pad: false})),
		Rc::new(Type::new(127, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3513418264719917056, pad: false})),
		Rc::new(Type::new(128, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3609561352454012928, pad: false})),
		Rc::new(Type::new(129, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3613565378665381888, pad: false})),
		Rc::new(Type::new(130, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 365609194151215104, pad: false})),
		Rc::new(Type::new(131, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3801485603913072640, pad: false})),
		Rc::new(Type::new(132, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 381505718517235712, pad: false})),
		Rc::new(Type::new(133, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3844094239289901056, pad: false})),
		Rc::new(Type::new(134, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3947768504932892672, pad: false})),
		Rc::new(Type::new(135, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3, pad: false})),
		Rc::new(Type::new(136, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4031126909545873408, pad: false})),
		Rc::new(Type::new(137, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4063087685340758016, pad: false})),
		Rc::new(Type::new(138, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4119408201378562048, pad: false})),
		Rc::new(Type::new(139, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4188689949463150592, pad: false})),
		Rc::new(Type::new(140, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4194979113024356352, pad: false})),
		Rc::new(Type::new(141, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4333802197016903680, pad: false})),
		Rc::new(Type::new(142, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4394809256814051328, pad: false})),
		Rc::new(Type::new(143, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4466724846348271616, pad: false})),
		Rc::new(Type::new(144, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4491534570314792960, pad: false})),
		Rc::new(Type::new(145, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4549704855752540160, pad: false})),
		Rc::new(Type::new(146, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4803997448303280128, pad: false})),
		Rc::new(Type::new(147, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4853839517276176384, pad: false})),
		Rc::new(Type::new(148, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4985684284435070976, pad: false})),
		Rc::new(Type::new(149, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4, pad: false})),
		Rc::new(Type::new(150, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5009665006699020288, pad: false})),
		Rc::new(Type::new(151, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5085703167836946432, pad: false})),
		Rc::new(Type::new(152, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5180313879959306240, pad: false})),
		Rc::new(Type::new(153, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5243927851761139712, pad: false})),
		Rc::new(Type::new(154, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5358264446730895360, pad: false})),
		Rc::new(Type::new(155, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5374114508140707840, pad: false})),
		Rc::new(Type::new(156, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5471756758504439808, pad: false})),
		Rc::new(Type::new(157, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5608278135163322368, pad: false})),
		Rc::new(Type::new(158, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5751022030375878656, pad: false})),
		Rc::new(Type::new(159, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5770859182941011968, pad: false})),
		Rc::new(Type::new(160, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5898268129351434240, pad: false})),
		Rc::new(Type::new(161, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5960890719622135808, pad: false})),
		Rc::new(Type::new(162, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6051974834097750016, pad: false})),
		Rc::new(Type::new(163, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6342739803594817536, pad: false})),
		Rc::new(Type::new(164, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 636987935404589056, pad: false})),
		Rc::new(Type::new(165, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6421203251160416256, pad: false})),
		Rc::new(Type::new(166, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6539947062396452864, pad: false})),
		Rc::new(Type::new(167, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6545502456564940800, pad: false})),
		Rc::new(Type::new(168, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6567538787004448768, pad: false})),
		Rc::new(Type::new(169, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6687262400539787264, pad: false})),
		Rc::new(Type::new(170, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6689692673424490496, pad: false})),
		Rc::new(Type::new(171, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6760968196867489792, pad: false})),
		Rc::new(Type::new(172, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6, pad: false})),
		Rc::new(Type::new(173, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7080291563556831232, pad: false})),
		Rc::new(Type::new(174, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7209297773944897536, pad: false})),
		Rc::new(Type::new(175, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7212132130237710336, pad: false})),
		Rc::new(Type::new(176, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7339581247477252096, pad: false})),
		Rc::new(Type::new(177, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7361570724118528000, pad: false})),
		Rc::new(Type::new(178, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7385103511358275584, pad: false})),
		Rc::new(Type::new(179, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7405779376547037184, pad: false})),
		Rc::new(Type::new(180, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7671161291188207616, pad: false})),
		Rc::new(Type::new(181, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7882340851697844224, pad: false})),
		Rc::new(Type::new(182, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7932902649815367680, pad: false})),
		Rc::new(Type::new(183, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7940519147249598464, pad: false})),
		Rc::new(Type::new(184, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7, pad: false})),
		Rc::new(Type::new(185, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8056508059087798272, pad: false})),
		Rc::new(Type::new(186, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8102817435855355904, pad: false})),
		Rc::new(Type::new(187, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8176789322586914816, pad: false})),
		Rc::new(Type::new(188, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8187595812490969088, pad: false})),
		Rc::new(Type::new(189, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8413578918384107520, pad: false})),
		Rc::new(Type::new(190, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 852681824369901568, pad: false})),
		Rc::new(Type::new(191, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8639255294892834816, pad: false})),
		Rc::new(Type::new(192, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8658864371809648640, pad: false})),
		Rc::new(Type::new(193, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8862236549358551040, pad: false})),
		Rc::new(Type::new(194, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8967315312257007616, pad: false})),
		Rc::new(Type::new(195, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8, pad: false})),
		Rc::new(Type::new(196, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 9106017750618210304, pad: false})),
		Rc::new(Type::new(197, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 9127566980226744320, pad: false})),
		Rc::new(Type::new(198, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 9, pad: false})),
		Rc::new(Type::new(199, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})),
		Rc::new(Type::new(200, "pad", 3, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})),
		Rc::new(Type::new(201, "pad", 4, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})),
		Rc::new(Type::new(202, "pad", 5, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})),
		Rc::new(Type::new(203, "vmo_create_options", 8, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})),
		Rc::new(Type::new(204, "wait_async_options", 8, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})),
		Rc::new(Type::new(205, "at_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![256, 1024, 2048, 4096, 4096, ], false))),
		Rc::new(Type::new(206, "clock_id", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))),
		Rc::new(Type::new(207, "fidl_alloc_presence", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, ], false))),
		Rc::new(Type::new(208, "fidl_handle_presence", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, ], false))),
		Rc::new(Type::new(209, "fifo_elem_count", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, ], false))),
		Rc::new(Type::new(210, "fuchsia_io_SeekOrigin", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))),
		Rc::new(Type::new(211, "job_policy_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))),
		Rc::new(Type::new(212, "open_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 16, 96, 128, 256, 512, 1024, 2048, 4096, 8192, 65536, 131072, 262144, 524288, 1048576, 4194304, ], false))),
		Rc::new(Type::new(213, "seek_whence", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))),
		Rc::new(Type::new(214, "socket_create_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))),
		Rc::new(Type::new(215, "socket_write_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 1, 2, ], false))),
		Rc::new(Type::new(216, "timer_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))),
		Rc::new(Type::new(217, "unlinkat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 512, ], false))),
		Rc::new(Type::new(218, "utimensat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 256, ], false))),
		Rc::new(Type::new(219, "vmo_cache_policy", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, ], false))),
		Rc::new(Type::new(220, "zx_policy_condition", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, ], false))),
		Rc::new(Type::new(221, "zx_policy_policy", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 4, ], false))),
		Rc::new(Type::new(222, "zx_rights", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 2147483648, ], false))),
		Rc::new(Type::new(223, "cache_flush_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, ], true))),
		Rc::new(Type::new(224, "chan_read_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))),
		Rc::new(Type::new(225, "dup_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![256, ], true))),
		Rc::new(Type::new(226, "exception_channel_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))),
		Rc::new(Type::new(227, "faccessat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![256, 512, 1024, 2048, 4096, ], true))),
		Rc::new(Type::new(228, "fuchsia_devicesettings_ValueType", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))),
		Rc::new(Type::new(229, "fuchsia_net_LookupIpOptions", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, ], true))),
		Rc::new(Type::new(230, "linkat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1024, 4096, ], true))),
		Rc::new(Type::new(231, "log_create_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1073741824, ], true))),
		Rc::new(Type::new(232, "open_mode", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, ], true))),
		Rc::new(Type::new(233, "pollfd_events", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 8192, ], true))),
		Rc::new(Type::new(234, "socket_read_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))),
		Rc::new(Type::new(235, "socket_shutdown_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))),
		Rc::new(Type::new(236, "vmar_allocate_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![8, 16, 64, 128, 256, 512, ], true))),
		Rc::new(Type::new(237, "vmar_map_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 16, 32, 1024, ], true))),
		Rc::new(Type::new(238, "vmar_protect_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, ], true))),
		Rc::new(Type::new(239, "vmo_create_child_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![16, ], true))),
		Rc::new(Type::new(240, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((0, 9)), align: 0})),
		Rc::new(Type::new(241, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})),
		Rc::new(Type::new(242, "int64", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})),
		Rc::new(Type::new(243, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})),
		Rc::new(Type::new(244, "intptr", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((0, 1)), align: 0})),
		Rc::new(Type::new(245, "intptr", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})),
		Rc::new(Type::new(246, "bytesize", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["rd_bytes", ]))),
		Rc::new(Type::new(247, "bytesize", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["wr_bytes", ]))),
		Rc::new(Type::new(248, "bytesize", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["buffer", ]))),
		Rc::new(Type::new(249, "bytesize", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["bytes", ]))),
		Rc::new(Type::new(250, "bytesize", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["handles", ]))),
		Rc::new(Type::new(251, "bytesize4", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 32, false, vec!["rd_handles", ]))),
		Rc::new(Type::new(252, "bytesize4", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 32, false, vec!["wr_handles", ]))),
		Rc::new(Type::new(253, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["rd_bytes", ]))),
		Rc::new(Type::new(254, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["rd_handles", ]))),
		Rc::new(Type::new(255, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["wr_bytes", ]))),
		Rc::new(Type::new(256, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["wr_handles", ]))),
		Rc::new(Type::new(257, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["addr", ]))),
		Rc::new(Type::new(258, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["buf", ]))),
		Rc::new(Type::new(259, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["buffer", ]))),
		Rc::new(Type::new(260, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["bytes", ]))),
		Rc::new(Type::new(261, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["fds", ]))),
		Rc::new(Type::new(262, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["handles", ]))),
		Rc::new(Type::new(263, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["inp", ]))),
		Rc::new(Type::new(264, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["items", ]))),
		Rc::new(Type::new(265, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["name", ]))),
		Rc::new(Type::new(266, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["policy", ]))),
		Rc::new(Type::new(267, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["ptr", ]))),
		Rc::new(Type::new(268, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["sigmask", ]))),
		Rc::new(Type::new(269, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["value", ]))),
		Rc::new(Type::new(270, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["vec", ]))),
		Rc::new(Type::new(271, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["version", ]))),
		Rc::new(Type::new(272, "proc", 8, 8, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 1000, per_proc: 4})),
		Rc::new(Type::new(273, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(49)})),
		Rc::new(Type::new(274, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1562)})),
		Rc::new(Type::new(275, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1563)})),
		Rc::new(Type::new(276, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1122)})),
		Rc::new(Type::new(277, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1039)})),
		Rc::new(Type::new(278, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1565)})),
		Rc::new(Type::new(279, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1566)})),
		Rc::new(Type::new(280, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1123)})),
		Rc::new(Type::new(281, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1568)})),
		Rc::new(Type::new(282, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1569)})),
		Rc::new(Type::new(283, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1124)})),
		Rc::new(Type::new(284, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1571)})),
		Rc::new(Type::new(285, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1572)})),
		Rc::new(Type::new(286, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1125)})),
		Rc::new(Type::new(287, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(63)})),
		Rc::new(Type::new(288, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1574)})),
		Rc::new(Type::new(289, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1575)})),
		Rc::new(Type::new(290, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1126)})),
		Rc::new(Type::new(291, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1577)})),
		Rc::new(Type::new(292, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1578)})),
		Rc::new(Type::new(293, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1127)})),
		Rc::new(Type::new(294, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1583)})),
		Rc::new(Type::new(295, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1584)})),
		Rc::new(Type::new(296, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1129)})),
		Rc::new(Type::new(297, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1580)})),
		Rc::new(Type::new(298, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1581)})),
		Rc::new(Type::new(299, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1128)})),
		Rc::new(Type::new(300, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1586)})),
		Rc::new(Type::new(301, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1587)})),
		Rc::new(Type::new(302, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1130)})),
		Rc::new(Type::new(303, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1591)})),
		Rc::new(Type::new(304, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1592)})),
		Rc::new(Type::new(305, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1131)})),
		Rc::new(Type::new(306, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1594)})),
		Rc::new(Type::new(307, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1595)})),
		Rc::new(Type::new(308, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1132)})),
		Rc::new(Type::new(309, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1597)})),
		Rc::new(Type::new(310, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1598)})),
		Rc::new(Type::new(311, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1133)})),
		Rc::new(Type::new(312, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1600)})),
		Rc::new(Type::new(313, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1601)})),
		Rc::new(Type::new(314, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1134)})),
		Rc::new(Type::new(315, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1603)})),
		Rc::new(Type::new(316, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1604)})),
		Rc::new(Type::new(317, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1135)})),
		Rc::new(Type::new(318, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1606)})),
		Rc::new(Type::new(319, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1607)})),
		Rc::new(Type::new(320, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1136)})),
		Rc::new(Type::new(321, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1609)})),
		Rc::new(Type::new(322, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1809)})),
		Rc::new(Type::new(323, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1610)})),
		Rc::new(Type::new(324, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1137)})),
		Rc::new(Type::new(325, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1616)})),
		Rc::new(Type::new(326, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1617)})),
		Rc::new(Type::new(327, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1138)})),
		Rc::new(Type::new(328, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1619)})),
		Rc::new(Type::new(329, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1620)})),
		Rc::new(Type::new(330, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1795)})),
		Rc::new(Type::new(331, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1139)})),
		Rc::new(Type::new(332, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1622)})),
		Rc::new(Type::new(333, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1623)})),
		Rc::new(Type::new(334, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1140)})),
		Rc::new(Type::new(335, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1625)})),
		Rc::new(Type::new(336, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1626)})),
		Rc::new(Type::new(337, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1141)})),
		Rc::new(Type::new(338, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1628)})),
		Rc::new(Type::new(339, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1629)})),
		Rc::new(Type::new(340, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1142)})),
		Rc::new(Type::new(341, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1631)})),
		Rc::new(Type::new(342, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1632)})),
		Rc::new(Type::new(343, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1143)})),
		Rc::new(Type::new(344, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1634)})),
		Rc::new(Type::new(345, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1635)})),
		Rc::new(Type::new(346, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(61)})),
		Rc::new(Type::new(347, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1144)})),
		Rc::new(Type::new(348, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1641)})),
		Rc::new(Type::new(349, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1642)})),
		Rc::new(Type::new(350, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1145)})),
		Rc::new(Type::new(351, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1644)})),
		Rc::new(Type::new(352, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1645)})),
		Rc::new(Type::new(353, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1146)})),
		Rc::new(Type::new(354, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1647)})),
		Rc::new(Type::new(355, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1648)})),
		Rc::new(Type::new(356, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1147)})),
		Rc::new(Type::new(357, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1650)})),
		Rc::new(Type::new(358, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1651)})),
		Rc::new(Type::new(359, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1148)})),
		Rc::new(Type::new(360, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(25)})),
		Rc::new(Type::new(361, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1653)})),
		Rc::new(Type::new(362, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1654)})),
		Rc::new(Type::new(363, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1149)})),
		Rc::new(Type::new(364, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1656)})),
		Rc::new(Type::new(365, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1657)})),
		Rc::new(Type::new(366, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1150)})),
		Rc::new(Type::new(367, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1659)})),
		Rc::new(Type::new(368, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1660)})),
		Rc::new(Type::new(369, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1151)})),
		Rc::new(Type::new(370, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1667)})),
		Rc::new(Type::new(371, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1668)})),
		Rc::new(Type::new(372, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1153)})),
		Rc::new(Type::new(373, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1664)})),
		Rc::new(Type::new(374, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1665)})),
		Rc::new(Type::new(375, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1152)})),
		Rc::new(Type::new(376, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1670)})),
		Rc::new(Type::new(377, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1671)})),
		Rc::new(Type::new(378, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1154)})),
		Rc::new(Type::new(379, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1673)})),
		Rc::new(Type::new(380, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1674)})),
		Rc::new(Type::new(381, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1155)})),
		Rc::new(Type::new(382, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1676)})),
		Rc::new(Type::new(383, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1677)})),
		Rc::new(Type::new(384, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1811)})),
		Rc::new(Type::new(385, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1156)})),
		Rc::new(Type::new(386, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1679)})),
		Rc::new(Type::new(387, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1680)})),
		Rc::new(Type::new(388, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1157)})),
		Rc::new(Type::new(389, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1682)})),
		Rc::new(Type::new(390, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1683)})),
		Rc::new(Type::new(391, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1158)})),
		Rc::new(Type::new(392, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1688)})),
		Rc::new(Type::new(393, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1689)})),
		Rc::new(Type::new(394, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1160)})),
		Rc::new(Type::new(395, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1685)})),
		Rc::new(Type::new(396, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1686)})),
		Rc::new(Type::new(397, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1159)})),
		Rc::new(Type::new(398, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1697)})),
		Rc::new(Type::new(399, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1698)})),
		Rc::new(Type::new(400, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1161)})),
		Rc::new(Type::new(401, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1700)})),
		Rc::new(Type::new(402, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1701)})),
		Rc::new(Type::new(403, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1162)})),
		Rc::new(Type::new(404, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1703)})),
		Rc::new(Type::new(405, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1704)})),
		Rc::new(Type::new(406, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1163)})),
		Rc::new(Type::new(407, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1707)})),
		Rc::new(Type::new(408, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1708)})),
		Rc::new(Type::new(409, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1164)})),
		Rc::new(Type::new(410, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1710)})),
		Rc::new(Type::new(411, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1711)})),
		Rc::new(Type::new(412, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1165)})),
		Rc::new(Type::new(413, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1714)})),
		Rc::new(Type::new(414, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1715)})),
		Rc::new(Type::new(415, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1166)})),
		Rc::new(Type::new(416, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1717)})),
		Rc::new(Type::new(417, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1718)})),
		Rc::new(Type::new(418, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1167)})),
		Rc::new(Type::new(419, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1297)})),
		Rc::new(Type::new(420, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1725)})),
		Rc::new(Type::new(421, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1726)})),
		Rc::new(Type::new(422, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1168)})),
		Rc::new(Type::new(423, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1728)})),
		Rc::new(Type::new(424, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1729)})),
		Rc::new(Type::new(425, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1169)})),
		Rc::new(Type::new(426, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1733)})),
		Rc::new(Type::new(427, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1734)})),
		Rc::new(Type::new(428, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1170)})),
		Rc::new(Type::new(429, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1298)})),
		Rc::new(Type::new(430, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1748)})),
		Rc::new(Type::new(431, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1749)})),
		Rc::new(Type::new(432, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1171)})),
		Rc::new(Type::new(433, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1751)})),
		Rc::new(Type::new(434, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1752)})),
		Rc::new(Type::new(435, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1172)})),
		Rc::new(Type::new(436, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1772)})),
		Rc::new(Type::new(437, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1773)})),
		Rc::new(Type::new(438, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1173)})),
		Rc::new(Type::new(439, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1775)})),
		Rc::new(Type::new(440, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1776)})),
		Rc::new(Type::new(441, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1174)})),
		Rc::new(Type::new(442, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1782)})),
		Rc::new(Type::new(443, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1783)})),
		Rc::new(Type::new(444, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1175)})),
		Rc::new(Type::new(445, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1786)})),
		Rc::new(Type::new(446, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1787)})),
		Rc::new(Type::new(447, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1176)})),
		Rc::new(Type::new(448, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1789)})),
		Rc::new(Type::new(449, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1790)})),
		Rc::new(Type::new(450, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1044)})),
		Rc::new(Type::new(451, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1177)})),
		Rc::new(Type::new(452, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(56)})),
		Rc::new(Type::new(453, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1470)})),
		Rc::new(Type::new(454, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1300)})),
		Rc::new(Type::new(455, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1471)})),
		Rc::new(Type::new(456, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1524)})),
		Rc::new(Type::new(457, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1525)})),
		Rc::new(Type::new(458, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1557)})),
		Rc::new(Type::new(459, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1558)})),
		Rc::new(Type::new(460, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1589)})),
		Rc::new(Type::new(461, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1590)})),
		Rc::new(Type::new(462, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1614)})),
		Rc::new(Type::new(463, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1301)})),
		Rc::new(Type::new(464, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1615)})),
		Rc::new(Type::new(465, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1637)})),
		Rc::new(Type::new(466, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1638)})),
		Rc::new(Type::new(467, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1639)})),
		Rc::new(Type::new(468, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1640)})),
		Rc::new(Type::new(469, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1695)})),
		Rc::new(Type::new(470, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1696)})),
		Rc::new(Type::new(471, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1731)})),
		Rc::new(Type::new(472, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1732)})),
		Rc::new(Type::new(473, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1764)})),
		Rc::new(Type::new(474, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1765)})),
		Rc::new(Type::new(475, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1766)})),
		Rc::new(Type::new(476, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1767)})),
		Rc::new(Type::new(477, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1045)})),
		Rc::new(Type::new(478, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1768)})),
		Rc::new(Type::new(479, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1769)})),
		Rc::new(Type::new(480, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1770)})),
		Rc::new(Type::new(481, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1771)})),
		Rc::new(Type::new(482, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1303)})),
		Rc::new(Type::new(483, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(26)})),
		Rc::new(Type::new(484, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1304)})),
		Rc::new(Type::new(485, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1046)})),
		Rc::new(Type::new(486, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(27)})),
		Rc::new(Type::new(487, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1833)})),
		Rc::new(Type::new(488, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(50)})),
		Rc::new(Type::new(489, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1306)})),
		Rc::new(Type::new(490, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(39)})),
		Rc::new(Type::new(491, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1307)})),
		Rc::new(Type::new(492, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1047)})),
		Rc::new(Type::new(493, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1309)})),
		Rc::new(Type::new(494, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1310)})),
		Rc::new(Type::new(495, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1048)})),
		Rc::new(Type::new(496, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1312)})),
		Rc::new(Type::new(497, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1313)})),
		Rc::new(Type::new(498, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1049)})),
		Rc::new(Type::new(499, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(59)})),
		Rc::new(Type::new(500, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1315)})),
		Rc::new(Type::new(501, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1316)})),
		Rc::new(Type::new(502, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1050)})),
		Rc::new(Type::new(503, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1318)})),
		Rc::new(Type::new(504, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1319)})),
		Rc::new(Type::new(505, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1051)})),
		Rc::new(Type::new(506, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1333)})),
		Rc::new(Type::new(507, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1334)})),
		Rc::new(Type::new(508, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(58)})),
		Rc::new(Type::new(509, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1052)})),
		Rc::new(Type::new(510, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1336)})),
		Rc::new(Type::new(511, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1337)})),
		Rc::new(Type::new(512, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1053)})),
		Rc::new(Type::new(513, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1342)})),
		Rc::new(Type::new(514, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1343)})),
		Rc::new(Type::new(515, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1055)})),
		Rc::new(Type::new(516, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1339)})),
		Rc::new(Type::new(517, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1340)})),
		Rc::new(Type::new(518, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(60)})),
		Rc::new(Type::new(519, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1054)})),
		Rc::new(Type::new(520, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1345)})),
		Rc::new(Type::new(521, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1346)})),
		Rc::new(Type::new(522, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1056)})),
		Rc::new(Type::new(523, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1348)})),
		Rc::new(Type::new(524, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1349)})),
		Rc::new(Type::new(525, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1057)})),
		Rc::new(Type::new(526, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1351)})),
		Rc::new(Type::new(527, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1352)})),
		Rc::new(Type::new(528, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1058)})),
		Rc::new(Type::new(529, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1354)})),
		Rc::new(Type::new(530, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1355)})),
		Rc::new(Type::new(531, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1059)})),
		Rc::new(Type::new(532, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1357)})),
		Rc::new(Type::new(533, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1358)})),
		Rc::new(Type::new(534, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1060)})),
		Rc::new(Type::new(535, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1360)})),
		Rc::new(Type::new(536, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1361)})),
		Rc::new(Type::new(537, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1061)})),
		Rc::new(Type::new(538, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1363)})),
		Rc::new(Type::new(539, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1364)})),
		Rc::new(Type::new(540, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1062)})),
		Rc::new(Type::new(541, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1366)})),
		Rc::new(Type::new(542, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1367)})),
		Rc::new(Type::new(543, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1063)})),
		Rc::new(Type::new(544, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(52)})),
		Rc::new(Type::new(545, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1369)})),
		Rc::new(Type::new(546, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1370)})),
		Rc::new(Type::new(547, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1064)})),
		Rc::new(Type::new(548, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1372)})),
		Rc::new(Type::new(549, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1373)})),
		Rc::new(Type::new(550, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1065)})),
		Rc::new(Type::new(551, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1375)})),
		Rc::new(Type::new(552, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(51)})),
		Rc::new(Type::new(553, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1376)})),
		Rc::new(Type::new(554, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1066)})),
		Rc::new(Type::new(555, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1381)})),
		Rc::new(Type::new(556, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1382)})),
		Rc::new(Type::new(557, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1068)})),
		Rc::new(Type::new(558, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1378)})),
		Rc::new(Type::new(559, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1379)})),
		Rc::new(Type::new(560, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1067)})),
		Rc::new(Type::new(561, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1384)})),
		Rc::new(Type::new(562, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1385)})),
		Rc::new(Type::new(563, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1069)})),
		Rc::new(Type::new(564, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(53)})),
		Rc::new(Type::new(565, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1387)})),
		Rc::new(Type::new(566, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1388)})),
		Rc::new(Type::new(567, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1070)})),
		Rc::new(Type::new(568, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1390)})),
		Rc::new(Type::new(569, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1391)})),
		Rc::new(Type::new(570, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1071)})),
		Rc::new(Type::new(571, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1393)})),
		Rc::new(Type::new(572, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1394)})),
		Rc::new(Type::new(573, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(54)})),
		Rc::new(Type::new(574, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1072)})),
		Rc::new(Type::new(575, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1396)})),
		Rc::new(Type::new(576, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1397)})),
		Rc::new(Type::new(577, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1073)})),
		Rc::new(Type::new(578, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1402)})),
		Rc::new(Type::new(579, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1403)})),
		Rc::new(Type::new(580, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1075)})),
		Rc::new(Type::new(581, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1399)})),
		Rc::new(Type::new(582, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1400)})),
		Rc::new(Type::new(583, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1074)})),
		Rc::new(Type::new(584, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1405)})),
		Rc::new(Type::new(585, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(57)})),
		Rc::new(Type::new(586, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1406)})),
		Rc::new(Type::new(587, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1076)})),
		Rc::new(Type::new(588, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(35)})),
		Rc::new(Type::new(589, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1408)})),
		Rc::new(Type::new(590, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1409)})),
		Rc::new(Type::new(591, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1077)})),
		Rc::new(Type::new(592, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1411)})),
		Rc::new(Type::new(593, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1412)})),
		Rc::new(Type::new(594, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1078)})),
		Rc::new(Type::new(595, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1414)})),
		Rc::new(Type::new(596, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1415)})),
		Rc::new(Type::new(597, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(43)})),
		Rc::new(Type::new(598, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1079)})),
		Rc::new(Type::new(599, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1417)})),
		Rc::new(Type::new(600, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1418)})),
		Rc::new(Type::new(601, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1080)})),
		Rc::new(Type::new(602, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1422)})),
		Rc::new(Type::new(603, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1423)})),
		Rc::new(Type::new(604, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1081)})),
		Rc::new(Type::new(605, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1425)})),
		Rc::new(Type::new(606, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1426)})),
		Rc::new(Type::new(607, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1082)})),
		Rc::new(Type::new(608, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1431)})),
		Rc::new(Type::new(609, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1432)})),
		Rc::new(Type::new(610, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1084)})),
		Rc::new(Type::new(611, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1428)})),
		Rc::new(Type::new(612, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1429)})),
		Rc::new(Type::new(613, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1083)})),
		Rc::new(Type::new(614, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1434)})),
		Rc::new(Type::new(615, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1435)})),
		Rc::new(Type::new(616, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1085)})),
		Rc::new(Type::new(617, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1437)})),
		Rc::new(Type::new(618, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1438)})),
		Rc::new(Type::new(619, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1086)})),
		Rc::new(Type::new(620, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1440)})),
		Rc::new(Type::new(621, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1441)})),
		Rc::new(Type::new(622, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1087)})),
		Rc::new(Type::new(623, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1445)})),
		Rc::new(Type::new(624, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1446)})),
		Rc::new(Type::new(625, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1088)})),
		Rc::new(Type::new(626, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1448)})),
		Rc::new(Type::new(627, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1449)})),
		Rc::new(Type::new(628, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1089)})),
		Rc::new(Type::new(629, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1451)})),
		Rc::new(Type::new(630, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1452)})),
		Rc::new(Type::new(631, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1090)})),
		Rc::new(Type::new(632, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1455)})),
		Rc::new(Type::new(633, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1456)})),
		Rc::new(Type::new(634, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(28)})),
		Rc::new(Type::new(635, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1091)})),
		Rc::new(Type::new(636, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1458)})),
		Rc::new(Type::new(637, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1459)})),
		Rc::new(Type::new(638, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1092)})),
		Rc::new(Type::new(639, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1461)})),
		Rc::new(Type::new(640, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1462)})),
		Rc::new(Type::new(641, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1093)})),
		Rc::new(Type::new(642, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1464)})),
		Rc::new(Type::new(643, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1465)})),
		Rc::new(Type::new(644, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(241)})),
		Rc::new(Type::new(645, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1094)})),
		Rc::new(Type::new(646, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1467)})),
		Rc::new(Type::new(647, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1468)})),
		Rc::new(Type::new(648, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1807)})),
		Rc::new(Type::new(649, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1095)})),
		Rc::new(Type::new(650, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1472)})),
		Rc::new(Type::new(651, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1473)})),
		Rc::new(Type::new(652, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1096)})),
		Rc::new(Type::new(653, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1475)})),
		Rc::new(Type::new(654, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1476)})),
		Rc::new(Type::new(655, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1097)})),
		Rc::new(Type::new(656, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1806)})),
		Rc::new(Type::new(657, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1478)})),
		Rc::new(Type::new(658, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1479)})),
		Rc::new(Type::new(659, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1098)})),
		Rc::new(Type::new(660, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1481)})),
		Rc::new(Type::new(661, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1482)})),
		Rc::new(Type::new(662, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1099)})),
		Rc::new(Type::new(663, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1484)})),
		Rc::new(Type::new(664, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1485)})),
		Rc::new(Type::new(665, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1100)})),
		Rc::new(Type::new(666, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1487)})),
		Rc::new(Type::new(667, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1488)})),
		Rc::new(Type::new(668, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1101)})),
		Rc::new(Type::new(669, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1490)})),
		Rc::new(Type::new(670, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1491)})),
		Rc::new(Type::new(671, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(36)})),
		Rc::new(Type::new(672, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1102)})),
		Rc::new(Type::new(673, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1493)})),
		Rc::new(Type::new(674, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1494)})),
		Rc::new(Type::new(675, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1103)})),
		Rc::new(Type::new(676, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1496)})),
		Rc::new(Type::new(677, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1497)})),
		Rc::new(Type::new(678, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1104)})),
		Rc::new(Type::new(679, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1499)})),
		Rc::new(Type::new(680, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1500)})),
		Rc::new(Type::new(681, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1105)})),
		Rc::new(Type::new(682, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1502)})),
		Rc::new(Type::new(683, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1503)})),
		Rc::new(Type::new(684, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1106)})),
		Rc::new(Type::new(685, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1505)})),
		Rc::new(Type::new(686, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1506)})),
		Rc::new(Type::new(687, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(37)})),
		Rc::new(Type::new(688, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1107)})),
		Rc::new(Type::new(689, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1508)})),
		Rc::new(Type::new(690, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1509)})),
		Rc::new(Type::new(691, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1108)})),
		Rc::new(Type::new(692, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1511)})),
		Rc::new(Type::new(693, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1512)})),
		Rc::new(Type::new(694, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1109)})),
		Rc::new(Type::new(695, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1514)})),
		Rc::new(Type::new(696, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1515)})),
		Rc::new(Type::new(697, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1110)})),
		Rc::new(Type::new(698, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1526)})),
		Rc::new(Type::new(699, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1527)})),
		Rc::new(Type::new(700, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1111)})),
		Rc::new(Type::new(701, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1529)})),
		Rc::new(Type::new(702, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1530)})),
		Rc::new(Type::new(703, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(55)})),
		Rc::new(Type::new(704, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1112)})),
		Rc::new(Type::new(705, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1532)})),
		Rc::new(Type::new(706, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1533)})),
		Rc::new(Type::new(707, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1113)})),
		Rc::new(Type::new(708, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1535)})),
		Rc::new(Type::new(709, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1536)})),
		Rc::new(Type::new(710, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1114)})),
		Rc::new(Type::new(711, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1538)})),
		Rc::new(Type::new(712, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1539)})),
		Rc::new(Type::new(713, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1115)})),
		Rc::new(Type::new(714, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1541)})),
		Rc::new(Type::new(715, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1542)})),
		Rc::new(Type::new(716, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1116)})),
		Rc::new(Type::new(717, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1547)})),
		Rc::new(Type::new(718, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1548)})),
		Rc::new(Type::new(719, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1118)})),
		Rc::new(Type::new(720, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1544)})),
		Rc::new(Type::new(721, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1545)})),
		Rc::new(Type::new(722, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1117)})),
		Rc::new(Type::new(723, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1550)})),
		Rc::new(Type::new(724, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1551)})),
		Rc::new(Type::new(725, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1119)})),
		Rc::new(Type::new(726, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(38)})),
		Rc::new(Type::new(727, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1553)})),
		Rc::new(Type::new(728, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1554)})),
		Rc::new(Type::new(729, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1120)})),
		Rc::new(Type::new(730, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1559)})),
		Rc::new(Type::new(731, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1560)})),
		Rc::new(Type::new(732, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1121)})),
		Rc::new(Type::new(733, "ptr64", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(38)})),
		Rc::new(Type::new(734, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1564)})),
		Rc::new(Type::new(735, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1567)})),
		Rc::new(Type::new(736, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1570)})),
		Rc::new(Type::new(737, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1573)})),
		Rc::new(Type::new(738, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1576)})),
		Rc::new(Type::new(739, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1579)})),
		Rc::new(Type::new(740, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1585)})),
		Rc::new(Type::new(741, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1582)})),
		Rc::new(Type::new(742, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1026)})),
		Rc::new(Type::new(743, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1588)})),
		Rc::new(Type::new(744, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1593)})),
		Rc::new(Type::new(745, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(978)})),
		Rc::new(Type::new(746, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1028)})),
		Rc::new(Type::new(747, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1596)})),
		Rc::new(Type::new(748, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1032)})),
		Rc::new(Type::new(749, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1599)})),
		Rc::new(Type::new(750, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1602)})),
		Rc::new(Type::new(751, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1036)})),
		Rc::new(Type::new(752, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1605)})),
		Rc::new(Type::new(753, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1608)})),
		Rc::new(Type::new(754, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1611)})),
		Rc::new(Type::new(755, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1618)})),
		Rc::new(Type::new(756, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1621)})),
		Rc::new(Type::new(757, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1624)})),
		Rc::new(Type::new(758, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1627)})),
		Rc::new(Type::new(759, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1630)})),
		Rc::new(Type::new(760, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1633)})),
		Rc::new(Type::new(761, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1636)})),
		Rc::new(Type::new(762, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1005)})),
		Rc::new(Type::new(763, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1643)})),
		Rc::new(Type::new(764, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(976)})),
		Rc::new(Type::new(765, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1646)})),
		Rc::new(Type::new(766, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1649)})),
		Rc::new(Type::new(767, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1024)})),
		Rc::new(Type::new(768, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1652)})),
		Rc::new(Type::new(769, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(25)})),
		Rc::new(Type::new(770, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1655)})),
		Rc::new(Type::new(771, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1658)})),
		Rc::new(Type::new(772, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1661)})),
		Rc::new(Type::new(773, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1669)})),
		Rc::new(Type::new(774, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1666)})),
		Rc::new(Type::new(775, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1672)})),
		Rc::new(Type::new(776, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1675)})),
		Rc::new(Type::new(777, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1678)})),
		Rc::new(Type::new(778, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1681)})),
		Rc::new(Type::new(779, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1684)})),
		Rc::new(Type::new(780, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1690)})),
		Rc::new(Type::new(781, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(977)})),
		Rc::new(Type::new(782, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1687)})),
		Rc::new(Type::new(783, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1007)})),
		Rc::new(Type::new(784, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1699)})),
		Rc::new(Type::new(785, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1702)})),
		Rc::new(Type::new(786, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1705)})),
		Rc::new(Type::new(787, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1709)})),
		Rc::new(Type::new(788, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1712)})),
		Rc::new(Type::new(789, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1716)})),
		Rc::new(Type::new(790, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(986)})),
		Rc::new(Type::new(791, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1719)})),
		Rc::new(Type::new(792, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1009)})),
		Rc::new(Type::new(793, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1727)})),
		Rc::new(Type::new(794, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1730)})),
		Rc::new(Type::new(795, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1735)})),
		Rc::new(Type::new(796, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1013)})),
		Rc::new(Type::new(797, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(48)})),
		Rc::new(Type::new(798, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1750)})),
		Rc::new(Type::new(799, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1753)})),
		Rc::new(Type::new(800, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1299)})),
		Rc::new(Type::new(801, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1015)})),
		Rc::new(Type::new(802, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1774)})),
		Rc::new(Type::new(803, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(980)})),
		Rc::new(Type::new(804, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1777)})),
		Rc::new(Type::new(805, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1017)})),
		Rc::new(Type::new(806, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1784)})),
		Rc::new(Type::new(807, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1019)})),
		Rc::new(Type::new(808, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1788)})),
		Rc::new(Type::new(809, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1791)})),
		Rc::new(Type::new(810, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1001)})),
		Rc::new(Type::new(811, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1011)})),
		Rc::new(Type::new(812, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1556)})),
		Rc::new(Type::new(813, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1613)})),
		Rc::new(Type::new(814, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1663)})),
		Rc::new(Type::new(815, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1713)})),
		Rc::new(Type::new(816, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1737)})),
		Rc::new(Type::new(817, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1302)})),
		Rc::new(Type::new(818, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1021)})),
		Rc::new(Type::new(819, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1023)})),
		Rc::new(Type::new(820, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1025)})),
		Rc::new(Type::new(821, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1815)})),
		Rc::new(Type::new(822, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(32)})),
		Rc::new(Type::new(823, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1817)})),
		Rc::new(Type::new(824, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1818)})),
		Rc::new(Type::new(825, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1819)})),
		Rc::new(Type::new(826, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(31)})),
		Rc::new(Type::new(827, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1820)})),
		Rc::new(Type::new(828, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1823)})),
		Rc::new(Type::new(829, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1824)})),
		Rc::new(Type::new(830, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1305)})),
		Rc::new(Type::new(831, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(33)})),
		Rc::new(Type::new(832, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1831)})),
		Rc::new(Type::new(833, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(34)})),
		Rc::new(Type::new(834, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1825)})),
		Rc::new(Type::new(835, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1826)})),
		Rc::new(Type::new(836, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1827)})),
		Rc::new(Type::new(837, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1828)})),
		Rc::new(Type::new(838, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1814)})),
		Rc::new(Type::new(839, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1829)})),
		Rc::new(Type::new(840, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1830)})),
		Rc::new(Type::new(841, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1027)})),
		Rc::new(Type::new(842, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1833)})),
		Rc::new(Type::new(843, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(982)})),
		Rc::new(Type::new(844, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(39)})),
		Rc::new(Type::new(845, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1034)})),
		Rc::new(Type::new(846, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1035)})),
		Rc::new(Type::new(847, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1308)})),
		Rc::new(Type::new(848, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(984)})),
		Rc::new(Type::new(849, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1311)})),
		Rc::new(Type::new(850, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(990)})),
		Rc::new(Type::new(851, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1314)})),
		Rc::new(Type::new(852, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1317)})),
		Rc::new(Type::new(853, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1320)})),
		Rc::new(Type::new(854, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(979)})),
		Rc::new(Type::new(855, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(988)})),
		Rc::new(Type::new(856, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1335)})),
		Rc::new(Type::new(857, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1338)})),
		Rc::new(Type::new(858, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1344)})),
		Rc::new(Type::new(859, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(992)})),
		Rc::new(Type::new(860, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1341)})),
		Rc::new(Type::new(861, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1347)})),
		Rc::new(Type::new(862, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1350)})),
		Rc::new(Type::new(863, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(994)})),
		Rc::new(Type::new(864, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1353)})),
		Rc::new(Type::new(865, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(996)})),
		Rc::new(Type::new(866, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(985)})),
		Rc::new(Type::new(867, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1356)})),
		Rc::new(Type::new(868, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(998)})),
		Rc::new(Type::new(869, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(981)})),
		Rc::new(Type::new(870, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1004)})),
		Rc::new(Type::new(871, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1359)})),
		Rc::new(Type::new(872, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1000)})),
		Rc::new(Type::new(873, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1362)})),
		Rc::new(Type::new(874, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1002)})),
		Rc::new(Type::new(875, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1365)})),
		Rc::new(Type::new(876, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(243)})),
		Rc::new(Type::new(877, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1006)})),
		Rc::new(Type::new(878, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1008)})),
		Rc::new(Type::new(879, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1010)})),
		Rc::new(Type::new(880, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1368)})),
		Rc::new(Type::new(881, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1371)})),
		Rc::new(Type::new(882, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1012)})),
		Rc::new(Type::new(883, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1374)})),
		Rc::new(Type::new(884, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1377)})),
		Rc::new(Type::new(885, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1383)})),
		Rc::new(Type::new(886, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1380)})),
		Rc::new(Type::new(887, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1014)})),
		Rc::new(Type::new(888, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1386)})),
		Rc::new(Type::new(889, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1389)})),
		Rc::new(Type::new(890, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1016)})),
		Rc::new(Type::new(891, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1392)})),
		Rc::new(Type::new(892, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(983)})),
		Rc::new(Type::new(893, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1395)})),
		Rc::new(Type::new(894, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1398)})),
		Rc::new(Type::new(895, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1404)})),
		Rc::new(Type::new(896, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1018)})),
		Rc::new(Type::new(897, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1401)})),
		Rc::new(Type::new(898, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1407)})),
		Rc::new(Type::new(899, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(35)})),
		Rc::new(Type::new(900, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1410)})),
		Rc::new(Type::new(901, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1020)})),
		Rc::new(Type::new(902, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1413)})),
		Rc::new(Type::new(903, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(43)})),
		Rc::new(Type::new(904, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1416)})),
		Rc::new(Type::new(905, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1419)})),
		Rc::new(Type::new(906, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(987)})),
		Rc::new(Type::new(907, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1424)})),
		Rc::new(Type::new(908, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(245)})),
		Rc::new(Type::new(909, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(989)})),
		Rc::new(Type::new(910, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1427)})),
		Rc::new(Type::new(911, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1433)})),
		Rc::new(Type::new(912, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1430)})),
		Rc::new(Type::new(913, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1436)})),
		Rc::new(Type::new(914, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1439)})),
		Rc::new(Type::new(915, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1804)})),
		Rc::new(Type::new(916, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1442)})),
		Rc::new(Type::new(917, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(991)})),
		Rc::new(Type::new(918, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1447)})),
		Rc::new(Type::new(919, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1450)})),
		Rc::new(Type::new(920, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1453)})),
		Rc::new(Type::new(921, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(993)})),
		Rc::new(Type::new(922, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1457)})),
		Rc::new(Type::new(923, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1460)})),
		Rc::new(Type::new(924, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1463)})),
		Rc::new(Type::new(925, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(241)})),
		Rc::new(Type::new(926, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1466)})),
		Rc::new(Type::new(927, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(995)})),
		Rc::new(Type::new(928, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1469)})),
		Rc::new(Type::new(929, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(997)})),
		Rc::new(Type::new(930, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1474)})),
		Rc::new(Type::new(931, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(242)})),
		Rc::new(Type::new(932, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1477)})),
		Rc::new(Type::new(933, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1480)})),
		Rc::new(Type::new(934, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1483)})),
		Rc::new(Type::new(935, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1486)})),
		Rc::new(Type::new(936, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1022)})),
		Rc::new(Type::new(937, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1489)})),
		Rc::new(Type::new(938, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1492)})),
		Rc::new(Type::new(939, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1495)})),
		Rc::new(Type::new(940, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1498)})),
		Rc::new(Type::new(941, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1501)})),
		Rc::new(Type::new(942, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1504)})),
		Rc::new(Type::new(943, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1037)})),
		Rc::new(Type::new(944, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1507)})),
		Rc::new(Type::new(945, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1510)})),
		Rc::new(Type::new(946, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1513)})),
		Rc::new(Type::new(947, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(1042)})),
		Rc::new(Type::new(948, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1516)})),
		Rc::new(Type::new(949, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(999)})),
		Rc::new(Type::new(950, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1528)})),
		Rc::new(Type::new(951, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(1808)})),
		Rc::new(Type::new(952, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1030)})),
		Rc::new(Type::new(953, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1531)})),
		Rc::new(Type::new(954, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1534)})),
		Rc::new(Type::new(955, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1537)})),
		Rc::new(Type::new(956, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1540)})),
		Rc::new(Type::new(957, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1543)})),
		Rc::new(Type::new(958, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1003)})),
		Rc::new(Type::new(959, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1549)})),
		Rc::new(Type::new(960, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1546)})),
		Rc::new(Type::new(961, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1040)})),
		Rc::new(Type::new(962, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1552)})),
		Rc::new(Type::new(963, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1555)})),
		Rc::new(Type::new(964, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(1561)})),
		Rc::new(Type::new(965, "ANYRES16", 2, 2, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES16", vec!["ANYRES16", ], vec![18446744073709551615, 0, ])})),
		Rc::new(Type::new(966, "ANYRES32", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES32", vec!["ANYRES32", ], vec![18446744073709551615, 0, ])})),
		Rc::new(Type::new(967, "ANYRES64", 18, 1, false, false, TypeKind::Res{fmt: BinFmt::StrHex, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})),
		Rc::new(Type::new(968, "ANYRES64", 20, 1, false, false, TypeKind::Res{fmt: BinFmt::StrDec, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})),
		Rc::new(Type::new(969, "ANYRES64", 23, 1, false, false, TypeKind::Res{fmt: BinFmt::StrOct, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})),
		Rc::new(Type::new(970, "ANYRES64", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})),
		Rc::new(Type::new(971, "fd", 4, 4, true, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd", vec!["fd", ], vec![18446744073709551615, 18446744073709551516, ])})),
		Rc::new(Type::new(972, "fd", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd", vec!["fd", ], vec![18446744073709551615, 18446744073709551516, ])})),
		Rc::new(Type::new(973, "gid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("gid", vec!["gid", ], vec![0, 18446744073709551615, ])})),
		Rc::new(Type::new(974, "koid", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("koid", vec!["koid", ], vec![0, ])})),
		Rc::new(Type::new(975, "uid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("uid", vec!["uid", ], vec![0, 18446744073709551615, ])})),
		Rc::new(Type::new(976, "zx_chan", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan", vec!["zx_handle", "zx_chan", ], vec![0, ])})),
		Rc::new(Type::new(977, "zx_chan_fuchsia_cobalt_Controller_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_Controller_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_Controller_client", ], vec![0, ])})),
		Rc::new(Type::new(978, "zx_chan_fuchsia_cobalt_Controller_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_Controller_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_Controller_server", ], vec![0, ])})),
		Rc::new(Type::new(979, "zx_chan_fuchsia_cobalt_LoggerBase_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_LoggerBase_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_LoggerBase_client", ], vec![0, ])})),
		Rc::new(Type::new(980, "zx_chan_fuchsia_cobalt_LoggerBase_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_LoggerBase_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_LoggerBase_server", ], vec![0, ])})),
		Rc::new(Type::new(981, "zx_chan_fuchsia_cobalt_LoggerFactory_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_LoggerFactory_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_LoggerFactory_client", ], vec![0, ])})),
		Rc::new(Type::new(982, "zx_chan_fuchsia_cobalt_LoggerFactory_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_LoggerFactory_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_LoggerFactory_server", ], vec![0, ])})),
		Rc::new(Type::new(983, "zx_chan_fuchsia_cobalt_LoggerSimple_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_LoggerSimple_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_LoggerSimple_client", ], vec![0, ])})),
		Rc::new(Type::new(984, "zx_chan_fuchsia_cobalt_LoggerSimple_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_LoggerSimple_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_LoggerSimple_server", ], vec![0, ])})),
		Rc::new(Type::new(985, "zx_chan_fuchsia_cobalt_Logger_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_Logger_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_Logger_client", ], vec![0, ])})),
		Rc::new(Type::new(986, "zx_chan_fuchsia_cobalt_Logger_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_Logger_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_Logger_server", ], vec![0, ])})),
		Rc::new(Type::new(987, "zx_chan_fuchsia_cobalt_MetricEventLoggerFactory_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_MetricEventLoggerFactory_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_MetricEventLoggerFactory_client", ], vec![0, ])})),
		Rc::new(Type::new(988, "zx_chan_fuchsia_cobalt_MetricEventLoggerFactory_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_MetricEventLoggerFactory_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_MetricEventLoggerFactory_server", ], vec![0, ])})),
		Rc::new(Type::new(989, "zx_chan_fuchsia_cobalt_MetricEventLogger_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_MetricEventLogger_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_MetricEventLogger_client", ], vec![0, ])})),
		Rc::new(Type::new(990, "zx_chan_fuchsia_cobalt_MetricEventLogger_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_MetricEventLogger_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_MetricEventLogger_server", ], vec![0, ])})),
		Rc::new(Type::new(991, "zx_chan_fuchsia_cobalt_SystemDataUpdater_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_SystemDataUpdater_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_SystemDataUpdater_client", ], vec![0, ])})),
		Rc::new(Type::new(992, "zx_chan_fuchsia_cobalt_SystemDataUpdater_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_cobalt_SystemDataUpdater_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_cobalt_SystemDataUpdater_server", ], vec![0, ])})),
		Rc::new(Type::new(993, "zx_chan_fuchsia_devicesettings_DeviceSettingsManager_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_devicesettings_DeviceSettingsManager_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_devicesettings_DeviceSettingsManager_client", ], vec![0, ])})),
		Rc::new(Type::new(994, "zx_chan_fuchsia_devicesettings_DeviceSettingsManager_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_devicesettings_DeviceSettingsManager_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_devicesettings_DeviceSettingsManager_server", ], vec![0, ])})),
		Rc::new(Type::new(995, "zx_chan_fuchsia_devicesettings_DeviceSettingsWatcher_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_devicesettings_DeviceSettingsWatcher_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_devicesettings_DeviceSettingsWatcher_client", ], vec![0, ])})),
		Rc::new(Type::new(996, "zx_chan_fuchsia_devicesettings_DeviceSettingsWatcher_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_devicesettings_DeviceSettingsWatcher_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_devicesettings_DeviceSettingsWatcher_server", ], vec![0, ])})),
		Rc::new(Type::new(997, "zx_chan_fuchsia_hardware_ethernet_Device_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_hardware_ethernet_Device_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_hardware_ethernet_Device_client", ], vec![0, ])})),
		Rc::new(Type::new(998, "zx_chan_fuchsia_hardware_ethernet_Device_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_hardware_ethernet_Device_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_hardware_ethernet_Device_server", ], vec![0, ])})),
		Rc::new(Type::new(999, "zx_chan_fuchsia_io_DirectoryAdmin_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_DirectoryAdmin_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_DirectoryAdmin_client", ], vec![0, ])})),
		Rc::new(Type::new(1000, "zx_chan_fuchsia_io_DirectoryAdmin_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_DirectoryAdmin_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_DirectoryAdmin_server", ], vec![0, ])})),
		Rc::new(Type::new(1001, "zx_chan_fuchsia_io_DirectoryWatcher_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_DirectoryWatcher_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_DirectoryWatcher_client", ], vec![0, ])})),
		Rc::new(Type::new(1002, "zx_chan_fuchsia_io_DirectoryWatcher_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_DirectoryWatcher_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_DirectoryWatcher_server", ], vec![0, ])})),
		Rc::new(Type::new(1003, "zx_chan_fuchsia_io_Directory_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_Directory_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_Directory_client", ], vec![0, ])})),
		Rc::new(Type::new(1004, "zx_chan_fuchsia_io_Directory_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_Directory_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_Directory_server", ], vec![0, ])})),
		Rc::new(Type::new(1005, "zx_chan_fuchsia_io_File_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_File_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_File_client", ], vec![0, ])})),
		Rc::new(Type::new(1006, "zx_chan_fuchsia_io_File_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_File_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_File_server", ], vec![0, ])})),
		Rc::new(Type::new(1007, "zx_chan_fuchsia_io_Node_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_Node_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_Node_client", ], vec![0, ])})),
		Rc::new(Type::new(1008, "zx_chan_fuchsia_io_Node_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_io_Node_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_io_Node_server", ], vec![0, ])})),
		Rc::new(Type::new(1009, "zx_chan_fuchsia_ldsvc_Loader_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_ldsvc_Loader_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_ldsvc_Loader_client", ], vec![0, ])})),
		Rc::new(Type::new(1010, "zx_chan_fuchsia_ldsvc_Loader_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_ldsvc_Loader_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_ldsvc_Loader_server", ], vec![0, ])})),
		Rc::new(Type::new(1011, "zx_chan_fuchsia_net_Connectivity_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_net_Connectivity_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_net_Connectivity_client", ], vec![0, ])})),
		Rc::new(Type::new(1012, "zx_chan_fuchsia_net_Connectivity_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_net_Connectivity_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_net_Connectivity_server", ], vec![0, ])})),
		Rc::new(Type::new(1013, "zx_chan_fuchsia_net_NameLookup_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_net_NameLookup_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_net_NameLookup_client", ], vec![0, ])})),
		Rc::new(Type::new(1014, "zx_chan_fuchsia_net_NameLookup_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_net_NameLookup_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_net_NameLookup_server", ], vec![0, ])})),
		Rc::new(Type::new(1015, "zx_chan_fuchsia_process_Launcher_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_process_Launcher_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_process_Launcher_client", ], vec![0, ])})),
		Rc::new(Type::new(1016, "zx_chan_fuchsia_process_Launcher_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_process_Launcher_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_process_Launcher_server", ], vec![0, ])})),
		Rc::new(Type::new(1017, "zx_chan_fuchsia_process_Resolver_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_process_Resolver_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_process_Resolver_client", ], vec![0, ])})),
		Rc::new(Type::new(1018, "zx_chan_fuchsia_process_Resolver_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_process_Resolver_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_process_Resolver_server", ], vec![0, ])})),
		Rc::new(Type::new(1019, "zx_chan_fuchsia_scpi_SystemController_client", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_scpi_SystemController_client", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_scpi_SystemController_client", ], vec![0, ])})),
		Rc::new(Type::new(1020, "zx_chan_fuchsia_scpi_SystemController_server", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_chan_fuchsia_scpi_SystemController_server", vec!["zx_handle", "zx_chan", "zx_chan_fuchsia_scpi_SystemController_server", ], vec![0, ])})),
		Rc::new(Type::new(1021, "zx_debug_log", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_debug_log", vec!["zx_handle", "zx_debug_log", ], vec![0, ])})),
		Rc::new(Type::new(1022, "zx_fifo", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_fifo", vec!["zx_handle", "zx_fifo", ], vec![0, ])})),
		Rc::new(Type::new(1023, "zx_guest", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_guest", vec!["zx_guest", ], vec![0, ])})),
		Rc::new(Type::new(1024, "zx_handle", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_handle", vec!["zx_handle", ], vec![0, ])})),
		Rc::new(Type::new(1025, "zx_interrupt", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_interrupt", vec!["zx_interrupt", ], vec![0, ])})),
		Rc::new(Type::new(1026, "zx_job", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_job", vec!["zx_handle", "zx_task", "zx_job", ], vec![0, ])})),
		Rc::new(Type::new(1027, "zx_port", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_port", vec!["zx_handle", "zx_port", ], vec![0, ])})),
		Rc::new(Type::new(1028, "zx_process", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_process", vec!["zx_handle", "zx_task", "zx_process", ], vec![0, ])})),
		Rc::new(Type::new(1029, "zx_root_resource", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_root_resource", vec!["zx_handle", "zx_root_resource", ], vec![0, ])})),
		Rc::new(Type::new(1030, "zx_socket", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_socket", vec!["zx_handle", "zx_socket", ], vec![0, ])})),
		Rc::new(Type::new(1031, "zx_task", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_task", vec!["zx_handle", "zx_task", ], vec![0, ])})),
		Rc::new(Type::new(1032, "zx_thread", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_thread", vec!["zx_handle", "zx_task", "zx_thread", ], vec![0, ])})),
		Rc::new(Type::new(1033, "zx_time", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_time", vec!["zx_time", ], vec![0, 9223372036854775807, ])})),
		Rc::new(Type::new(1034, "zx_timer", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_timer", vec!["zx_handle", "zx_timer", ], vec![0, ])})),
		Rc::new(Type::new(1035, "zx_vcpu", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_vcpu", vec!["zx_handle", "zx_vcpu", ], vec![0, ])})),
		Rc::new(Type::new(1036, "zx_vmar", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_vmar", vec!["zx_handle", "zx_vmar", ], vec![0, ])})),
		Rc::new(Type::new(1037, "zx_vmo", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("zx_vmo", vec!["zx_handle", "zx_vmo", ], vec![0, ])})),
		Rc::new(Type::new(1038, "vma", 8, 8, false, false, TypeKind::Vma{begin: 0, end: 0})),
		Rc::new(Type::new(1039, "ANYPTRS", 8, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYPTR".to_string()), ty: TypeRef::Id(726), dir: None }, Field{ name: String::into_boxed_str("ANYPTR64".to_string()), ty: TypeRef::Id(733), dir: None }, ]))),
		Rc::new(Type::new(1040, "ANYUNION", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYBLOB".to_string()), ty: TypeRef::Id(43), dir: None }, Field{ name: String::into_boxed_str("ANYRES16".to_string()), ty: TypeRef::Id(965), dir: None }, Field{ name: String::into_boxed_str("ANYRES32".to_string()), ty: TypeRef::Id(966), dir: None }, Field{ name: String::into_boxed_str("ANYRES64".to_string()), ty: TypeRef::Id(970), dir: None }, Field{ name: String::into_boxed_str("ANYRESDEC".to_string()), ty: TypeRef::Id(968), dir: None }, Field{ name: String::into_boxed_str("ANYRESHEX".to_string()), ty: TypeRef::Id(967), dir: None }, Field{ name: String::into_boxed_str("ANYRESOCT".to_string()), ty: TypeRef::Id(969), dir: None }, ]))),
		Rc::new(Type::new(1041, "arm64_exc_data", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("esr".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("far".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1042, "fd_set", 64, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mask0".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("mask1".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("mask2".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("mask3".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("mask4".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("mask5".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("mask6".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("mask7".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1043, "fidl_aligned[stringnoz]", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("var".to_string()), ty: TypeRef::Id(62), dir: None }, ]))),
		Rc::new(Type::new(1044, "fidl_call_args[fuchsia_cobalt_ControllerBlockUntilEmptyRequest, fuchsia_cobalt_ControllerBlockUntilEmptyRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_ControllerBlockUntilEmptyResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(419), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(429), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(800), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1045, "fidl_call_args[fuchsia_cobalt_ControllerGenerateAggregatedObservationsRequest, fuchsia_cobalt_ControllerGenerateAggregatedObservationsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_ControllerGenerateAggregatedObservationsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(454), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(463), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(817), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1046, "fidl_call_args[fuchsia_cobalt_ControllerGetFailedSendAttemptsRequest, fuchsia_cobalt_ControllerGetFailedSendAttemptsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_ControllerGetFailedSendAttemptsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(482), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(484), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(830), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1047, "fidl_call_args[fuchsia_cobalt_ControllerGetNumEventAggregatorRunsRequest, fuchsia_cobalt_ControllerGetNumEventAggregatorRunsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_ControllerGetNumEventAggregatorRunsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(491), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(847), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1048, "fidl_call_args[fuchsia_cobalt_ControllerGetNumObservationsAddedRequest, fuchsia_cobalt_ControllerGetNumObservationsAddedRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_ControllerGetNumObservationsAddedResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(493), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(494), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(849), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1049, "fidl_call_args[fuchsia_cobalt_ControllerGetNumSendAttemptsRequest, fuchsia_cobalt_ControllerGetNumSendAttemptsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_ControllerGetNumSendAttemptsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(496), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(497), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(851), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1050, "fidl_call_args[fuchsia_cobalt_ControllerListenForInitializedRequest, fuchsia_cobalt_ControllerListenForInitializedRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_ControllerListenForInitializedResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(500), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(501), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(852), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1051, "fidl_call_args[fuchsia_cobalt_ControllerRequestSendSoonRequest, fuchsia_cobalt_ControllerRequestSendSoonRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_ControllerRequestSendSoonResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(503), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(504), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(853), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1052, "fidl_call_args[fuchsia_cobalt_LoggerBaseEndTimerRequest, fuchsia_cobalt_LoggerBaseEndTimerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerBaseEndTimerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(506), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(507), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(856), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1053, "fidl_call_args[fuchsia_cobalt_LoggerBaseLogElapsedTimeRequest, fuchsia_cobalt_LoggerBaseLogElapsedTimeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerBaseLogElapsedTimeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(510), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(511), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(857), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1054, "fidl_call_args[fuchsia_cobalt_LoggerBaseLogEventCountRequest, fuchsia_cobalt_LoggerBaseLogEventCountRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerBaseLogEventCountResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(516), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(517), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(860), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1055, "fidl_call_args[fuchsia_cobalt_LoggerBaseLogEventRequest, fuchsia_cobalt_LoggerBaseLogEventRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerBaseLogEventResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(513), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(514), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(858), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1056, "fidl_call_args[fuchsia_cobalt_LoggerBaseLogFrameRateRequest, fuchsia_cobalt_LoggerBaseLogFrameRateRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerBaseLogFrameRateResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(520), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(521), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(861), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1057, "fidl_call_args[fuchsia_cobalt_LoggerBaseLogMemoryUsageRequest, fuchsia_cobalt_LoggerBaseLogMemoryUsageRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerBaseLogMemoryUsageResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(523), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(524), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(862), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1058, "fidl_call_args[fuchsia_cobalt_LoggerBaseStartTimerRequest, fuchsia_cobalt_LoggerBaseStartTimerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerBaseStartTimerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(526), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(527), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(864), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1059, "fidl_call_args[fuchsia_cobalt_LoggerEndTimerRequest, fuchsia_cobalt_LoggerEndTimerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerEndTimerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(529), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(530), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(867), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1060, "fidl_call_args[fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectIdRequest, fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectIdRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectIdResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(532), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(533), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(871), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1061, "fidl_call_args[fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectSpecRequest, fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectSpecRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectSpecResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(535), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(536), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(873), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1062, "fidl_call_args[fuchsia_cobalt_LoggerFactoryCreateLoggerSimpleFromProjectIdRequest, fuchsia_cobalt_LoggerFactoryCreateLoggerSimpleFromProjectIdRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerFactoryCreateLoggerSimpleFromProjectIdResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(538), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(539), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(875), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1063, "fidl_call_args[fuchsia_cobalt_LoggerLogCobaltEventRequest, fuchsia_cobalt_LoggerLogCobaltEventRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerLogCobaltEventResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(541), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(542), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(880), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1064, "fidl_call_args[fuchsia_cobalt_LoggerLogCobaltEventsRequest, fuchsia_cobalt_LoggerLogCobaltEventsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerLogCobaltEventsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(545), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(546), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(881), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1065, "fidl_call_args[fuchsia_cobalt_LoggerLogCustomEventRequest, fuchsia_cobalt_LoggerLogCustomEventRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerLogCustomEventResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(548), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(549), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(883), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1066, "fidl_call_args[fuchsia_cobalt_LoggerLogElapsedTimeRequest, fuchsia_cobalt_LoggerLogElapsedTimeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerLogElapsedTimeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(551), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(553), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(884), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1067, "fidl_call_args[fuchsia_cobalt_LoggerLogEventCountRequest, fuchsia_cobalt_LoggerLogEventCountRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerLogEventCountResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(558), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(559), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(886), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1068, "fidl_call_args[fuchsia_cobalt_LoggerLogEventRequest, fuchsia_cobalt_LoggerLogEventRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerLogEventResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(555), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(556), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(885), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1069, "fidl_call_args[fuchsia_cobalt_LoggerLogFrameRateRequest, fuchsia_cobalt_LoggerLogFrameRateRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerLogFrameRateResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(561), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(562), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(888), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1070, "fidl_call_args[fuchsia_cobalt_LoggerLogIntHistogramRequest, fuchsia_cobalt_LoggerLogIntHistogramRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerLogIntHistogramResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(565), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(566), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(889), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1071, "fidl_call_args[fuchsia_cobalt_LoggerLogMemoryUsageRequest, fuchsia_cobalt_LoggerLogMemoryUsageRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerLogMemoryUsageResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(568), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(569), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(891), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1072, "fidl_call_args[fuchsia_cobalt_LoggerSimpleEndTimerRequest, fuchsia_cobalt_LoggerSimpleEndTimerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerSimpleEndTimerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(571), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(572), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(893), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1073, "fidl_call_args[fuchsia_cobalt_LoggerSimpleLogElapsedTimeRequest, fuchsia_cobalt_LoggerSimpleLogElapsedTimeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerSimpleLogElapsedTimeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(575), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(576), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(894), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1074, "fidl_call_args[fuchsia_cobalt_LoggerSimpleLogEventCountRequest, fuchsia_cobalt_LoggerSimpleLogEventCountRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerSimpleLogEventCountResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(581), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(582), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(897), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1075, "fidl_call_args[fuchsia_cobalt_LoggerSimpleLogEventRequest, fuchsia_cobalt_LoggerSimpleLogEventRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerSimpleLogEventResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(578), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(579), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(895), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1076, "fidl_call_args[fuchsia_cobalt_LoggerSimpleLogFrameRateRequest, fuchsia_cobalt_LoggerSimpleLogFrameRateRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerSimpleLogFrameRateResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(584), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(586), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(898), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1077, "fidl_call_args[fuchsia_cobalt_LoggerSimpleLogIntHistogramRequest, fuchsia_cobalt_LoggerSimpleLogIntHistogramRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerSimpleLogIntHistogramResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(589), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(590), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(900), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1078, "fidl_call_args[fuchsia_cobalt_LoggerSimpleLogMemoryUsageRequest, fuchsia_cobalt_LoggerSimpleLogMemoryUsageRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerSimpleLogMemoryUsageResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(592), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(593), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(902), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1079, "fidl_call_args[fuchsia_cobalt_LoggerSimpleStartTimerRequest, fuchsia_cobalt_LoggerSimpleStartTimerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerSimpleStartTimerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(595), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(596), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(904), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1080, "fidl_call_args[fuchsia_cobalt_LoggerStartTimerRequest, fuchsia_cobalt_LoggerStartTimerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_LoggerStartTimerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(599), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(600), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(905), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1081, "fidl_call_args[fuchsia_cobalt_MetricEventLoggerFactoryCreateMetricEventLoggerRequest, fuchsia_cobalt_MetricEventLoggerFactoryCreateMetricEventLoggerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_MetricEventLoggerFactoryCreateMetricEventLoggerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(602), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(603), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(907), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1082, "fidl_call_args[fuchsia_cobalt_MetricEventLoggerLogCustomEventRequest, fuchsia_cobalt_MetricEventLoggerLogCustomEventRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_MetricEventLoggerLogCustomEventResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(605), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(606), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(910), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1083, "fidl_call_args[fuchsia_cobalt_MetricEventLoggerLogIntegerHistogramRequest, fuchsia_cobalt_MetricEventLoggerLogIntegerHistogramRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_MetricEventLoggerLogIntegerHistogramResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(611), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(612), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(912), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1084, "fidl_call_args[fuchsia_cobalt_MetricEventLoggerLogIntegerRequest, fuchsia_cobalt_MetricEventLoggerLogIntegerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_MetricEventLoggerLogIntegerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(608), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(609), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(911), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1085, "fidl_call_args[fuchsia_cobalt_MetricEventLoggerLogMetricEventsRequest, fuchsia_cobalt_MetricEventLoggerLogMetricEventsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_MetricEventLoggerLogMetricEventsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(614), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(615), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(913), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1086, "fidl_call_args[fuchsia_cobalt_MetricEventLoggerLogOccurrenceRequest, fuchsia_cobalt_MetricEventLoggerLogOccurrenceRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_MetricEventLoggerLogOccurrenceResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(617), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(618), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(914), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1087, "fidl_call_args[fuchsia_cobalt_MetricEventLoggerLogStringRequest, fuchsia_cobalt_MetricEventLoggerLogStringRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_MetricEventLoggerLogStringResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(620), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(621), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(916), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1088, "fidl_call_args[fuchsia_cobalt_SystemDataUpdaterSetChannelRequest, fuchsia_cobalt_SystemDataUpdaterSetChannelRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_SystemDataUpdaterSetChannelResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(623), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(624), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(918), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1089, "fidl_call_args[fuchsia_cobalt_SystemDataUpdaterSetExperimentStateRequest, fuchsia_cobalt_SystemDataUpdaterSetExperimentStateRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_SystemDataUpdaterSetExperimentStateResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(626), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(627), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(919), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1090, "fidl_call_args[fuchsia_cobalt_SystemDataUpdaterSetSoftwareDistributionInfoRequest, fuchsia_cobalt_SystemDataUpdaterSetSoftwareDistributionInfoRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_cobalt_SystemDataUpdaterSetSoftwareDistributionInfoResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(629), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(630), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(920), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1091, "fidl_call_args[fuchsia_devicesettings_DeviceSettingsManagerGetIntegerRequest, fuchsia_devicesettings_DeviceSettingsManagerGetIntegerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_devicesettings_DeviceSettingsManagerGetIntegerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(632), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(633), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(922), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1092, "fidl_call_args[fuchsia_devicesettings_DeviceSettingsManagerGetStringRequest, fuchsia_devicesettings_DeviceSettingsManagerGetStringRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_devicesettings_DeviceSettingsManagerGetStringResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(636), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(637), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(923), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1093, "fidl_call_args[fuchsia_devicesettings_DeviceSettingsManagerSetIntegerRequest, fuchsia_devicesettings_DeviceSettingsManagerSetIntegerRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_devicesettings_DeviceSettingsManagerSetIntegerResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(639), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(640), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(924), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1094, "fidl_call_args[fuchsia_devicesettings_DeviceSettingsManagerSetStringRequest, fuchsia_devicesettings_DeviceSettingsManagerSetStringRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_devicesettings_DeviceSettingsManagerSetStringResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(642), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(643), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(926), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1095, "fidl_call_args[fuchsia_devicesettings_DeviceSettingsManagerWatchRequest, fuchsia_devicesettings_DeviceSettingsManagerWatchRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_devicesettings_DeviceSettingsManagerWatchResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(646), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(647), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(928), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1096, "fidl_call_args[fuchsia_hardware_ethernet_DeviceConfigMulticastAddMacRequest, fuchsia_hardware_ethernet_DeviceConfigMulticastAddMacRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceConfigMulticastAddMacResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(650), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(651), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(930), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1097, "fidl_call_args[fuchsia_hardware_ethernet_DeviceConfigMulticastDeleteMacRequest, fuchsia_hardware_ethernet_DeviceConfigMulticastDeleteMacRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceConfigMulticastDeleteMacResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(653), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(654), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(932), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1098, "fidl_call_args[fuchsia_hardware_ethernet_DeviceConfigMulticastSetPromiscuousModeRequest, fuchsia_hardware_ethernet_DeviceConfigMulticastSetPromiscuousModeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceConfigMulticastSetPromiscuousModeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(657), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(658), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(933), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1099, "fidl_call_args[fuchsia_hardware_ethernet_DeviceConfigMulticastTestFilterRequest, fuchsia_hardware_ethernet_DeviceConfigMulticastTestFilterRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceConfigMulticastTestFilterResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(660), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(661), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(934), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1100, "fidl_call_args[fuchsia_hardware_ethernet_DeviceDumpRegistersRequest, fuchsia_hardware_ethernet_DeviceDumpRegistersRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceDumpRegistersResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(663), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(664), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(935), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1101, "fidl_call_args[fuchsia_hardware_ethernet_DeviceGetFifosRequest, fuchsia_hardware_ethernet_DeviceGetFifosRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceGetFifosResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(666), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(667), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(937), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1102, "fidl_call_args[fuchsia_hardware_ethernet_DeviceGetInfoRequest, fuchsia_hardware_ethernet_DeviceGetInfoRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceGetInfoResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(669), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(670), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(938), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1103, "fidl_call_args[fuchsia_hardware_ethernet_DeviceGetStatusRequest, fuchsia_hardware_ethernet_DeviceGetStatusRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceGetStatusResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(673), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(674), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(939), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1104, "fidl_call_args[fuchsia_hardware_ethernet_DeviceListenStartRequest, fuchsia_hardware_ethernet_DeviceListenStartRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceListenStartResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(676), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(677), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(940), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1105, "fidl_call_args[fuchsia_hardware_ethernet_DeviceListenStopRequest, fuchsia_hardware_ethernet_DeviceListenStopRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceListenStopResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(679), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(680), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(941), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1106, "fidl_call_args[fuchsia_hardware_ethernet_DeviceSetClientNameRequest, fuchsia_hardware_ethernet_DeviceSetClientNameRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceSetClientNameResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(682), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(942), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1107, "fidl_call_args[fuchsia_hardware_ethernet_DeviceSetIOBufferRequest, fuchsia_hardware_ethernet_DeviceSetIOBufferRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceSetIOBufferResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(685), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(686), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(944), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1108, "fidl_call_args[fuchsia_hardware_ethernet_DeviceSetPromiscuousModeRequest, fuchsia_hardware_ethernet_DeviceSetPromiscuousModeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceSetPromiscuousModeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(689), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(690), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(945), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1109, "fidl_call_args[fuchsia_hardware_ethernet_DeviceStartRequest, fuchsia_hardware_ethernet_DeviceStartRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceStartResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(692), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(693), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(946), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1110, "fidl_call_args[fuchsia_hardware_ethernet_DeviceStopRequest, fuchsia_hardware_ethernet_DeviceStopRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_hardware_ethernet_DeviceStopResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(695), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(696), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(948), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1111, "fidl_call_args[fuchsia_io_DirectoryAdminCloseRequest, fuchsia_io_DirectoryAdminCloseRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminCloseResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(698), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(699), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(950), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1112, "fidl_call_args[fuchsia_io_DirectoryAdminDescribeRequest, fuchsia_io_DirectoryAdminDescribeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminDescribeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(701), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(702), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(953), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1113, "fidl_call_args[fuchsia_io_DirectoryAdminGetAttrRequest, fuchsia_io_DirectoryAdminGetAttrRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminGetAttrResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(705), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(706), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(954), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1114, "fidl_call_args[fuchsia_io_DirectoryAdminGetDevicePathRequest, fuchsia_io_DirectoryAdminGetDevicePathRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminGetDevicePathResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(708), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(709), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(955), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1115, "fidl_call_args[fuchsia_io_DirectoryAdminGetTokenRequest, fuchsia_io_DirectoryAdminGetTokenRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminGetTokenResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(711), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(712), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(956), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1116, "fidl_call_args[fuchsia_io_DirectoryAdminLinkRequest, fuchsia_io_DirectoryAdminLinkRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminLinkResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(714), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(715), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(957), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1117, "fidl_call_args[fuchsia_io_DirectoryAdminMountAndCreateRequest, fuchsia_io_DirectoryAdminMountAndCreateRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminMountAndCreateResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(720), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(721), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(960), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1118, "fidl_call_args[fuchsia_io_DirectoryAdminMountRequest, fuchsia_io_DirectoryAdminMountRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminMountResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(717), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(718), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(959), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1119, "fidl_call_args[fuchsia_io_DirectoryAdminNodeGetFlagsRequest, fuchsia_io_DirectoryAdminNodeGetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminNodeGetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(723), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(724), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(962), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1120, "fidl_call_args[fuchsia_io_DirectoryAdminNodeSetFlagsRequest, fuchsia_io_DirectoryAdminNodeSetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminNodeSetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(727), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(728), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(963), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1121, "fidl_call_args[fuchsia_io_DirectoryAdminQueryFilesystemRequest, fuchsia_io_DirectoryAdminQueryFilesystemRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminQueryFilesystemResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(730), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(731), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(964), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1122, "fidl_call_args[fuchsia_io_DirectoryAdminReadDirentsRequest, fuchsia_io_DirectoryAdminReadDirentsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminReadDirentsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(274), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(275), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(734), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1123, "fidl_call_args[fuchsia_io_DirectoryAdminRenameRequest, fuchsia_io_DirectoryAdminRenameRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminRenameResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(278), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(279), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(735), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1124, "fidl_call_args[fuchsia_io_DirectoryAdminRewindRequest, fuchsia_io_DirectoryAdminRewindRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminRewindResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(281), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(282), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(736), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1125, "fidl_call_args[fuchsia_io_DirectoryAdminSetAttrRequest, fuchsia_io_DirectoryAdminSetAttrRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminSetAttrResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(284), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(285), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(737), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1126, "fidl_call_args[fuchsia_io_DirectoryAdminSyncRequest, fuchsia_io_DirectoryAdminSyncRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminSyncResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(289), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(738), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1127, "fidl_call_args[fuchsia_io_DirectoryAdminUnlinkRequest, fuchsia_io_DirectoryAdminUnlinkRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminUnlinkResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(291), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(292), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(739), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1128, "fidl_call_args[fuchsia_io_DirectoryAdminUnmountNodeRequest, fuchsia_io_DirectoryAdminUnmountNodeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminUnmountNodeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(297), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(298), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(741), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1129, "fidl_call_args[fuchsia_io_DirectoryAdminUnmountRequest, fuchsia_io_DirectoryAdminUnmountRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminUnmountResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(294), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(295), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(740), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1130, "fidl_call_args[fuchsia_io_DirectoryAdminWatchRequest, fuchsia_io_DirectoryAdminWatchRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryAdminWatchResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(300), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(301), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(743), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1131, "fidl_call_args[fuchsia_io_DirectoryCloseRequest, fuchsia_io_DirectoryCloseRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryCloseResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(303), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(304), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(744), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1132, "fidl_call_args[fuchsia_io_DirectoryDescribeRequest, fuchsia_io_DirectoryDescribeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryDescribeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(306), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(307), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(747), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1133, "fidl_call_args[fuchsia_io_DirectoryGetAttrRequest, fuchsia_io_DirectoryGetAttrRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryGetAttrResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(309), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(310), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(749), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1134, "fidl_call_args[fuchsia_io_DirectoryGetTokenRequest, fuchsia_io_DirectoryGetTokenRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryGetTokenResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(312), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(313), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(750), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1135, "fidl_call_args[fuchsia_io_DirectoryLinkRequest, fuchsia_io_DirectoryLinkRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryLinkResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(315), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(316), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(752), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1136, "fidl_call_args[fuchsia_io_DirectoryNodeGetFlagsRequest, fuchsia_io_DirectoryNodeGetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryNodeGetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(318), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(319), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(753), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1137, "fidl_call_args[fuchsia_io_DirectoryNodeSetFlagsRequest, fuchsia_io_DirectoryNodeSetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryNodeSetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(321), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(323), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(754), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1138, "fidl_call_args[fuchsia_io_DirectoryReadDirentsRequest, fuchsia_io_DirectoryReadDirentsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryReadDirentsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(325), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(755), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1139, "fidl_call_args[fuchsia_io_DirectoryRenameRequest, fuchsia_io_DirectoryRenameRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryRenameResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(328), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(756), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1140, "fidl_call_args[fuchsia_io_DirectoryRewindRequest, fuchsia_io_DirectoryRewindRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryRewindResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(332), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(333), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(757), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1141, "fidl_call_args[fuchsia_io_DirectorySetAttrRequest, fuchsia_io_DirectorySetAttrRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectorySetAttrResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(335), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(336), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(758), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1142, "fidl_call_args[fuchsia_io_DirectorySyncRequest, fuchsia_io_DirectorySyncRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectorySyncResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(338), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(339), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(759), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1143, "fidl_call_args[fuchsia_io_DirectoryUnlinkRequest, fuchsia_io_DirectoryUnlinkRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryUnlinkResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(341), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(342), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(760), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1144, "fidl_call_args[fuchsia_io_DirectoryWatchRequest, fuchsia_io_DirectoryWatchRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_DirectoryWatchResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(344), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(345), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(761), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1145, "fidl_call_args[fuchsia_io_FileCloseRequest, fuchsia_io_FileCloseRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileCloseResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(348), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(349), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(763), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1146, "fidl_call_args[fuchsia_io_FileDescribeRequest, fuchsia_io_FileDescribeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileDescribeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(351), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(352), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(765), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1147, "fidl_call_args[fuchsia_io_FileGetAttrRequest, fuchsia_io_FileGetAttrRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileGetAttrResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(354), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(355), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(766), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1148, "fidl_call_args[fuchsia_io_FileGetBufferRequest, fuchsia_io_FileGetBufferRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileGetBufferResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(357), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(358), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(768), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1149, "fidl_call_args[fuchsia_io_FileGetFlagsRequest, fuchsia_io_FileGetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileGetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(361), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(362), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(770), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1150, "fidl_call_args[fuchsia_io_FileNodeGetFlagsRequest, fuchsia_io_FileNodeGetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileNodeGetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(364), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(365), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(771), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1151, "fidl_call_args[fuchsia_io_FileNodeSetFlagsRequest, fuchsia_io_FileNodeSetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileNodeSetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(367), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(368), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(772), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1152, "fidl_call_args[fuchsia_io_FileReadAtRequest, fuchsia_io_FileReadAtRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileReadAtResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(373), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(374), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(774), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1153, "fidl_call_args[fuchsia_io_FileReadRequest, fuchsia_io_FileReadRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileReadResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(370), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(371), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(773), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1154, "fidl_call_args[fuchsia_io_FileSeekRequest, fuchsia_io_FileSeekRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileSeekResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(376), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(377), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(775), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1155, "fidl_call_args[fuchsia_io_FileSetAttrRequest, fuchsia_io_FileSetAttrRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileSetAttrResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(379), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(380), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(776), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1156, "fidl_call_args[fuchsia_io_FileSetFlagsRequest, fuchsia_io_FileSetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileSetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(382), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(383), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(777), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1157, "fidl_call_args[fuchsia_io_FileSyncRequest, fuchsia_io_FileSyncRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileSyncResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(386), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(387), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(778), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1158, "fidl_call_args[fuchsia_io_FileTruncateRequest, fuchsia_io_FileTruncateRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileTruncateResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(389), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(390), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(779), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1159, "fidl_call_args[fuchsia_io_FileWriteAtRequest, fuchsia_io_FileWriteAtRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileWriteAtResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(395), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(396), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(782), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1160, "fidl_call_args[fuchsia_io_FileWriteRequest, fuchsia_io_FileWriteRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_FileWriteResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(392), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(393), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(780), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1161, "fidl_call_args[fuchsia_io_NodeCloseRequest, fuchsia_io_NodeCloseRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_NodeCloseResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(398), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(399), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(784), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1162, "fidl_call_args[fuchsia_io_NodeDescribeRequest, fuchsia_io_NodeDescribeRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_NodeDescribeResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(401), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(402), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(785), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1163, "fidl_call_args[fuchsia_io_NodeGetAttrRequest, fuchsia_io_NodeGetAttrRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_NodeGetAttrResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(404), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(405), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(786), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1164, "fidl_call_args[fuchsia_io_NodeNodeGetFlagsRequest, fuchsia_io_NodeNodeGetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_NodeNodeGetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(407), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(787), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1165, "fidl_call_args[fuchsia_io_NodeNodeSetFlagsRequest, fuchsia_io_NodeNodeSetFlagsRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_NodeNodeSetFlagsResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(411), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(788), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1166, "fidl_call_args[fuchsia_io_NodeSetAttrRequest, fuchsia_io_NodeSetAttrRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_NodeSetAttrResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(789), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1167, "fidl_call_args[fuchsia_io_NodeSyncRequest, fuchsia_io_NodeSyncRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_io_NodeSyncResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(416), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(417), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(791), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1168, "fidl_call_args[fuchsia_ldsvc_LoaderCloneRequest, fuchsia_ldsvc_LoaderCloneRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_ldsvc_LoaderCloneResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(420), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(421), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(793), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1169, "fidl_call_args[fuchsia_ldsvc_LoaderConfigRequest, fuchsia_ldsvc_LoaderConfigRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_ldsvc_LoaderConfigResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(423), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(424), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(794), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1170, "fidl_call_args[fuchsia_ldsvc_LoaderLoadObjectRequest, fuchsia_ldsvc_LoaderLoadObjectRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_ldsvc_LoaderLoadObjectResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(427), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(795), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1171, "fidl_call_args[fuchsia_net_NameLookupLookupHostnameRequest, fuchsia_net_NameLookupLookupHostnameRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_NameLookupLookupHostnameResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(430), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(431), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(798), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1172, "fidl_call_args[fuchsia_net_NameLookupLookupIpRequest, fuchsia_net_NameLookupLookupIpRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_NameLookupLookupIpResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(433), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(434), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(799), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1173, "fidl_call_args[fuchsia_process_LauncherCreateWithoutStartingRequest, fuchsia_process_LauncherCreateWithoutStartingRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_process_LauncherCreateWithoutStartingResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(436), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(437), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(802), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1174, "fidl_call_args[fuchsia_process_LauncherLaunchRequest, fuchsia_process_LauncherLaunchRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_process_LauncherLaunchResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(439), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(804), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1175, "fidl_call_args[fuchsia_process_ResolverResolveRequest, fuchsia_process_ResolverResolveRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_process_ResolverResolveResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(442), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(443), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(806), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1176, "fidl_call_args[fuchsia_scpi_SystemControllerGetDvfsInfoRequest, fuchsia_scpi_SystemControllerGetDvfsInfoRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_scpi_SystemControllerGetDvfsInfoResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(445), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(446), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(808), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1177, "fidl_call_args[fuchsia_scpi_SystemControllerGetSystemStatusRequest, fuchsia_scpi_SystemControllerGetSystemStatusRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_scpi_SystemControllerGetSystemStatusResponseHandles]", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(448), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(449), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(809), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(247), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(252), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(246), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(251), dir: None }, ]))),
		Rc::new(Type::new(1178, "fidl_message_header[1209179889647747072]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(77), dir: None }, ]))),
		Rc::new(Type::new(1179, "fidl_message_header[1265176354698035200]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(78), dir: None }, ]))),
		Rc::new(Type::new(1180, "fidl_message_header[1395379817284632576]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(80), dir: None }, ]))),
		Rc::new(Type::new(1181, "fidl_message_header[1477455143367606272]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(82), dir: None }, ]))),
		Rc::new(Type::new(1182, "fidl_message_header[1509991341700939776]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(84), dir: None }, ]))),
		Rc::new(Type::new(1183, "fidl_message_header[1646690903668031488]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(86), dir: None }, ]))),
		Rc::new(Type::new(1184, "fidl_message_header[1682143474989662208]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(87), dir: None }, ]))),
		Rc::new(Type::new(1185, "fidl_message_header[1728936181606907904]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(89), dir: None }, ]))),
		Rc::new(Type::new(1186, "fidl_message_header[1788877243406090240]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(90), dir: None }, ]))),
		Rc::new(Type::new(1187, "fidl_message_header[1936186706034163712]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(93), dir: None }, ]))),
		Rc::new(Type::new(1188, "fidl_message_header[1984502369399865344]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(94), dir: None }, ]))),
		Rc::new(Type::new(1189, "fidl_message_header[2261615557713330176]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(99), dir: None }, ]))),
		Rc::new(Type::new(1190, "fidl_message_header[2314278406587416576]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(101), dir: None }, ]))),
		Rc::new(Type::new(1191, "fidl_message_header[2345193005658406912]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(102), dir: None }, ]))),
		Rc::new(Type::new(1192, "fidl_message_header[2348638754840772608]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(103), dir: None }, ]))),
		Rc::new(Type::new(1193, "fidl_message_header[2441488624861052928]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(105), dir: None }, ]))),
		Rc::new(Type::new(1194, "fidl_message_header[2446327292067053568]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(106), dir: None }, ]))),
		Rc::new(Type::new(1195, "fidl_message_header[2552164773823250432]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(108), dir: None }, ]))),
		Rc::new(Type::new(1196, "fidl_message_header[2583718567107100672]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(109), dir: None }, ]))),
		Rc::new(Type::new(1197, "fidl_message_header[261153905885315072]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(110), dir: None }, ]))),
		Rc::new(Type::new(1198, "fidl_message_header[2646667141100601344]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(111), dir: None }, ]))),
		Rc::new(Type::new(1199, "fidl_message_header[2666737171087491072]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(112), dir: None }, ]))),
		Rc::new(Type::new(1200, "fidl_message_header[2735727333842354176]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(113), dir: None }, ]))),
		Rc::new(Type::new(1201, "fidl_message_header[2776554506979115008]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(114), dir: None }, ]))),
		Rc::new(Type::new(1202, "fidl_message_header[2921091529562914816]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(115), dir: None }, ]))),
		Rc::new(Type::new(1203, "fidl_message_header[2956004661582102528]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(116), dir: None }, ]))),
		Rc::new(Type::new(1204, "fidl_message_header[3077242749305487360]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(118), dir: None }, ]))),
		Rc::new(Type::new(1205, "fidl_message_header[3099682110886117376]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(119), dir: None }, ]))),
		Rc::new(Type::new(1206, "fidl_message_header[3136513839156166656]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(120), dir: None }, ]))),
		Rc::new(Type::new(1207, "fidl_message_header[3167576666138476544]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(121), dir: None }, ]))),
		Rc::new(Type::new(1208, "fidl_message_header[3223129383757676544]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(122), dir: None }, ]))),
		Rc::new(Type::new(1209, "fidl_message_header[3260696599407362048]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(123), dir: None }, ]))),
		Rc::new(Type::new(1210, "fidl_message_header[3361158860873138176]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(124), dir: None }, ]))),
		Rc::new(Type::new(1211, "fidl_message_header[3384189828428988416]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(125), dir: None }, ]))),
		Rc::new(Type::new(1212, "fidl_message_header[3458431237243273216]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(126), dir: None }, ]))),
		Rc::new(Type::new(1213, "fidl_message_header[3513418264719917056]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(127), dir: None }, ]))),
		Rc::new(Type::new(1214, "fidl_message_header[3609561352454012928]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(128), dir: None }, ]))),
		Rc::new(Type::new(1215, "fidl_message_header[3613565378665381888]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(129), dir: None }, ]))),
		Rc::new(Type::new(1216, "fidl_message_header[365609194151215104]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(130), dir: None }, ]))),
		Rc::new(Type::new(1217, "fidl_message_header[3801485603913072640]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(131), dir: None }, ]))),
		Rc::new(Type::new(1218, "fidl_message_header[381505718517235712]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(132), dir: None }, ]))),
		Rc::new(Type::new(1219, "fidl_message_header[3844094239289901056]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(133), dir: None }, ]))),
		Rc::new(Type::new(1220, "fidl_message_header[3947768504932892672]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(134), dir: None }, ]))),
		Rc::new(Type::new(1221, "fidl_message_header[4031126909545873408]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(136), dir: None }, ]))),
		Rc::new(Type::new(1222, "fidl_message_header[4063087685340758016]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(137), dir: None }, ]))),
		Rc::new(Type::new(1223, "fidl_message_header[4119408201378562048]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(138), dir: None }, ]))),
		Rc::new(Type::new(1224, "fidl_message_header[4188689949463150592]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(139), dir: None }, ]))),
		Rc::new(Type::new(1225, "fidl_message_header[4194979113024356352]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(140), dir: None }, ]))),
		Rc::new(Type::new(1226, "fidl_message_header[4333802197016903680]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(141), dir: None }, ]))),
		Rc::new(Type::new(1227, "fidl_message_header[4394809256814051328]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(142), dir: None }, ]))),
		Rc::new(Type::new(1228, "fidl_message_header[4466724846348271616]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(143), dir: None }, ]))),
		Rc::new(Type::new(1229, "fidl_message_header[4491534570314792960]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(144), dir: None }, ]))),
		Rc::new(Type::new(1230, "fidl_message_header[4549704855752540160]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(145), dir: None }, ]))),
		Rc::new(Type::new(1231, "fidl_message_header[4803997448303280128]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(146), dir: None }, ]))),
		Rc::new(Type::new(1232, "fidl_message_header[4853839517276176384]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(147), dir: None }, ]))),
		Rc::new(Type::new(1233, "fidl_message_header[4985684284435070976]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(148), dir: None }, ]))),
		Rc::new(Type::new(1234, "fidl_message_header[5009665006699020288]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(150), dir: None }, ]))),
		Rc::new(Type::new(1235, "fidl_message_header[5085703167836946432]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(151), dir: None }, ]))),
		Rc::new(Type::new(1236, "fidl_message_header[5180313879959306240]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(152), dir: None }, ]))),
		Rc::new(Type::new(1237, "fidl_message_header[5243927851761139712]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(153), dir: None }, ]))),
		Rc::new(Type::new(1238, "fidl_message_header[5358264446730895360]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(154), dir: None }, ]))),
		Rc::new(Type::new(1239, "fidl_message_header[5374114508140707840]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(155), dir: None }, ]))),
		Rc::new(Type::new(1240, "fidl_message_header[5471756758504439808]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(156), dir: None }, ]))),
		Rc::new(Type::new(1241, "fidl_message_header[5608278135163322368]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(157), dir: None }, ]))),
		Rc::new(Type::new(1242, "fidl_message_header[5751022030375878656]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(158), dir: None }, ]))),
		Rc::new(Type::new(1243, "fidl_message_header[5770859182941011968]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(159), dir: None }, ]))),
		Rc::new(Type::new(1244, "fidl_message_header[5898268129351434240]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(160), dir: None }, ]))),
		Rc::new(Type::new(1245, "fidl_message_header[5960890719622135808]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(161), dir: None }, ]))),
		Rc::new(Type::new(1246, "fidl_message_header[6051974834097750016]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(162), dir: None }, ]))),
		Rc::new(Type::new(1247, "fidl_message_header[6342739803594817536]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(163), dir: None }, ]))),
		Rc::new(Type::new(1248, "fidl_message_header[636987935404589056]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(164), dir: None }, ]))),
		Rc::new(Type::new(1249, "fidl_message_header[6421203251160416256]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(165), dir: None }, ]))),
		Rc::new(Type::new(1250, "fidl_message_header[6539947062396452864]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(166), dir: None }, ]))),
		Rc::new(Type::new(1251, "fidl_message_header[6545502456564940800]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(167), dir: None }, ]))),
		Rc::new(Type::new(1252, "fidl_message_header[6567538787004448768]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(168), dir: None }, ]))),
		Rc::new(Type::new(1253, "fidl_message_header[6687262400539787264]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(169), dir: None }, ]))),
		Rc::new(Type::new(1254, "fidl_message_header[6689692673424490496]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(170), dir: None }, ]))),
		Rc::new(Type::new(1255, "fidl_message_header[6760968196867489792]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(171), dir: None }, ]))),
		Rc::new(Type::new(1256, "fidl_message_header[7080291563556831232]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(173), dir: None }, ]))),
		Rc::new(Type::new(1257, "fidl_message_header[7209297773944897536]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(174), dir: None }, ]))),
		Rc::new(Type::new(1258, "fidl_message_header[7212132130237710336]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(175), dir: None }, ]))),
		Rc::new(Type::new(1259, "fidl_message_header[7339581247477252096]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(176), dir: None }, ]))),
		Rc::new(Type::new(1260, "fidl_message_header[7361570724118528000]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(177), dir: None }, ]))),
		Rc::new(Type::new(1261, "fidl_message_header[7385103511358275584]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(178), dir: None }, ]))),
		Rc::new(Type::new(1262, "fidl_message_header[7405779376547037184]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(179), dir: None }, ]))),
		Rc::new(Type::new(1263, "fidl_message_header[7671161291188207616]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(180), dir: None }, ]))),
		Rc::new(Type::new(1264, "fidl_message_header[7882340851697844224]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(181), dir: None }, ]))),
		Rc::new(Type::new(1265, "fidl_message_header[7932902649815367680]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(182), dir: None }, ]))),
		Rc::new(Type::new(1266, "fidl_message_header[7940519147249598464]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(183), dir: None }, ]))),
		Rc::new(Type::new(1267, "fidl_message_header[8056508059087798272]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(185), dir: None }, ]))),
		Rc::new(Type::new(1268, "fidl_message_header[8102817435855355904]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(186), dir: None }, ]))),
		Rc::new(Type::new(1269, "fidl_message_header[8176789322586914816]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(187), dir: None }, ]))),
		Rc::new(Type::new(1270, "fidl_message_header[8187595812490969088]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(188), dir: None }, ]))),
		Rc::new(Type::new(1271, "fidl_message_header[8413578918384107520]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(189), dir: None }, ]))),
		Rc::new(Type::new(1272, "fidl_message_header[852681824369901568]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(190), dir: None }, ]))),
		Rc::new(Type::new(1273, "fidl_message_header[8639255294892834816]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(191), dir: None }, ]))),
		Rc::new(Type::new(1274, "fidl_message_header[8658864371809648640]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(192), dir: None }, ]))),
		Rc::new(Type::new(1275, "fidl_message_header[8862236549358551040]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(193), dir: None }, ]))),
		Rc::new(Type::new(1276, "fidl_message_header[8967315312257007616]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(194), dir: None }, ]))),
		Rc::new(Type::new(1277, "fidl_message_header[9106017750618210304]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(196), dir: None }, ]))),
		Rc::new(Type::new(1278, "fidl_message_header[9127566980226744320]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("txid".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("magic_number".to_string()), ty: TypeRef::Id(65), dir: None }, Field{ name: String::into_boxed_str("ordinal".to_string()), ty: TypeRef::Id(197), dir: None }, ]))),
		Rc::new(Type::new(1279, "fidl_string", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("size".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(207), dir: None }, ]))),
		Rc::new(Type::new(1280, "fidl_union_member[1, fidl_string]", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(68), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(1279), dir: None }, ]))),
		Rc::new(Type::new(1281, "fidl_union_member[1, fuchsia_cobalt_EventInLine]", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(68), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(1325), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(200), dir: None }, ]))),
		Rc::new(Type::new(1282, "fidl_union_member[1, fuchsia_net_Ipv4AddressInLine]", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(68), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(1743), dir: None }, ]))),
		Rc::new(Type::new(1283, "fidl_union_member[1, int64]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(68), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1284, "fidl_union_member[2, fuchsia_cobalt_CountEventInLine]", 20, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(69), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(1321), dir: None }, ]))),
		Rc::new(Type::new(1285, "fidl_union_member[2, fuchsia_net_Ipv6AddressInLine]", 20, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(69), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(1746), dir: None }, ]))),
		Rc::new(Type::new(1286, "fidl_union_member[2, int64]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(69), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1287, "fidl_union_member[3, fidl_vector]", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(70), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(1293), dir: None }, ]))),
		Rc::new(Type::new(1288, "fidl_union_member[3, int64]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(70), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1289, "fidl_union_member[4, fidl_string]", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(71), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(1279), dir: None }, ]))),
		Rc::new(Type::new(1290, "fidl_union_member[4, int32]", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(71), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1291, "fidl_union_member[5, int64]", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(72), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1292, "fidl_union_member[7, fidl_vector]", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag".to_string()), ty: TypeRef::Id(73), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(1293), dir: None }, ]))),
		Rc::new(Type::new(1293, "fidl_vector", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("size".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(207), dir: None }, ]))),
		Rc::new(Type::new(1294, "fuchsia_cobalt_CobaltEventHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1295, "fuchsia_cobalt_CobaltEventInLine", 60, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_codesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("payloadInLine".to_string()), ty: TypeRef::Id(1326), dir: None }, ]))),
		Rc::new(Type::new(1296, "fuchsia_cobalt_CobaltEventOutOfLine", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("event_codesOutOfLine".to_string()), ty: TypeRef::Id(29), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1297, "fuchsia_cobalt_ControllerBlockUntilEmptyRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1207), dir: None }, Field{ name: String::into_boxed_str("max_wait_seconds".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1298, "fuchsia_cobalt_ControllerBlockUntilEmptyRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1299, "fuchsia_cobalt_ControllerBlockUntilEmptyResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1300, "fuchsia_cobalt_ControllerGenerateAggregatedObservationsRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1251), dir: None }, Field{ name: String::into_boxed_str("day_index".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("report_idsInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("report_idsOutOfLine".to_string()), ty: TypeRef::Id(29), dir: None }, ]))),
		Rc::new(Type::new(1301, "fuchsia_cobalt_ControllerGenerateAggregatedObservationsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1302, "fuchsia_cobalt_ControllerGenerateAggregatedObservationsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1303, "fuchsia_cobalt_ControllerGetFailedSendAttemptsRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1225), dir: None }, ]))),
		Rc::new(Type::new(1304, "fuchsia_cobalt_ControllerGetFailedSendAttemptsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1305, "fuchsia_cobalt_ControllerGetFailedSendAttemptsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1306, "fuchsia_cobalt_ControllerGetNumEventAggregatorRunsRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1212), dir: None }, ]))),
		Rc::new(Type::new(1307, "fuchsia_cobalt_ControllerGetNumEventAggregatorRunsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1308, "fuchsia_cobalt_ControllerGetNumEventAggregatorRunsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1309, "fuchsia_cobalt_ControllerGetNumObservationsAddedRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1202), dir: None }, ]))),
		Rc::new(Type::new(1310, "fuchsia_cobalt_ControllerGetNumObservationsAddedRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1311, "fuchsia_cobalt_ControllerGetNumObservationsAddedResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1312, "fuchsia_cobalt_ControllerGetNumSendAttemptsRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1247), dir: None }, ]))),
		Rc::new(Type::new(1313, "fuchsia_cobalt_ControllerGetNumSendAttemptsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1314, "fuchsia_cobalt_ControllerGetNumSendAttemptsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1315, "fuchsia_cobalt_ControllerListenForInitializedRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1219), dir: None }, ]))),
		Rc::new(Type::new(1316, "fuchsia_cobalt_ControllerListenForInitializedRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1317, "fuchsia_cobalt_ControllerListenForInitializedResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1318, "fuchsia_cobalt_ControllerRequestSendSoonRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1248), dir: None }, ]))),
		Rc::new(Type::new(1319, "fuchsia_cobalt_ControllerRequestSendSoonRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1320, "fuchsia_cobalt_ControllerRequestSendSoonResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1321, "fuchsia_cobalt_CountEventInLine", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("period_duration_micros".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1322, "fuchsia_cobalt_CustomEventValueHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1323, "fuchsia_cobalt_CustomEventValueInLine", 40, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dimension_nameInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("valueInLine".to_string()), ty: TypeRef::Id(1454), dir: None }, ]))),
		Rc::new(Type::new(1324, "fuchsia_cobalt_CustomEventValueOutOfLine", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dimension_nameOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1325, "fuchsia_cobalt_EventInLine", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("padding".to_string()), ty: TypeRef::Id(243), dir: None }, ]))),
		Rc::new(Type::new(1326, "fuchsia_cobalt_EventPayloadInLine", 24, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("eventInLine".to_string()), ty: TypeRef::Id(1281), dir: None }, Field{ name: String::into_boxed_str("event_countInLine".to_string()), ty: TypeRef::Id(1284), dir: None }, Field{ name: String::into_boxed_str("elapsed_micros".to_string()), ty: TypeRef::Id(1288), dir: None }, Field{ name: String::into_boxed_str("fps".to_string()), ty: TypeRef::Id(1290), dir: None }, Field{ name: String::into_boxed_str("memory_bytes_used".to_string()), ty: TypeRef::Id(1291), dir: None }, Field{ name: String::into_boxed_str("int_histogramInLine".to_string()), ty: TypeRef::Id(1292), dir: None }, ]))),
		Rc::new(Type::new(1327, "fuchsia_cobalt_ExperimentHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1328, "fuchsia_cobalt_ExperimentInLine", 12, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("experiment_id".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("arm_id".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1329, "fuchsia_cobalt_ExperimentOutOfLine", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1330, "fuchsia_cobalt_HistogramBucketHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1331, "fuchsia_cobalt_HistogramBucketInLine", 12, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("index".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1332, "fuchsia_cobalt_HistogramBucketOutOfLine", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1333, "fuchsia_cobalt_LoggerBaseEndTimerRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1259), dir: None }, Field{ name: String::into_boxed_str("timer_idInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("timeout_s".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("timer_idOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1334, "fuchsia_cobalt_LoggerBaseEndTimerRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1335, "fuchsia_cobalt_LoggerBaseEndTimerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1336, "fuchsia_cobalt_LoggerBaseLogElapsedTimeRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1182), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("elapsed_micros".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1337, "fuchsia_cobalt_LoggerBaseLogElapsedTimeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1338, "fuchsia_cobalt_LoggerBaseLogElapsedTimeResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1339, "fuchsia_cobalt_LoggerBaseLogEventCountRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1267), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("period_duration_micros".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1340, "fuchsia_cobalt_LoggerBaseLogEventCountRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1341, "fuchsia_cobalt_LoggerBaseLogEventCountResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1342, "fuchsia_cobalt_LoggerBaseLogEventRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1180), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1343, "fuchsia_cobalt_LoggerBaseLogEventRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1344, "fuchsia_cobalt_LoggerBaseLogEventResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1345, "fuchsia_cobalt_LoggerBaseLogFrameRateRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1206), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("fps".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1346, "fuchsia_cobalt_LoggerBaseLogFrameRateRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1347, "fuchsia_cobalt_LoggerBaseLogFrameRateResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1348, "fuchsia_cobalt_LoggerBaseLogMemoryUsageRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1262), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1349, "fuchsia_cobalt_LoggerBaseLogMemoryUsageRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1350, "fuchsia_cobalt_LoggerBaseLogMemoryUsageResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1351, "fuchsia_cobalt_LoggerBaseStartTimerRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1238), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("timer_idInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("timeout_s".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("timer_idOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1352, "fuchsia_cobalt_LoggerBaseStartTimerRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1353, "fuchsia_cobalt_LoggerBaseStartTimerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1354, "fuchsia_cobalt_LoggerEndTimerRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1259), dir: None }, Field{ name: String::into_boxed_str("timer_idInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("timeout_s".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("timer_idOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1355, "fuchsia_cobalt_LoggerEndTimerRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1356, "fuchsia_cobalt_LoggerEndTimerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1357, "fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectIdRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1205), dir: None }, Field{ name: String::into_boxed_str("project_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("logger".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1358, "fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectIdRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("logger".to_string()), ty: TypeRef::Id(986), dir: None }, ]))),
		Rc::new(Type::new(1359, "fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectIdResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1360, "fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectSpecRequest", 28, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1270), dir: None }, Field{ name: String::into_boxed_str("customer_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("project_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("logger".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1361, "fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectSpecRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("logger".to_string()), ty: TypeRef::Id(986), dir: None }, ]))),
		Rc::new(Type::new(1362, "fuchsia_cobalt_LoggerFactoryCreateLoggerFromProjectSpecResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1363, "fuchsia_cobalt_LoggerFactoryCreateLoggerSimpleFromProjectIdRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1179), dir: None }, Field{ name: String::into_boxed_str("project_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("logger".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1364, "fuchsia_cobalt_LoggerFactoryCreateLoggerSimpleFromProjectIdRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("logger".to_string()), ty: TypeRef::Id(984), dir: None }, ]))),
		Rc::new(Type::new(1365, "fuchsia_cobalt_LoggerFactoryCreateLoggerSimpleFromProjectIdResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1366, "fuchsia_cobalt_LoggerLogCobaltEventRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1261), dir: None }, Field{ name: String::into_boxed_str("eventInLine".to_string()), ty: TypeRef::Id(1295), dir: None }, Field{ name: String::into_boxed_str("eventOutOfLine".to_string()), ty: TypeRef::Id(1296), dir: None }, ]))),
		Rc::new(Type::new(1367, "fuchsia_cobalt_LoggerLogCobaltEventRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("event".to_string()), ty: TypeRef::Id(1294), dir: None }, ]))),
		Rc::new(Type::new(1368, "fuchsia_cobalt_LoggerLogCobaltEventResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1369, "fuchsia_cobalt_LoggerLogCobaltEventsRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1203), dir: None }, Field{ name: String::into_boxed_str("eventsInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("eventsOutOfLine".to_string()), ty: TypeRef::Id(1797), dir: None }, ]))),
		Rc::new(Type::new(1370, "fuchsia_cobalt_LoggerLogCobaltEventsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("events".to_string()), ty: TypeRef::Id(18), dir: None }, ]))),
		Rc::new(Type::new(1371, "fuchsia_cobalt_LoggerLogCobaltEventsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1372, "fuchsia_cobalt_LoggerLogCustomEventRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1227), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_valuesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("event_valuesOutOfLine".to_string()), ty: TypeRef::Id(1798), dir: None }, ]))),
		Rc::new(Type::new(1373, "fuchsia_cobalt_LoggerLogCustomEventRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("event_values".to_string()), ty: TypeRef::Id(19), dir: None }, ]))),
		Rc::new(Type::new(1374, "fuchsia_cobalt_LoggerLogCustomEventResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1375, "fuchsia_cobalt_LoggerLogElapsedTimeRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1182), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("elapsed_micros".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1376, "fuchsia_cobalt_LoggerLogElapsedTimeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1377, "fuchsia_cobalt_LoggerLogElapsedTimeResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1378, "fuchsia_cobalt_LoggerLogEventCountRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1267), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("period_duration_micros".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1379, "fuchsia_cobalt_LoggerLogEventCountRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1380, "fuchsia_cobalt_LoggerLogEventCountResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1381, "fuchsia_cobalt_LoggerLogEventRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1180), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1382, "fuchsia_cobalt_LoggerLogEventRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1383, "fuchsia_cobalt_LoggerLogEventResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1384, "fuchsia_cobalt_LoggerLogFrameRateRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1206), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("fps".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1385, "fuchsia_cobalt_LoggerLogFrameRateRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1386, "fuchsia_cobalt_LoggerLogFrameRateResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1387, "fuchsia_cobalt_LoggerLogIntHistogramRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1275), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("histogramInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("histogramOutOfLine".to_string()), ty: TypeRef::Id(1800), dir: None }, ]))),
		Rc::new(Type::new(1388, "fuchsia_cobalt_LoggerLogIntHistogramRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("histogram".to_string()), ty: TypeRef::Id(21), dir: None }, ]))),
		Rc::new(Type::new(1389, "fuchsia_cobalt_LoggerLogIntHistogramResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1390, "fuchsia_cobalt_LoggerLogMemoryUsageRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1262), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1391, "fuchsia_cobalt_LoggerLogMemoryUsageRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1392, "fuchsia_cobalt_LoggerLogMemoryUsageResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1393, "fuchsia_cobalt_LoggerSimpleEndTimerRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1259), dir: None }, Field{ name: String::into_boxed_str("timer_idInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("timeout_s".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("timer_idOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1394, "fuchsia_cobalt_LoggerSimpleEndTimerRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1395, "fuchsia_cobalt_LoggerSimpleEndTimerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1396, "fuchsia_cobalt_LoggerSimpleLogElapsedTimeRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1182), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("elapsed_micros".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1397, "fuchsia_cobalt_LoggerSimpleLogElapsedTimeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1398, "fuchsia_cobalt_LoggerSimpleLogElapsedTimeResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1399, "fuchsia_cobalt_LoggerSimpleLogEventCountRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1267), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("period_duration_micros".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1400, "fuchsia_cobalt_LoggerSimpleLogEventCountRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1401, "fuchsia_cobalt_LoggerSimpleLogEventCountResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1402, "fuchsia_cobalt_LoggerSimpleLogEventRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1180), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1403, "fuchsia_cobalt_LoggerSimpleLogEventRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1404, "fuchsia_cobalt_LoggerSimpleLogEventResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1405, "fuchsia_cobalt_LoggerSimpleLogFrameRateRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1206), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("fps".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1406, "fuchsia_cobalt_LoggerSimpleLogFrameRateRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1407, "fuchsia_cobalt_LoggerSimpleLogFrameRateResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1408, "fuchsia_cobalt_LoggerSimpleLogIntHistogramRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1209), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("bucket_indicesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("bucket_countsInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("bucket_indicesOutOfLine".to_string()), ty: TypeRef::Id(29), dir: None }, Field{ name: String::into_boxed_str("bucket_countsOutOfLine".to_string()), ty: TypeRef::Id(35), dir: None }, ]))),
		Rc::new(Type::new(1409, "fuchsia_cobalt_LoggerSimpleLogIntHistogramRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1410, "fuchsia_cobalt_LoggerSimpleLogIntHistogramResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1411, "fuchsia_cobalt_LoggerSimpleLogMemoryUsageRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1262), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1412, "fuchsia_cobalt_LoggerSimpleLogMemoryUsageRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1413, "fuchsia_cobalt_LoggerSimpleLogMemoryUsageResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1414, "fuchsia_cobalt_LoggerSimpleStartTimerRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1238), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("timer_idInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("timeout_s".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("timer_idOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1415, "fuchsia_cobalt_LoggerSimpleStartTimerRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1416, "fuchsia_cobalt_LoggerSimpleStartTimerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1417, "fuchsia_cobalt_LoggerStartTimerRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1238), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_code".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("timer_idInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("timeout_s".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("componentOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("timer_idOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1418, "fuchsia_cobalt_LoggerStartTimerRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1419, "fuchsia_cobalt_LoggerStartTimerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1420, "fuchsia_cobalt_MetricEventHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1421, "fuchsia_cobalt_MetricEventInLine", 44, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_codesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("payloadInLine".to_string()), ty: TypeRef::Id(1444), dir: None }, ]))),
		Rc::new(Type::new(1422, "fuchsia_cobalt_MetricEventLoggerFactoryCreateMetricEventLoggerRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1220), dir: None }, Field{ name: String::into_boxed_str("logger".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1423, "fuchsia_cobalt_MetricEventLoggerFactoryCreateMetricEventLoggerRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("logger".to_string()), ty: TypeRef::Id(990), dir: None }, ]))),
		Rc::new(Type::new(1424, "fuchsia_cobalt_MetricEventLoggerFactoryCreateMetricEventLoggerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1425, "fuchsia_cobalt_MetricEventLoggerLogCustomEventRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1266), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("event_valuesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("event_valuesOutOfLine".to_string()), ty: TypeRef::Id(1798), dir: None }, ]))),
		Rc::new(Type::new(1426, "fuchsia_cobalt_MetricEventLoggerLogCustomEventRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("event_values".to_string()), ty: TypeRef::Id(19), dir: None }, ]))),
		Rc::new(Type::new(1427, "fuchsia_cobalt_MetricEventLoggerLogCustomEventResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1428, "fuchsia_cobalt_MetricEventLoggerLogIntegerHistogramRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1232), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("histogramInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("event_codesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("histogramOutOfLine".to_string()), ty: TypeRef::Id(1800), dir: None }, Field{ name: String::into_boxed_str("event_codesOutOfLine".to_string()), ty: TypeRef::Id(29), dir: None }, ]))),
		Rc::new(Type::new(1429, "fuchsia_cobalt_MetricEventLoggerLogIntegerHistogramRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("histogram".to_string()), ty: TypeRef::Id(21), dir: None }, ]))),
		Rc::new(Type::new(1430, "fuchsia_cobalt_MetricEventLoggerLogIntegerHistogramResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1431, "fuchsia_cobalt_MetricEventLoggerLogIntegerRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1233), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("value".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("event_codesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("event_codesOutOfLine".to_string()), ty: TypeRef::Id(29), dir: None }, ]))),
		Rc::new(Type::new(1432, "fuchsia_cobalt_MetricEventLoggerLogIntegerRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1433, "fuchsia_cobalt_MetricEventLoggerLogIntegerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1434, "fuchsia_cobalt_MetricEventLoggerLogMetricEventsRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1263), dir: None }, Field{ name: String::into_boxed_str("eventsInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("eventsOutOfLine".to_string()), ty: TypeRef::Id(1801), dir: None }, ]))),
		Rc::new(Type::new(1435, "fuchsia_cobalt_MetricEventLoggerLogMetricEventsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("events".to_string()), ty: TypeRef::Id(22), dir: None }, ]))),
		Rc::new(Type::new(1436, "fuchsia_cobalt_MetricEventLoggerLogMetricEventsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1437, "fuchsia_cobalt_MetricEventLoggerLogOccurrenceRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1241), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("event_codesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("event_codesOutOfLine".to_string()), ty: TypeRef::Id(29), dir: None }, ]))),
		Rc::new(Type::new(1438, "fuchsia_cobalt_MetricEventLoggerLogOccurrenceRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1439, "fuchsia_cobalt_MetricEventLoggerLogOccurrenceResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1440, "fuchsia_cobalt_MetricEventLoggerLogStringRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1249), dir: None }, Field{ name: String::into_boxed_str("metric_id".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("string_valueInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("event_codesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("string_valueOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("event_codesOutOfLine".to_string()), ty: TypeRef::Id(29), dir: None }, ]))),
		Rc::new(Type::new(1441, "fuchsia_cobalt_MetricEventLoggerLogStringRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1442, "fuchsia_cobalt_MetricEventLoggerLogStringResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1443, "fuchsia_cobalt_MetricEventOutOfLine", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("event_codesOutOfLine".to_string()), ty: TypeRef::Id(29), dir: None }, ]))),
		Rc::new(Type::new(1444, "fuchsia_cobalt_MetricEventPayloadInLine", 24, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(1283), dir: None }, Field{ name: String::into_boxed_str("integer_value".to_string()), ty: TypeRef::Id(1286), dir: None }, Field{ name: String::into_boxed_str("histogramInLine".to_string()), ty: TypeRef::Id(1287), dir: None }, Field{ name: String::into_boxed_str("string_valueInLine".to_string()), ty: TypeRef::Id(1289), dir: None }, ]))),
		Rc::new(Type::new(1445, "fuchsia_cobalt_SystemDataUpdaterSetChannelRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1221), dir: None }, Field{ name: String::into_boxed_str("current_channelInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("current_channelOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1446, "fuchsia_cobalt_SystemDataUpdaterSetChannelRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1447, "fuchsia_cobalt_SystemDataUpdaterSetChannelResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1448, "fuchsia_cobalt_SystemDataUpdaterSetExperimentStateRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1269), dir: None }, Field{ name: String::into_boxed_str("experimentsInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("experimentsOutOfLine".to_string()), ty: TypeRef::Id(1799), dir: None }, ]))),
		Rc::new(Type::new(1449, "fuchsia_cobalt_SystemDataUpdaterSetExperimentStateRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("experiments".to_string()), ty: TypeRef::Id(24), dir: None }, ]))),
		Rc::new(Type::new(1450, "fuchsia_cobalt_SystemDataUpdaterSetExperimentStateResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1451, "fuchsia_cobalt_SystemDataUpdaterSetSoftwareDistributionInfoRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1278), dir: None }, ]))),
		Rc::new(Type::new(1452, "fuchsia_cobalt_SystemDataUpdaterSetSoftwareDistributionInfoRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1453, "fuchsia_cobalt_SystemDataUpdaterSetSoftwareDistributionInfoResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1454, "fuchsia_cobalt_ValueInLine", 24, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("string_valueInLine".to_string()), ty: TypeRef::Id(1280), dir: None }, Field{ name: String::into_boxed_str("int_value".to_string()), ty: TypeRef::Id(1286), dir: None }, Field{ name: String::into_boxed_str("double_value".to_string()), ty: TypeRef::Id(1288), dir: None }, Field{ name: String::into_boxed_str("index_value".to_string()), ty: TypeRef::Id(1290), dir: None }, ]))),
		Rc::new(Type::new(1455, "fuchsia_devicesettings_DeviceSettingsManagerGetIntegerRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1253), dir: None }, Field{ name: String::into_boxed_str("keyInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("keyOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1456, "fuchsia_devicesettings_DeviceSettingsManagerGetIntegerRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1457, "fuchsia_devicesettings_DeviceSettingsManagerGetIntegerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1458, "fuchsia_devicesettings_DeviceSettingsManagerGetStringRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1240), dir: None }, Field{ name: String::into_boxed_str("keyInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("keyOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1459, "fuchsia_devicesettings_DeviceSettingsManagerGetStringRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1460, "fuchsia_devicesettings_DeviceSettingsManagerGetStringResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1461, "fuchsia_devicesettings_DeviceSettingsManagerSetIntegerRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1223), dir: None }, Field{ name: String::into_boxed_str("keyInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("val".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("keyOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1462, "fuchsia_devicesettings_DeviceSettingsManagerSetIntegerRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1463, "fuchsia_devicesettings_DeviceSettingsManagerSetIntegerResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1464, "fuchsia_devicesettings_DeviceSettingsManagerSetStringRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1194), dir: None }, Field{ name: String::into_boxed_str("keyInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("valInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("keyOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("valOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1465, "fuchsia_devicesettings_DeviceSettingsManagerSetStringRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1466, "fuchsia_devicesettings_DeviceSettingsManagerSetStringResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1467, "fuchsia_devicesettings_DeviceSettingsManagerWatchRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1224), dir: None }, Field{ name: String::into_boxed_str("keyInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("watcher".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("keyOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1468, "fuchsia_devicesettings_DeviceSettingsManagerWatchRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("watcher".to_string()), ty: TypeRef::Id(995), dir: None }, ]))),
		Rc::new(Type::new(1469, "fuchsia_devicesettings_DeviceSettingsManagerWatchResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1470, "fuchsia_devicesettings_DeviceSettingsWatcherOnChangeSettingsRequest", 17, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1198), dir: None }, Field{ name: String::into_boxed_str("type_".to_string()), ty: TypeRef::Id(228), dir: None }, ]))),
		Rc::new(Type::new(1471, "fuchsia_devicesettings_DeviceSettingsWatcherOnChangeSettingsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1472, "fuchsia_hardware_ethernet_DeviceConfigMulticastAddMacRequest", 22, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1197), dir: None }, Field{ name: String::into_boxed_str("addrInLine".to_string()), ty: TypeRef::Id(1520), dir: None }, Field{ name: String::into_boxed_str("addrOutOfLine".to_string()), ty: TypeRef::Id(1521), dir: None }, ]))),
		Rc::new(Type::new(1473, "fuchsia_hardware_ethernet_DeviceConfigMulticastAddMacRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(1519), dir: None }, ]))),
		Rc::new(Type::new(1474, "fuchsia_hardware_ethernet_DeviceConfigMulticastAddMacResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1475, "fuchsia_hardware_ethernet_DeviceConfigMulticastDeleteMacRequest", 22, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1244), dir: None }, Field{ name: String::into_boxed_str("addrInLine".to_string()), ty: TypeRef::Id(1520), dir: None }, Field{ name: String::into_boxed_str("addrOutOfLine".to_string()), ty: TypeRef::Id(1521), dir: None }, ]))),
		Rc::new(Type::new(1476, "fuchsia_hardware_ethernet_DeviceConfigMulticastDeleteMacRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(1519), dir: None }, ]))),
		Rc::new(Type::new(1477, "fuchsia_hardware_ethernet_DeviceConfigMulticastDeleteMacResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1478, "fuchsia_hardware_ethernet_DeviceConfigMulticastSetPromiscuousModeRequest", 17, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1204), dir: None }, Field{ name: String::into_boxed_str("enabled".to_string()), ty: TypeRef::Id(243), dir: None }, ]))),
		Rc::new(Type::new(1479, "fuchsia_hardware_ethernet_DeviceConfigMulticastSetPromiscuousModeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1480, "fuchsia_hardware_ethernet_DeviceConfigMulticastSetPromiscuousModeResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1481, "fuchsia_hardware_ethernet_DeviceConfigMulticastTestFilterRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1218), dir: None }, ]))),
		Rc::new(Type::new(1482, "fuchsia_hardware_ethernet_DeviceConfigMulticastTestFilterRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1483, "fuchsia_hardware_ethernet_DeviceConfigMulticastTestFilterResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1484, "fuchsia_hardware_ethernet_DeviceDumpRegistersRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1255), dir: None }, ]))),
		Rc::new(Type::new(1485, "fuchsia_hardware_ethernet_DeviceDumpRegistersRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1486, "fuchsia_hardware_ethernet_DeviceDumpRegistersResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1487, "fuchsia_hardware_ethernet_DeviceGetFifosRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1193), dir: None }, ]))),
		Rc::new(Type::new(1488, "fuchsia_hardware_ethernet_DeviceGetFifosRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1489, "fuchsia_hardware_ethernet_DeviceGetFifosResponseHandles", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1517), dir: None }, ]))),
		Rc::new(Type::new(1490, "fuchsia_hardware_ethernet_DeviceGetInfoRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1178), dir: None }, ]))),
		Rc::new(Type::new(1491, "fuchsia_hardware_ethernet_DeviceGetInfoRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1492, "fuchsia_hardware_ethernet_DeviceGetInfoResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1518), dir: None }, ]))),
		Rc::new(Type::new(1493, "fuchsia_hardware_ethernet_DeviceGetStatusRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1264), dir: None }, ]))),
		Rc::new(Type::new(1494, "fuchsia_hardware_ethernet_DeviceGetStatusRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1495, "fuchsia_hardware_ethernet_DeviceGetStatusResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1496, "fuchsia_hardware_ethernet_DeviceListenStartRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1252), dir: None }, ]))),
		Rc::new(Type::new(1497, "fuchsia_hardware_ethernet_DeviceListenStartRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1498, "fuchsia_hardware_ethernet_DeviceListenStartResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1499, "fuchsia_hardware_ethernet_DeviceListenStopRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1195), dir: None }, ]))),
		Rc::new(Type::new(1500, "fuchsia_hardware_ethernet_DeviceListenStopRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1501, "fuchsia_hardware_ethernet_DeviceListenStopResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1502, "fuchsia_hardware_ethernet_DeviceSetClientNameRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1257), dir: None }, Field{ name: String::into_boxed_str("nameInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("nameOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1503, "fuchsia_hardware_ethernet_DeviceSetClientNameRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1504, "fuchsia_hardware_ethernet_DeviceSetClientNameResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1505, "fuchsia_hardware_ethernet_DeviceSetIOBufferRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1190), dir: None }, Field{ name: String::into_boxed_str("h".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1506, "fuchsia_hardware_ethernet_DeviceSetIOBufferRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("h".to_string()), ty: TypeRef::Id(1037), dir: None }, ]))),
		Rc::new(Type::new(1507, "fuchsia_hardware_ethernet_DeviceSetIOBufferResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1508, "fuchsia_hardware_ethernet_DeviceSetPromiscuousModeRequest", 17, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1217), dir: None }, Field{ name: String::into_boxed_str("enabled".to_string()), ty: TypeRef::Id(243), dir: None }, ]))),
		Rc::new(Type::new(1509, "fuchsia_hardware_ethernet_DeviceSetPromiscuousModeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1510, "fuchsia_hardware_ethernet_DeviceSetPromiscuousModeResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1511, "fuchsia_hardware_ethernet_DeviceStartRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1196), dir: None }, ]))),
		Rc::new(Type::new(1512, "fuchsia_hardware_ethernet_DeviceStartRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1513, "fuchsia_hardware_ethernet_DeviceStartResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1514, "fuchsia_hardware_ethernet_DeviceStopRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1228), dir: None }, ]))),
		Rc::new(Type::new(1515, "fuchsia_hardware_ethernet_DeviceStopRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1516, "fuchsia_hardware_ethernet_DeviceStopResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1517, "fuchsia_hardware_ethernet_FifosHandles", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("rx".to_string()), ty: TypeRef::Id(1022), dir: None }, Field{ name: String::into_boxed_str("tx".to_string()), ty: TypeRef::Id(1022), dir: None }, ]))),
		Rc::new(Type::new(1518, "fuchsia_hardware_ethernet_InfoHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mac".to_string()), ty: TypeRef::Id(1519), dir: None }, ]))),
		Rc::new(Type::new(1519, "fuchsia_hardware_ethernet_MacAddressHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1520, "fuchsia_hardware_ethernet_MacAddressInLine", 6, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("octetsInLine".to_string()), ty: TypeRef::Id(47), dir: None }, ]))),
		Rc::new(Type::new(1521, "fuchsia_hardware_ethernet_MacAddressOutOfLine", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1522, "fuchsia_io_DatagramSocketHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("event".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1523, "fuchsia_io_DeviceHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("event".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1524, "fuchsia_io_DirectoryAdminCloneRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1185), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1525, "fuchsia_io_DirectoryAdminCloneRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(1008), dir: None }, ]))),
		Rc::new(Type::new(1526, "fuchsia_io_DirectoryAdminCloseRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1245), dir: None }, ]))),
		Rc::new(Type::new(1527, "fuchsia_io_DirectoryAdminCloseRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1528, "fuchsia_io_DirectoryAdminCloseResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1529, "fuchsia_io_DirectoryAdminDescribeRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1189), dir: None }, ]))),
		Rc::new(Type::new(1530, "fuchsia_io_DirectoryAdminDescribeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1531, "fuchsia_io_DirectoryAdminDescribeResponseHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1706), dir: None }, ]))),
		Rc::new(Type::new(1532, "fuchsia_io_DirectoryAdminGetAttrRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1234), dir: None }, ]))),
		Rc::new(Type::new(1533, "fuchsia_io_DirectoryAdminGetAttrRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1534, "fuchsia_io_DirectoryAdminGetAttrResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("attributes".to_string()), ty: TypeRef::Id(1692), dir: None }, ]))),
		Rc::new(Type::new(1535, "fuchsia_io_DirectoryAdminGetDevicePathRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1211), dir: None }, ]))),
		Rc::new(Type::new(1536, "fuchsia_io_DirectoryAdminGetDevicePathRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1537, "fuchsia_io_DirectoryAdminGetDevicePathResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1538, "fuchsia_io_DirectoryAdminGetTokenRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1214), dir: None }, ]))),
		Rc::new(Type::new(1539, "fuchsia_io_DirectoryAdminGetTokenRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1540, "fuchsia_io_DirectoryAdminGetTokenResponseHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("token".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1541, "fuchsia_io_DirectoryAdminLinkRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1188), dir: None }, Field{ name: String::into_boxed_str("srcInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("dst_parent_token".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("dstInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("srcOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("dstOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1542, "fuchsia_io_DirectoryAdminLinkRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dst_parent_token".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1543, "fuchsia_io_DirectoryAdminLinkResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1544, "fuchsia_io_DirectoryAdminMountAndCreateRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1215), dir: None }, Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("nameInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("nameOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1545, "fuchsia_io_DirectoryAdminMountAndCreateRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(1003), dir: None }, ]))),
		Rc::new(Type::new(1546, "fuchsia_io_DirectoryAdminMountAndCreateResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1547, "fuchsia_io_DirectoryAdminMountRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1277), dir: None }, Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1548, "fuchsia_io_DirectoryAdminMountRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(1003), dir: None }, ]))),
		Rc::new(Type::new(1549, "fuchsia_io_DirectoryAdminMountResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1550, "fuchsia_io_DirectoryAdminNodeGetFlagsRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1226), dir: None }, ]))),
		Rc::new(Type::new(1551, "fuchsia_io_DirectoryAdminNodeGetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1552, "fuchsia_io_DirectoryAdminNodeGetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1553, "fuchsia_io_DirectoryAdminNodeSetFlagsRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1235), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1554, "fuchsia_io_DirectoryAdminNodeSetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1555, "fuchsia_io_DirectoryAdminNodeSetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1556, "fuchsia_io_DirectoryAdminOnOpenEventHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1706), dir: None }, ]))),
		Rc::new(Type::new(1557, "fuchsia_io_DirectoryAdminOpenRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1273), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("pathInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("pathOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1558, "fuchsia_io_DirectoryAdminOpenRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(1008), dir: None }, ]))),
		Rc::new(Type::new(1559, "fuchsia_io_DirectoryAdminQueryFilesystemRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1260), dir: None }, ]))),
		Rc::new(Type::new(1560, "fuchsia_io_DirectoryAdminQueryFilesystemRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1561, "fuchsia_io_DirectoryAdminQueryFilesystemResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1691), dir: None }, ]))),
		Rc::new(Type::new(1562, "fuchsia_io_DirectoryAdminReadDirentsRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1210), dir: None }, Field{ name: String::into_boxed_str("max_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1563, "fuchsia_io_DirectoryAdminReadDirentsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1564, "fuchsia_io_DirectoryAdminReadDirentsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1565, "fuchsia_io_DirectoryAdminRenameRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1239), dir: None }, Field{ name: String::into_boxed_str("srcInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("dst_parent_token".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("dstInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("srcOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("dstOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1566, "fuchsia_io_DirectoryAdminRenameRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dst_parent_token".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1567, "fuchsia_io_DirectoryAdminRenameResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1568, "fuchsia_io_DirectoryAdminRewindRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1268), dir: None }, ]))),
		Rc::new(Type::new(1569, "fuchsia_io_DirectoryAdminRewindRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1570, "fuchsia_io_DirectoryAdminRewindResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1571, "fuchsia_io_DirectoryAdminSetAttrRequest", 72, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1272), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("attributesInLine".to_string()), ty: TypeRef::Id(1693), dir: None }, Field{ name: String::into_boxed_str("attributesOutOfLine".to_string()), ty: TypeRef::Id(1694), dir: None }, ]))),
		Rc::new(Type::new(1572, "fuchsia_io_DirectoryAdminSetAttrRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("attributes".to_string()), ty: TypeRef::Id(1692), dir: None }, ]))),
		Rc::new(Type::new(1573, "fuchsia_io_DirectoryAdminSetAttrResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1574, "fuchsia_io_DirectoryAdminSyncRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1256), dir: None }, ]))),
		Rc::new(Type::new(1575, "fuchsia_io_DirectoryAdminSyncRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1576, "fuchsia_io_DirectoryAdminSyncResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1577, "fuchsia_io_DirectoryAdminUnlinkRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1208), dir: None }, Field{ name: String::into_boxed_str("pathInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("pathOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1578, "fuchsia_io_DirectoryAdminUnlinkRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1579, "fuchsia_io_DirectoryAdminUnlinkResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1580, "fuchsia_io_DirectoryAdminUnmountNodeRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1183), dir: None }, ]))),
		Rc::new(Type::new(1581, "fuchsia_io_DirectoryAdminUnmountNodeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1582, "fuchsia_io_DirectoryAdminUnmountNodeResponseHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(1003), dir: None }, ]))),
		Rc::new(Type::new(1583, "fuchsia_io_DirectoryAdminUnmountRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1199), dir: None }, ]))),
		Rc::new(Type::new(1584, "fuchsia_io_DirectoryAdminUnmountRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1585, "fuchsia_io_DirectoryAdminUnmountResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1586, "fuchsia_io_DirectoryAdminWatchRequest", 28, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1250), dir: None }, Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("watcher".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1587, "fuchsia_io_DirectoryAdminWatchRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("watcher".to_string()), ty: TypeRef::Id(976), dir: None }, ]))),
		Rc::new(Type::new(1588, "fuchsia_io_DirectoryAdminWatchResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1589, "fuchsia_io_DirectoryCloneRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1185), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1590, "fuchsia_io_DirectoryCloneRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(1008), dir: None }, ]))),
		Rc::new(Type::new(1591, "fuchsia_io_DirectoryCloseRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1245), dir: None }, ]))),
		Rc::new(Type::new(1592, "fuchsia_io_DirectoryCloseRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1593, "fuchsia_io_DirectoryCloseResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1594, "fuchsia_io_DirectoryDescribeRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1189), dir: None }, ]))),
		Rc::new(Type::new(1595, "fuchsia_io_DirectoryDescribeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1596, "fuchsia_io_DirectoryDescribeResponseHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1706), dir: None }, ]))),
		Rc::new(Type::new(1597, "fuchsia_io_DirectoryGetAttrRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1234), dir: None }, ]))),
		Rc::new(Type::new(1598, "fuchsia_io_DirectoryGetAttrRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1599, "fuchsia_io_DirectoryGetAttrResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("attributes".to_string()), ty: TypeRef::Id(1692), dir: None }, ]))),
		Rc::new(Type::new(1600, "fuchsia_io_DirectoryGetTokenRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1214), dir: None }, ]))),
		Rc::new(Type::new(1601, "fuchsia_io_DirectoryGetTokenRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1602, "fuchsia_io_DirectoryGetTokenResponseHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("token".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1603, "fuchsia_io_DirectoryLinkRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1188), dir: None }, Field{ name: String::into_boxed_str("srcInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("dst_parent_token".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("dstInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("srcOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("dstOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1604, "fuchsia_io_DirectoryLinkRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dst_parent_token".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1605, "fuchsia_io_DirectoryLinkResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1606, "fuchsia_io_DirectoryNodeGetFlagsRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1226), dir: None }, ]))),
		Rc::new(Type::new(1607, "fuchsia_io_DirectoryNodeGetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1608, "fuchsia_io_DirectoryNodeGetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1609, "fuchsia_io_DirectoryNodeSetFlagsRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1235), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1610, "fuchsia_io_DirectoryNodeSetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1611, "fuchsia_io_DirectoryNodeSetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1612, "fuchsia_io_DirectoryObjectHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1613, "fuchsia_io_DirectoryOnOpenEventHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1706), dir: None }, ]))),
		Rc::new(Type::new(1614, "fuchsia_io_DirectoryOpenRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1273), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("pathInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("pathOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1615, "fuchsia_io_DirectoryOpenRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(1008), dir: None }, ]))),
		Rc::new(Type::new(1616, "fuchsia_io_DirectoryReadDirentsRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1210), dir: None }, Field{ name: String::into_boxed_str("max_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1617, "fuchsia_io_DirectoryReadDirentsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1618, "fuchsia_io_DirectoryReadDirentsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1619, "fuchsia_io_DirectoryRenameRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1239), dir: None }, Field{ name: String::into_boxed_str("srcInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("dst_parent_token".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("dstInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("srcOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, Field{ name: String::into_boxed_str("dstOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1620, "fuchsia_io_DirectoryRenameRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dst_parent_token".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1621, "fuchsia_io_DirectoryRenameResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1622, "fuchsia_io_DirectoryRewindRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1268), dir: None }, ]))),
		Rc::new(Type::new(1623, "fuchsia_io_DirectoryRewindRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1624, "fuchsia_io_DirectoryRewindResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1625, "fuchsia_io_DirectorySetAttrRequest", 72, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1272), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("attributesInLine".to_string()), ty: TypeRef::Id(1693), dir: None }, Field{ name: String::into_boxed_str("attributesOutOfLine".to_string()), ty: TypeRef::Id(1694), dir: None }, ]))),
		Rc::new(Type::new(1626, "fuchsia_io_DirectorySetAttrRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("attributes".to_string()), ty: TypeRef::Id(1692), dir: None }, ]))),
		Rc::new(Type::new(1627, "fuchsia_io_DirectorySetAttrResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1628, "fuchsia_io_DirectorySyncRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1256), dir: None }, ]))),
		Rc::new(Type::new(1629, "fuchsia_io_DirectorySyncRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1630, "fuchsia_io_DirectorySyncResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1631, "fuchsia_io_DirectoryUnlinkRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1208), dir: None }, Field{ name: String::into_boxed_str("pathInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("pathOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1632, "fuchsia_io_DirectoryUnlinkRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1633, "fuchsia_io_DirectoryUnlinkResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1634, "fuchsia_io_DirectoryWatchRequest", 28, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1250), dir: None }, Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("watcher".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1635, "fuchsia_io_DirectoryWatchRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("watcher".to_string()), ty: TypeRef::Id(976), dir: None }, ]))),
		Rc::new(Type::new(1636, "fuchsia_io_DirectoryWatchResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1637, "fuchsia_io_DirectoryWatcherOnEventRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1191), dir: None }, Field{ name: String::into_boxed_str("eventsInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("eventsOutOfLine".to_string()), ty: TypeRef::Id(43), dir: None }, ]))),
		Rc::new(Type::new(1638, "fuchsia_io_DirectoryWatcherOnEventRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1639, "fuchsia_io_FileCloneRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1185), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1640, "fuchsia_io_FileCloneRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(1008), dir: None }, ]))),
		Rc::new(Type::new(1641, "fuchsia_io_FileCloseRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1245), dir: None }, ]))),
		Rc::new(Type::new(1642, "fuchsia_io_FileCloseRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1643, "fuchsia_io_FileCloseResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1644, "fuchsia_io_FileDescribeRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1189), dir: None }, ]))),
		Rc::new(Type::new(1645, "fuchsia_io_FileDescribeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1646, "fuchsia_io_FileDescribeResponseHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1706), dir: None }, ]))),
		Rc::new(Type::new(1647, "fuchsia_io_FileGetAttrRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1234), dir: None }, ]))),
		Rc::new(Type::new(1648, "fuchsia_io_FileGetAttrRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1649, "fuchsia_io_FileGetAttrResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("attributes".to_string()), ty: TypeRef::Id(1692), dir: None }, ]))),
		Rc::new(Type::new(1650, "fuchsia_io_FileGetBufferRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1271), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1651, "fuchsia_io_FileGetBufferRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1652, "fuchsia_io_FileGetBufferResponseHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("buffer_".to_string()), ty: TypeRef::Id(1736), dir: None }, ]))),
		Rc::new(Type::new(1653, "fuchsia_io_FileGetFlagsRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1258), dir: None }, ]))),
		Rc::new(Type::new(1654, "fuchsia_io_FileGetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1655, "fuchsia_io_FileGetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1656, "fuchsia_io_FileNodeGetFlagsRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1226), dir: None }, ]))),
		Rc::new(Type::new(1657, "fuchsia_io_FileNodeGetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1658, "fuchsia_io_FileNodeGetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1659, "fuchsia_io_FileNodeSetFlagsRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1235), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1660, "fuchsia_io_FileNodeSetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1661, "fuchsia_io_FileNodeSetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1662, "fuchsia_io_FileObjectHandles", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("event".to_string()), ty: TypeRef::Id(1024), dir: None }, Field{ name: String::into_boxed_str("stream".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1663, "fuchsia_io_FileOnOpenEventHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1706), dir: None }, ]))),
		Rc::new(Type::new(1664, "fuchsia_io_FileReadAtRequest", 32, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1276), dir: None }, Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("offset".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1665, "fuchsia_io_FileReadAtRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1666, "fuchsia_io_FileReadAtResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1667, "fuchsia_io_FileReadRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1200), dir: None }, Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1668, "fuchsia_io_FileReadRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1669, "fuchsia_io_FileReadResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1670, "fuchsia_io_FileSeekRequest", 28, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1274), dir: None }, Field{ name: String::into_boxed_str("offset".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("start".to_string()), ty: TypeRef::Id(210), dir: None }, ]))),
		Rc::new(Type::new(1671, "fuchsia_io_FileSeekRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1672, "fuchsia_io_FileSeekResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1673, "fuchsia_io_FileSetAttrRequest", 72, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1272), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("attributesInLine".to_string()), ty: TypeRef::Id(1693), dir: None }, Field{ name: String::into_boxed_str("attributesOutOfLine".to_string()), ty: TypeRef::Id(1694), dir: None }, ]))),
		Rc::new(Type::new(1674, "fuchsia_io_FileSetAttrRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("attributes".to_string()), ty: TypeRef::Id(1692), dir: None }, ]))),
		Rc::new(Type::new(1675, "fuchsia_io_FileSetAttrResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1676, "fuchsia_io_FileSetFlagsRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1230), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1677, "fuchsia_io_FileSetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1678, "fuchsia_io_FileSetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1679, "fuchsia_io_FileSyncRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1256), dir: None }, ]))),
		Rc::new(Type::new(1680, "fuchsia_io_FileSyncRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1681, "fuchsia_io_FileSyncResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1682, "fuchsia_io_FileTruncateRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1231), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1683, "fuchsia_io_FileTruncateRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1684, "fuchsia_io_FileTruncateResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1685, "fuchsia_io_FileWriteAtRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1229), dir: None }, Field{ name: String::into_boxed_str("dataInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("offset".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("dataOutOfLine".to_string()), ty: TypeRef::Id(43), dir: None }, ]))),
		Rc::new(Type::new(1686, "fuchsia_io_FileWriteAtRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1687, "fuchsia_io_FileWriteAtResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1688, "fuchsia_io_FileWriteRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1216), dir: None }, Field{ name: String::into_boxed_str("dataInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("dataOutOfLine".to_string()), ty: TypeRef::Id(43), dir: None }, ]))),
		Rc::new(Type::new(1689, "fuchsia_io_FileWriteRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1690, "fuchsia_io_FileWriteResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1691, "fuchsia_io_FilesystemInfoHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1692, "fuchsia_io_NodeAttributesHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1693, "fuchsia_io_NodeAttributesInLine", 52, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("content_size".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("storage_size".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("link_count".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("creation_time".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("modification_time".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1694, "fuchsia_io_NodeAttributesOutOfLine", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1695, "fuchsia_io_NodeCloneRequest", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1185), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1696, "fuchsia_io_NodeCloneRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(1008), dir: None }, ]))),
		Rc::new(Type::new(1697, "fuchsia_io_NodeCloseRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1245), dir: None }, ]))),
		Rc::new(Type::new(1698, "fuchsia_io_NodeCloseRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1699, "fuchsia_io_NodeCloseResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1700, "fuchsia_io_NodeDescribeRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1189), dir: None }, ]))),
		Rc::new(Type::new(1701, "fuchsia_io_NodeDescribeRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1702, "fuchsia_io_NodeDescribeResponseHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1706), dir: None }, ]))),
		Rc::new(Type::new(1703, "fuchsia_io_NodeGetAttrRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1234), dir: None }, ]))),
		Rc::new(Type::new(1704, "fuchsia_io_NodeGetAttrRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1705, "fuchsia_io_NodeGetAttrResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("attributes".to_string()), ty: TypeRef::Id(1692), dir: None }, ]))),
		Rc::new(Type::new(1706, "fuchsia_io_NodeInfoHandles", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("service".to_string()), ty: TypeRef::Id(1721), dir: None }, Field{ name: String::into_boxed_str("file".to_string()), ty: TypeRef::Id(1662), dir: None }, Field{ name: String::into_boxed_str("directory".to_string()), ty: TypeRef::Id(1612), dir: None }, Field{ name: String::into_boxed_str("pipe".to_string()), ty: TypeRef::Id(1720), dir: None }, Field{ name: String::into_boxed_str("vmofile".to_string()), ty: TypeRef::Id(1724), dir: None }, Field{ name: String::into_boxed_str("device".to_string()), ty: TypeRef::Id(1523), dir: None }, Field{ name: String::into_boxed_str("tty".to_string()), ty: TypeRef::Id(1723), dir: None }, Field{ name: String::into_boxed_str("datagram_socket".to_string()), ty: TypeRef::Id(1522), dir: None }, Field{ name: String::into_boxed_str("stream_socket".to_string()), ty: TypeRef::Id(1722), dir: None }, ]))),
		Rc::new(Type::new(1707, "fuchsia_io_NodeNodeGetFlagsRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1226), dir: None }, ]))),
		Rc::new(Type::new(1708, "fuchsia_io_NodeNodeGetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1709, "fuchsia_io_NodeNodeGetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1710, "fuchsia_io_NodeNodeSetFlagsRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1235), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1711, "fuchsia_io_NodeNodeSetFlagsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1712, "fuchsia_io_NodeNodeSetFlagsResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1713, "fuchsia_io_NodeOnOpenEventHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1706), dir: None }, ]))),
		Rc::new(Type::new(1714, "fuchsia_io_NodeSetAttrRequest", 72, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1272), dir: None }, Field{ name: String::into_boxed_str("flags_".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("attributesInLine".to_string()), ty: TypeRef::Id(1693), dir: None }, Field{ name: String::into_boxed_str("attributesOutOfLine".to_string()), ty: TypeRef::Id(1694), dir: None }, ]))),
		Rc::new(Type::new(1715, "fuchsia_io_NodeSetAttrRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("attributes".to_string()), ty: TypeRef::Id(1692), dir: None }, ]))),
		Rc::new(Type::new(1716, "fuchsia_io_NodeSetAttrResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1717, "fuchsia_io_NodeSyncRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1256), dir: None }, ]))),
		Rc::new(Type::new(1718, "fuchsia_io_NodeSyncRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1719, "fuchsia_io_NodeSyncResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1720, "fuchsia_io_PipeHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("socket".to_string()), ty: TypeRef::Id(1030), dir: None }, ]))),
		Rc::new(Type::new(1721, "fuchsia_io_ServiceHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1722, "fuchsia_io_StreamSocketHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("socket".to_string()), ty: TypeRef::Id(1030), dir: None }, ]))),
		Rc::new(Type::new(1723, "fuchsia_io_TtyHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("event".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1724, "fuchsia_io_VmofileHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vmo".to_string()), ty: TypeRef::Id(1037), dir: None }, ]))),
		Rc::new(Type::new(1725, "fuchsia_ldsvc_LoaderCloneRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1222), dir: None }, Field{ name: String::into_boxed_str("loader".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1726, "fuchsia_ldsvc_LoaderCloneRequestHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("loader".to_string()), ty: TypeRef::Id(1010), dir: None }, ]))),
		Rc::new(Type::new(1727, "fuchsia_ldsvc_LoaderCloneResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1728, "fuchsia_ldsvc_LoaderConfigRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1187), dir: None }, Field{ name: String::into_boxed_str("configInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("configOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1729, "fuchsia_ldsvc_LoaderConfigRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1730, "fuchsia_ldsvc_LoaderConfigResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1731, "fuchsia_ldsvc_LoaderDoneRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1243), dir: None }, ]))),
		Rc::new(Type::new(1732, "fuchsia_ldsvc_LoaderDoneRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1733, "fuchsia_ldsvc_LoaderLoadObjectRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1186), dir: None }, Field{ name: String::into_boxed_str("object_nameInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("object_nameOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1734, "fuchsia_ldsvc_LoaderLoadObjectRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1735, "fuchsia_ldsvc_LoaderLoadObjectResponseHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("object".to_string()), ty: TypeRef::Id(1037), dir: None }, ]))),
		Rc::new(Type::new(1736, "fuchsia_mem_BufferHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vmo".to_string()), ty: TypeRef::Id(1037), dir: None }, ]))),
		Rc::new(Type::new(1737, "fuchsia_net_ConnectivityOnNetworkReachableEventHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1738, "fuchsia_net_IpAddressHandles", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ipv4".to_string()), ty: TypeRef::Id(1742), dir: None }, Field{ name: String::into_boxed_str("ipv6".to_string()), ty: TypeRef::Id(1745), dir: None }, ]))),
		Rc::new(Type::new(1739, "fuchsia_net_IpAddressInLine", 20, 4, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ipv4InLine".to_string()), ty: TypeRef::Id(1282), dir: None }, Field{ name: String::into_boxed_str("ipv6InLine".to_string()), ty: TypeRef::Id(1285), dir: None }, ]))),
		Rc::new(Type::new(1740, "fuchsia_net_IpAddressInfoHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ipv4_addrs".to_string()), ty: TypeRef::Id(14), dir: None }, Field{ name: String::into_boxed_str("ipv6_addrs".to_string()), ty: TypeRef::Id(15), dir: None }, ]))),
		Rc::new(Type::new(1741, "fuchsia_net_IpAddressOutOfLine", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ipv4OutOfLine".to_string()), ty: TypeRef::Id(1744), dir: None }, Field{ name: String::into_boxed_str("ipv6OutOfLine".to_string()), ty: TypeRef::Id(1747), dir: None }, ]))),
		Rc::new(Type::new(1742, "fuchsia_net_Ipv4AddressHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1743, "fuchsia_net_Ipv4AddressInLine", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addrInLine".to_string()), ty: TypeRef::Id(46), dir: None }, ]))),
		Rc::new(Type::new(1744, "fuchsia_net_Ipv4AddressOutOfLine", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1745, "fuchsia_net_Ipv6AddressHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1746, "fuchsia_net_Ipv6AddressInLine", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addrInLine".to_string()), ty: TypeRef::Id(44), dir: None }, ]))),
		Rc::new(Type::new(1747, "fuchsia_net_Ipv6AddressOutOfLine", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1748, "fuchsia_net_NameLookupLookupHostnameRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1184), dir: None }, Field{ name: String::into_boxed_str("addrInLine".to_string()), ty: TypeRef::Id(1739), dir: None }, Field{ name: String::into_boxed_str("addrOutOfLine".to_string()), ty: TypeRef::Id(1741), dir: None }, ]))),
		Rc::new(Type::new(1749, "fuchsia_net_NameLookupLookupHostnameRequestHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(1738), dir: None }, ]))),
		Rc::new(Type::new(1750, "fuchsia_net_NameLookupLookupHostnameResponseHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("result".to_string()), ty: TypeRef::Id(1755), dir: None }, ]))),
		Rc::new(Type::new(1751, "fuchsia_net_NameLookupLookupIpRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1213), dir: None }, Field{ name: String::into_boxed_str("hostnameInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(229), dir: None }, Field{ name: String::into_boxed_str("hostnameOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1752, "fuchsia_net_NameLookupLookupIpRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1753, "fuchsia_net_NameLookupLookupIpResponseHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("result".to_string()), ty: TypeRef::Id(1757), dir: None }, ]))),
		Rc::new(Type::new(1754, "fuchsia_net_NameLookup_LookupHostname_ResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1755, "fuchsia_net_NameLookup_LookupHostname_ResultHandles", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("response".to_string()), ty: TypeRef::Id(1754), dir: None }, ]))),
		Rc::new(Type::new(1756, "fuchsia_net_NameLookup_LookupIp_ResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(1740), dir: None }, ]))),
		Rc::new(Type::new(1757, "fuchsia_net_NameLookup_LookupIp_ResultHandles", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("response".to_string()), ty: TypeRef::Id(1756), dir: None }, ]))),
		Rc::new(Type::new(1758, "fuchsia_process_HandleInfoHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("handle".to_string()), ty: TypeRef::Id(1024), dir: None }, ]))),
		Rc::new(Type::new(1759, "fuchsia_process_HandleInfoInLine", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("handle".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1760, "fuchsia_process_HandleInfoOutOfLine", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1761, "fuchsia_process_LaunchInfoHandles", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("executable".to_string()), ty: TypeRef::Id(1037), dir: None }, Field{ name: String::into_boxed_str("job".to_string()), ty: TypeRef::Id(1026), dir: None }, ]))),
		Rc::new(Type::new(1762, "fuchsia_process_LaunchInfoInLine", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("executable".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("job".to_string()), ty: TypeRef::Id(208), dir: None }, Field{ name: String::into_boxed_str("nameInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, ]))),
		Rc::new(Type::new(1763, "fuchsia_process_LaunchInfoOutOfLine", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("nameOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1764, "fuchsia_process_LauncherAddArgsRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1181), dir: None }, Field{ name: String::into_boxed_str("argsInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("argsOutOfLine".to_string()), ty: TypeRef::Id(1796), dir: None }, ]))),
		Rc::new(Type::new(1765, "fuchsia_process_LauncherAddArgsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1766, "fuchsia_process_LauncherAddEnvironsRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1237), dir: None }, Field{ name: String::into_boxed_str("environInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("environOutOfLine".to_string()), ty: TypeRef::Id(1796), dir: None }, ]))),
		Rc::new(Type::new(1767, "fuchsia_process_LauncherAddEnvironsRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1768, "fuchsia_process_LauncherAddHandlesRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1254), dir: None }, Field{ name: String::into_boxed_str("handlesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("handlesOutOfLine".to_string()), ty: TypeRef::Id(1802), dir: None }, ]))),
		Rc::new(Type::new(1769, "fuchsia_process_LauncherAddHandlesRequestHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("handles".to_string()), ty: TypeRef::Id(1), dir: None }, ]))),
		Rc::new(Type::new(1770, "fuchsia_process_LauncherAddNamesRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1246), dir: None }, Field{ name: String::into_boxed_str("namesInLine".to_string()), ty: TypeRef::Id(1293), dir: None }, Field{ name: String::into_boxed_str("namesOutOfLine".to_string()), ty: TypeRef::Id(1803), dir: None }, ]))),
		Rc::new(Type::new(1771, "fuchsia_process_LauncherAddNamesRequestHandles", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("names".to_string()), ty: TypeRef::Id(4), dir: None }, ]))),
		Rc::new(Type::new(1772, "fuchsia_process_LauncherCreateWithoutStartingRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1242), dir: None }, Field{ name: String::into_boxed_str("infoInLine".to_string()), ty: TypeRef::Id(1762), dir: None }, Field{ name: String::into_boxed_str("infoOutOfLine".to_string()), ty: TypeRef::Id(1763), dir: None }, ]))),
		Rc::new(Type::new(1773, "fuchsia_process_LauncherCreateWithoutStartingRequestHandles", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1761), dir: None }, ]))),
		Rc::new(Type::new(1774, "fuchsia_process_LauncherCreateWithoutStartingResponseHandles", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(1781), dir: None }, ]))),
		Rc::new(Type::new(1775, "fuchsia_process_LauncherLaunchRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1201), dir: None }, Field{ name: String::into_boxed_str("infoInLine".to_string()), ty: TypeRef::Id(1762), dir: None }, Field{ name: String::into_boxed_str("infoOutOfLine".to_string()), ty: TypeRef::Id(1763), dir: None }, ]))),
		Rc::new(Type::new(1776, "fuchsia_process_LauncherLaunchRequestHandles", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("info".to_string()), ty: TypeRef::Id(1761), dir: None }, ]))),
		Rc::new(Type::new(1777, "fuchsia_process_LauncherLaunchResponseHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("process".to_string()), ty: TypeRef::Id(1028), dir: None }, ]))),
		Rc::new(Type::new(1778, "fuchsia_process_NameInfoHandles", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("directory".to_string()), ty: TypeRef::Id(1003), dir: None }, ]))),
		Rc::new(Type::new(1779, "fuchsia_process_NameInfoInLine", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pathInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("directory".to_string()), ty: TypeRef::Id(208), dir: None }, ]))),
		Rc::new(Type::new(1780, "fuchsia_process_NameInfoOutOfLine", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pathOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1781, "fuchsia_process_ProcessStartDataHandles", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("process".to_string()), ty: TypeRef::Id(1028), dir: None }, Field{ name: String::into_boxed_str("root_vmar".to_string()), ty: TypeRef::Id(1036), dir: None }, Field{ name: String::into_boxed_str("thread".to_string()), ty: TypeRef::Id(1032), dir: None }, Field{ name: String::into_boxed_str("bootstrap".to_string()), ty: TypeRef::Id(976), dir: None }, ]))),
		Rc::new(Type::new(1782, "fuchsia_process_ResolverResolveRequest", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1192), dir: None }, Field{ name: String::into_boxed_str("nameInLine".to_string()), ty: TypeRef::Id(1279), dir: None }, Field{ name: String::into_boxed_str("nameOutOfLine".to_string()), ty: TypeRef::Id(1043), dir: None }, ]))),
		Rc::new(Type::new(1783, "fuchsia_process_ResolverResolveRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1784, "fuchsia_process_ResolverResolveResponseHandles", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("executable".to_string()), ty: TypeRef::Id(1037), dir: None }, Field{ name: String::into_boxed_str("ldsvc".to_string()), ty: TypeRef::Id(1009), dir: None }, ]))),
		Rc::new(Type::new(1785, "fuchsia_scpi_DvfsOppHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1786, "fuchsia_scpi_SystemControllerGetDvfsInfoRequest", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1236), dir: None }, Field{ name: String::into_boxed_str("power_domain".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1787, "fuchsia_scpi_SystemControllerGetDvfsInfoRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1788, "fuchsia_scpi_SystemControllerGetDvfsInfoResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("opps".to_string()), ty: TypeRef::Id(16), dir: None }, ]))),
		Rc::new(Type::new(1789, "fuchsia_scpi_SystemControllerGetSystemStatusRequest", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("hdr".to_string()), ty: TypeRef::Id(1265), dir: None }, ]))),
		Rc::new(Type::new(1790, "fuchsia_scpi_SystemControllerGetSystemStatusRequestHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1791, "fuchsia_scpi_SystemControllerGetSystemStatusResponseHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sys_status".to_string()), ty: TypeRef::Id(1792), dir: None }, ]))),
		Rc::new(Type::new(1792, "fuchsia_scpi_SystemStatusHandles", 0, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("void".to_string()), ty: TypeRef::Id(64), dir: None }, ]))),
		Rc::new(Type::new(1793, "iovec_in", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(597), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(257), dir: None }, ]))),
		Rc::new(Type::new(1794, "iovec_out", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(903), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(257), dir: None }, ]))),
		Rc::new(Type::new(1795, "itimerval", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("interv".to_string()), ty: TypeRef::Id(1808), dir: None }, Field{ name: String::into_boxed_str("value".to_string()), ty: TypeRef::Id(1808), dir: None }, ]))),
		Rc::new(Type::new(1796, "parallel_array[fidl_vector, array[int8]]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a".to_string()), ty: TypeRef::Id(30), dir: None }, Field{ name: String::into_boxed_str("b".to_string()), ty: TypeRef::Id(10), dir: None }, ]))),
		Rc::new(Type::new(1797, "parallel_array[fuchsia_cobalt_CobaltEventInLine, fuchsia_cobalt_CobaltEventOutOfLine]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a".to_string()), ty: TypeRef::Id(5), dir: None }, Field{ name: String::into_boxed_str("b".to_string()), ty: TypeRef::Id(6), dir: None }, ]))),
		Rc::new(Type::new(1798, "parallel_array[fuchsia_cobalt_CustomEventValueInLine, fuchsia_cobalt_CustomEventValueOutOfLine]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a".to_string()), ty: TypeRef::Id(7), dir: None }, Field{ name: String::into_boxed_str("b".to_string()), ty: TypeRef::Id(8), dir: None }, ]))),
		Rc::new(Type::new(1799, "parallel_array[fuchsia_cobalt_ExperimentInLine, fuchsia_cobalt_ExperimentOutOfLine]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a".to_string()), ty: TypeRef::Id(13), dir: None }, Field{ name: String::into_boxed_str("b".to_string()), ty: TypeRef::Id(23), dir: None }, ]))),
		Rc::new(Type::new(1800, "parallel_array[fuchsia_cobalt_HistogramBucketInLine, fuchsia_cobalt_HistogramBucketOutOfLine]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a".to_string()), ty: TypeRef::Id(9), dir: None }, Field{ name: String::into_boxed_str("b".to_string()), ty: TypeRef::Id(20), dir: None }, ]))),
		Rc::new(Type::new(1801, "parallel_array[fuchsia_cobalt_MetricEventInLine, fuchsia_cobalt_MetricEventOutOfLine]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a".to_string()), ty: TypeRef::Id(11), dir: None }, Field{ name: String::into_boxed_str("b".to_string()), ty: TypeRef::Id(12), dir: None }, ]))),
		Rc::new(Type::new(1802, "parallel_array[fuchsia_process_HandleInfoInLine, fuchsia_process_HandleInfoOutOfLine]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a".to_string()), ty: TypeRef::Id(0), dir: None }, Field{ name: String::into_boxed_str("b".to_string()), ty: TypeRef::Id(17), dir: None }, ]))),
		Rc::new(Type::new(1803, "parallel_array[fuchsia_process_NameInfoInLine, fuchsia_process_NameInfoOutOfLine]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a".to_string()), ty: TypeRef::Id(2), dir: None }, Field{ name: String::into_boxed_str("b".to_string()), ty: TypeRef::Id(3), dir: None }, ]))),
		Rc::new(Type::new(1804, "pipefd", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("rfd".to_string()), ty: TypeRef::Id(972), dir: None }, Field{ name: String::into_boxed_str("wfd".to_string()), ty: TypeRef::Id(972), dir: None }, ]))),
		Rc::new(Type::new(1805, "pollfd", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fd".to_string()), ty: TypeRef::Id(972), dir: None }, Field{ name: String::into_boxed_str("events".to_string()), ty: TypeRef::Id(233), dir: None }, Field{ name: String::into_boxed_str("revents".to_string()), ty: TypeRef::Id(67), dir: None }, ]))),
		Rc::new(Type::new(1806, "sigset", 8, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1807, "timespec", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sec".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("nsec".to_string()), ty: TypeRef::Id(245), dir: None }, ]))),
		Rc::new(Type::new(1808, "timeval", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sec".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("usec".to_string()), ty: TypeRef::Id(245), dir: None }, ]))),
		Rc::new(Type::new(1809, "utimbuf", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("actime".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("modtime".to_string()), ty: TypeRef::Id(245), dir: None }, ]))),
		Rc::new(Type::new(1810, "x86_64_exc_data", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vector".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("err_code".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("cr2".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1811, "zx_channel_call_args", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("wr_bytes".to_string()), ty: TypeRef::Id(597), dir: None }, Field{ name: String::into_boxed_str("wr_handles".to_string()), ty: TypeRef::Id(360), dir: None }, Field{ name: String::into_boxed_str("rd_bytes".to_string()), ty: TypeRef::Id(903), dir: None }, Field{ name: String::into_boxed_str("rd_handles".to_string()), ty: TypeRef::Id(769), dir: None }, Field{ name: String::into_boxed_str("wr_num_bytes".to_string()), ty: TypeRef::Id(255), dir: None }, Field{ name: String::into_boxed_str("wr_num_handles".to_string()), ty: TypeRef::Id(256), dir: None }, Field{ name: String::into_boxed_str("rd_num_bytes".to_string()), ty: TypeRef::Id(253), dir: None }, Field{ name: String::into_boxed_str("rd_num_handles".to_string()), ty: TypeRef::Id(254), dir: None }, ]))),
		Rc::new(Type::new(1812, "zx_exception_context", 24, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("x86_64".to_string()), ty: TypeRef::Id(1810), dir: None }, Field{ name: String::into_boxed_str("arm_64".to_string()), ty: TypeRef::Id(1041), dir: None }, ]))),
		Rc::new(Type::new(1813, "zx_exception_header", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("size".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1814, "zx_exception_report", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("header".to_string()), ty: TypeRef::Id(1813), dir: None }, Field{ name: String::into_boxed_str("context".to_string()), ty: TypeRef::Id(1812), dir: None }, ]))),
		Rc::new(Type::new(1815, "zx_info_bti", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("minimum_contiguity".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("aspace_size".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1816, "zx_info_cpu_stats", 120, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("cpu_number".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("idle_time".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("reschedules".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("context_switches".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("irq_preempts".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("preempts".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("yields".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("ints".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("timer_ints".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("timers".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("page_faults".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("exceptions".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("syscalls".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("reschedule_ipis".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("generic_ipis".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1817, "zx_info_handle_basic", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("koid".to_string()), ty: TypeRef::Id(974), dir: None }, Field{ name: String::into_boxed_str("rights".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("related_koid".to_string()), ty: TypeRef::Id(974), dir: None }, Field{ name: String::into_boxed_str("props".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, ]))),
		Rc::new(Type::new(1818, "zx_info_handle_count", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("count".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1819, "zx_info_job", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("return_code".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("exited".to_string()), ty: TypeRef::Id(243), dir: None }, Field{ name: String::into_boxed_str("kill_on_oom".to_string()), ty: TypeRef::Id(243), dir: None }, Field{ name: String::into_boxed_str("debugger_attached".to_string()), ty: TypeRef::Id(243), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(202), dir: None }, ]))),
		Rc::new(Type::new(1820, "zx_info_kmem_stats", 72, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("total_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("free_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("wired_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("total_heap_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("free_heap_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("vmo_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("mmu_overhead_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("ipc_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("other_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1821, "zx_info_maps", 88, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("name".to_string()), ty: TypeRef::Id(45), dir: None }, Field{ name: String::into_boxed_str("base".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("size".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("depth".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("mapping".to_string()), ty: TypeRef::Id(1822), dir: None }, ]))),
		Rc::new(Type::new(1822, "zx_info_maps_mapping", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mmu_flags".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("vmo_koid".to_string()), ty: TypeRef::Id(974), dir: None }, Field{ name: String::into_boxed_str("committed_pages".to_string()), ty: TypeRef::Id(245), dir: None }, ]))),
		Rc::new(Type::new(1823, "zx_info_process", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("return_code".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("started".to_string()), ty: TypeRef::Id(243), dir: None }, Field{ name: String::into_boxed_str("exited".to_string()), ty: TypeRef::Id(243), dir: None }, Field{ name: String::into_boxed_str("debugger_attached".to_string()), ty: TypeRef::Id(243), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(202), dir: None }, ]))),
		Rc::new(Type::new(1824, "zx_info_process_handle_stats", 256, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("handle_count".to_string()), ty: TypeRef::Id(40), dir: None }, ]))),
		Rc::new(Type::new(1825, "zx_info_resource", 56, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("kind".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("base".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("size".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("name".to_string()), ty: TypeRef::Id(45), dir: None }, ]))),
		Rc::new(Type::new(1826, "zx_info_socket", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("rx_buf_max".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("rx_buf_size".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("rx_buf_available".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("tx_buf_max".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("tx_buf_size".to_string()), ty: TypeRef::Id(245), dir: None }, ]))),
		Rc::new(Type::new(1827, "zx_info_task_stats", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mem_mapped_bytes".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("mem_private_bytes".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("mem_shared_bytes".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("mem_scaled_shared_bytes".to_string()), ty: TypeRef::Id(245), dir: None }, ]))),
		Rc::new(Type::new(1828, "zx_info_thread", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("state".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("wait_exception_channel_type".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
		Rc::new(Type::new(1829, "zx_info_thread_stats", 8, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("total_runtime".to_string()), ty: TypeRef::Id(242), dir: None }, ]))),
		Rc::new(Type::new(1830, "zx_info_vmar", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("base".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(245), dir: None }, ]))),
		Rc::new(Type::new(1831, "zx_info_vmo", 112, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("koid".to_string()), ty: TypeRef::Id(974), dir: None }, Field{ name: String::into_boxed_str("name".to_string()), ty: TypeRef::Id(45), dir: None }, Field{ name: String::into_boxed_str("size_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("parent_koid".to_string()), ty: TypeRef::Id(974), dir: None }, Field{ name: String::into_boxed_str("num_children".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("num_mappings".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("share_count".to_string()), ty: TypeRef::Id(245), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("committed_bytes".to_string()), ty: TypeRef::Id(242), dir: None }, Field{ name: String::into_boxed_str("handle_rights".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("create_options".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("cache_policy".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(201), dir: None }, ]))),
		Rc::new(Type::new(1832, "zx_policy_basic", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("condition".to_string()), ty: TypeRef::Id(220), dir: None }, Field{ name: String::into_boxed_str("policy".to_string()), ty: TypeRef::Id(221), dir: None }, ]))),
		Rc::new(Type::new(1833, "zx_port_packet", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("key".to_string()), ty: TypeRef::Id(272), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("status".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("u64".to_string()), ty: TypeRef::Id(42), dir: None }, ]))),
		Rc::new(Type::new(1834, "zx_wait_item", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("handle".to_string()), ty: TypeRef::Id(1024), dir: None }, Field{ name: String::into_boxed_str("waitfor".to_string()), ty: TypeRef::Id(241), dir: None }, Field{ name: String::into_boxed_str("pending".to_string()), ty: TypeRef::Id(241), dir: None }, ]))),
	]
}
