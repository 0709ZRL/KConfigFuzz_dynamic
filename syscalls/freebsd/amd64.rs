//! System call information of freebsd/amd64
//! AUTOGENERATED FILE. DO NOT EDIT.
use std::rc::Rc;
use hlang::ast::*;


const OS: &str = "freebsd";
const ARCH: &str = "amd64";
const PTR_SIZE: usize = 8;
const PARGE_SIZE: usize = 4096;
const NUM_PARGS: usize = 4096;
const DATA_OFFSET: usize = 536870912;
const LITTLE_ENDIAN: bool = true;

fn syscalls_0(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(0, 515, "__cap_rights_get", "__cap_rights_get", 0, vec![Param::new("version", tys[413].clone(), None), Param::new("fd", tys[685].clone(), None), Param::new("rightsp", tys[646].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1, 326, "__getcwd", "__getcwd", 0, vec![Param::new("buf", tys[666].clone(), None), Param::new("size", tys[462].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2, 574, "__realpathat", "__realpathat", 0, vec![Param::new("dirfd", tys[685].clone(), None), Param::new("path", tys[587].clone(), None), Param::new("buf", tys[603].clone(), None), Param::new("size", tys[462].clone(), None), Param::new("flags", tys[285].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(3, 510, "__semctl$GETALL", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[278].clone(), None), Param::new("cmd", tys[274].clone(), None), Param::new("arg", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(4, 510, "__semctl$GETNCNT", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[346].clone(), None), Param::new("cmd", tys[271].clone(), None), Param::new("arg", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(5, 510, "__semctl$GETPID", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[346].clone(), None), Param::new("cmd", tys[272].clone(), None), Param::new("arg", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(6, 510, "__semctl$GETVAL", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[346].clone(), None), Param::new("cmd", tys[273].clone(), None), Param::new("arg", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(7, 510, "__semctl$GETZCNT", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[346].clone(), None), Param::new("cmd", tys[275].clone(), None), Param::new("arg", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(8, 510, "__semctl$IPC_INFO", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[346].clone(), None), Param::new("cmd", tys[271].clone(), None), Param::new("buf", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(9, 510, "__semctl$IPC_RMID", "__semctl", 1, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[278].clone(), None), Param::new("cmd", tys[278].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(10, 510, "__semctl$IPC_SET", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[278].clone(), None), Param::new("cmd", tys[209].clone(), None), Param::new("arg", tys[527].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(11, 510, "__semctl$IPC_STAT", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[278].clone(), None), Param::new("cmd", tys[212].clone(), None), Param::new("arg", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(12, 510, "__semctl$SEM_INFO", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[346].clone(), None), Param::new("cmd", tys[204].clone(), None), Param::new("arg", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(13, 510, "__semctl$SEM_STAT", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[346].clone(), None), Param::new("cmd", tys[203].clone(), None), Param::new("arg", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(14, 510, "__semctl$SETALL", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[278].clone(), None), Param::new("cmd", tys[277].clone(), None), Param::new("arg", tys[537].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(15, 510, "__semctl$SETVAL", "__semctl", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("semnum", tys[346].clone(), None), Param::new("cmd", tys[276].clone(), None), Param::new("arg", tys[497].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: true, brk_ret: false}));
	calls.push(Syscall::new(16, 30, "accept", "accept", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("peer", tys[601].clone(), None), Param::new("peerlen", tys[675].clone(), None), ], Some(tys[700].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(17, 30, "accept$inet", "accept", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("peer", tys[599].clone(), None), Param::new("peerlen", tys[675].clone(), None), ], Some(tys[701].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(18, 30, "accept$inet6", "accept", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("peer", tys[600].clone(), None), Param::new("peerlen", tys[675].clone(), None), ], Some(tys[702].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(19, 30, "accept$unix", "accept", 0, vec![Param::new("fd", tys[711].clone(), None), Param::new("peer", tys[598].clone(), None), Param::new("peerlen", tys[675].clone(), None), ], Some(tys[711].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(20, 541, "accept4", "accept4", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("peer", tys[601].clone(), None), Param::new("peerlen", tys[675].clone(), None), Param::new("flags", tys[368].clone(), None), ], Some(tys[700].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(21, 541, "accept4$inet", "accept4", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("peer", tys[599].clone(), None), Param::new("peerlen", tys[675].clone(), None), Param::new("flags", tys[368].clone(), None), ], Some(tys[701].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(22, 541, "accept4$inet6", "accept4", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("peer", tys[600].clone(), None), Param::new("peerlen", tys[675].clone(), None), Param::new("flags", tys[368].clone(), None), ], Some(tys[702].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(23, 541, "accept4$unix", "accept4", 0, vec![Param::new("fd", tys[711].clone(), None), Param::new("peer", tys[598].clone(), None), Param::new("peerlen", tys[675].clone(), None), Param::new("flags", tys[368].clone(), None), ], Some(tys[711].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(24, 104, "bind", "bind", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("addr", tys[589].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(25, 104, "bind$inet", "bind", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("addr", tys[577].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(26, 104, "bind$inet6", "bind", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("addr", tys[588].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(27, 104, "bind$unix", "bind", 0, vec![Param::new("fd", tys[711].clone(), None), Param::new("addr", tys[550].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(28, 538, "bindat", "bindat", 0, vec![Param::new("dirfd", tys[685].clone(), None), Param::new("fd", tys[700].clone(), None), Param::new("addr", tys[589].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(29, 538, "bindat$unix", "bindat", 0, vec![Param::new("dirfd", tys[685].clone(), None), Param::new("fd", tys[711].clone(), None), Param::new("addr", tys[550].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(30, 516, "cap_enter", "cap_enter", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(31, 537, "cap_fcntls_get", "cap_fcntls_get", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("rightsp", tys[604].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(32, 536, "cap_fcntls_limit", "cap_fcntls_limit", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("rights", tys[413].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(33, 517, "cap_getmode", "cap_getmode", 0, vec![Param::new("mode", tys[602].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(34, 535, "cap_ioctls_get", "cap_ioctls_get", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("cmds", tys[605].clone(), None), Param::new("maxcmds", tys[464].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(35, 534, "cap_ioctls_limit", "cap_ioctls_limit", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("cmds", tys[499].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(36, 533, "cap_rights_limit", "cap_rights_limit", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("rights", tys[526].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(37, 12, "chdir", "chdir", 0, vec![Param::new("dir", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(38, 34, "chflags", "chflags", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("flags", tys[371].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(39, 540, "chflagsat", "chflagsat", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("file", tys[587].clone(), None), Param::new("flags", tys[371].clone(), None), Param::new("atflag", tys[369].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(40, 15, "chmod", "chmod", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("mode", tys[388].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(41, 16, "chown", "chown", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("uid", tys[714].clone(), None), Param::new("gid", tys[689].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(42, 61, "chroot", "chroot", 0, vec![Param::new("dir", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(43, 234, "clock_getres", "clock_getres", 0, vec![Param::new("id", tys[292].clone(), None), Param::new("tp", tys[606].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(44, 232, "clock_gettime", "clock_gettime", 0, vec![Param::new("id", tys[292].clone(), None), Param::new("tp", tys[606].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(45, 244, "clock_nanosleep", "clock_nanosleep", 0, vec![Param::new("id", tys[292].clone(), None), Param::new("flags", tys[362].clone(), None), Param::new("rqtp", tys[500].clone(), None), Param::new("rmtp", tys[593].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(46, 233, "clock_settime", "clock_settime", 0, vec![Param::new("id", tys[292].clone(), None), Param::new("tp", tys[500].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(47, 6, "close", "close", 0, vec![Param::new("fd", tys[685].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(48, 575, "close_range", "close_range", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("max_fd", tys[685].clone(), None), Param::new("flags", tys[70].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(49, 98, "connect", "connect", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("addr", tys[589].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(50, 98, "connect$inet", "connect", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("addr", tys[577].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(51, 98, "connect$inet6", "connect", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("addr", tys[588].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(52, 98, "connect$unix", "connect", 0, vec![Param::new("fd", tys[711].clone(), None), Param::new("addr", tys[550].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(53, 539, "connectat", "connectat", 0, vec![Param::new("dirfd", tys[685].clone(), None), Param::new("fd", tys[700].clone(), None), Param::new("addr", tys[589].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(54, 539, "connectat$unix", "connectat", 0, vec![Param::new("dirfd", tys[685].clone(), None), Param::new("fd", tys[711].clone(), None), Param::new("addr", tys[550].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(55, 569, "copy_file_range", "copy_file_range", 0, vec![Param::new("infd", tys[685].clone(), None), Param::new("inoffp", tys[621].clone(), None), Param::new("outfd", tys[685].clone(), None), Param::new("outoffp", tys[621].clone(), None), Param::new("len", tys[415].clone(), None), Param::new("flags", tys[279].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(56, 484, "cpuset", "cpuset", 0, vec![Param::new("setid", tys[607].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(57, 487, "cpuset_getaffinity", "cpuset_getaffinity", 0, vec![Param::new("level", tys[295].clone(), None), Param::new("which", tys[296].clone(), None), Param::new("id", tys[415].clone(), None), Param::new("size", tys[429].clone(), None), Param::new("mask", tys[608].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(58, 561, "cpuset_getdomain", "cpuset_getdomain", 0, vec![Param::new("level", tys[295].clone(), None), Param::new("which", tys[296].clone(), None), Param::new("id", tys[415].clone(), None), Param::new("size", tys[429].clone(), None), Param::new("mask", tys[609].clone(), None), Param::new("policy", tys[610].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(59, 486, "cpuset_getid", "cpuset_getid", 0, vec![Param::new("level", tys[295].clone(), None), Param::new("which", tys[296].clone(), None), Param::new("id", tys[415].clone(), None), Param::new("setid", tys[607].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(60, 488, "cpuset_setaffinity", "cpuset_setaffinity", 0, vec![Param::new("level", tys[295].clone(), None), Param::new("which", tys[296].clone(), None), Param::new("id", tys[415].clone(), None), Param::new("size", tys[429].clone(), None), Param::new("mask", tys[501].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(61, 562, "cpuset_setdomain", "cpuset_setdomain", 0, vec![Param::new("level", tys[295].clone(), None), Param::new("which", tys[296].clone(), None), Param::new("id", tys[415].clone(), None), Param::new("size", tys[429].clone(), None), Param::new("mask", tys[502].clone(), None), Param::new("policy", tys[298].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(62, 485, "cpuset_setid", "cpuset_setid", 0, vec![Param::new("which", tys[296].clone(), None), Param::new("id", tys[415].clone(), None), Param::new("setid", tys[684].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(63, 41, "dup", "dup", 0, vec![Param::new("oldfd", tys[685].clone(), None), ], Some(tys[685].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_1(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(64, 90, "dup2", "dup2", 0, vec![Param::new("oldfd", tys[685].clone(), None), Param::new("newfd", tys[685].clone(), None), ], Some(tys[685].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(65, 59, "execve", "execve", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("argv", tys[503].clone(), None), Param::new("envp", tys[503].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(66, 1, "exit", "exit", 0, vec![Param::new("code", tys[426].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(67, 373, "extattr_delete_fd", "extattr_delete_fd", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("attrname", tys[498].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(68, 358, "extattr_delete_file", "extattr_delete_file", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("attrname", tys[498].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(69, 414, "extattr_delete_link", "extattr_delete_link", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("attrname", tys[498].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(70, 372, "extattr_get_fd", "extattr_get_fd", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("attrname", tys[498].clone(), None), Param::new("data", tys[666].clone(), None), Param::new("nbytes", tys[465].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(71, 357, "extattr_get_file", "extattr_get_file", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("attrname", tys[498].clone(), None), Param::new("data", tys[666].clone(), None), Param::new("nbytes", tys[465].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(72, 413, "extattr_get_link", "extattr_get_link", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("attrname", tys[498].clone(), None), Param::new("data", tys[666].clone(), None), Param::new("nbytes", tys[465].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(73, 437, "extattr_list_fd", "extattr_list_fd", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("data", tys[666].clone(), None), Param::new("nbytes", tys[465].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(74, 438, "extattr_list_file", "extattr_list_file", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("data", tys[666].clone(), None), Param::new("nbytes", tys[465].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(75, 439, "extattr_list_link", "extattr_list_link", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("data", tys[666].clone(), None), Param::new("nbytes", tys[465].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(76, 371, "extattr_set_fd", "extattr_set_fd", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("attrname", tys[498].clone(), None), Param::new("data", tys[553].clone(), None), Param::new("nbytes", tys[465].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(77, 356, "extattr_set_file", "extattr_set_file", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("attrname", tys[498].clone(), None), Param::new("data", tys[553].clone(), None), Param::new("nbytes", tys[465].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(78, 412, "extattr_set_link", "extattr_set_link", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("attrnamespace", tys[370].clone(), None), Param::new("attrname", tys[498].clone(), None), Param::new("data", tys[553].clone(), None), Param::new("nbytes", tys[465].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(79, 489, "faccessat", "faccessat", 0, vec![Param::new("dirfd", tys[687].clone(), None), Param::new("pathname", tys[587].clone(), None), Param::new("mode", tys[388].clone(), None), Param::new("flags", tys[373].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(80, 13, "fchdir", "fchdir", 0, vec![Param::new("fd", tys[685].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(81, 35, "fchflags", "fchflags", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("flags", tys[371].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(82, 124, "fchmod", "fchmod", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("mode", tys[388].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(83, 490, "fchmodat", "fchmodat", 0, vec![Param::new("dirfd", tys[687].clone(), None), Param::new("file", tys[587].clone(), None), Param::new("mode", tys[388].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(84, 123, "fchown", "fchown", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("uid", tys[714].clone(), None), Param::new("gid", tys[689].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(85, 491, "fchownat", "fchownat", 0, vec![Param::new("dirfd", tys[687].clone(), None), Param::new("file", tys[587].clone(), None), Param::new("uid", tys[714].clone(), None), Param::new("gid", tys[689].clone(), None), Param::new("flags", tys[369].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(86, 92, "fcntl$dupfd", "fcntl", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("cmd", tys[301].clone(), None), Param::new("arg", tys[685].clone(), None), ], Some(tys[685].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(87, 92, "fcntl$getflags", "fcntl", 1, vec![Param::new("fd", tys[685].clone(), None), Param::new("cmd", tys[302].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(88, 92, "fcntl$getown", "fcntl", 1, vec![Param::new("fd", tys[685].clone(), None), Param::new("cmd", tys[273].clone(), None), ], Some(tys[696].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(89, 92, "fcntl$lock", "fcntl", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("cmd", tys[303].clone(), None), Param::new("lock", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(90, 92, "fcntl$setflags", "fcntl", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("cmd", tys[212].clone(), None), Param::new("flags", tys[374].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(91, 92, "fcntl$setown", "fcntl", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("cmd", tys[274].clone(), None), Param::new("pid", tys[696].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(92, 92, "fcntl$setstatus", "fcntl", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("cmd", tys[272].clone(), None), Param::new("flags", tys[375].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(93, 550, "fdatasync", "fdatasync", 0, vec![Param::new("fd", tys[685].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(94, 565, "fhlink", "fhlink", 0, vec![Param::new("fhp", tys[505].clone(), None), Param::new("to", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(95, 566, "fhlinkat", "fhlinkat", 0, vec![Param::new("fhp", tys[505].clone(), None), Param::new("fd", tys[685].clone(), None), Param::new("to", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(96, 298, "fhopen", "fhopen", 0, vec![Param::new("fhp", tys[505].clone(), None), Param::new("flags", tys[336].clone(), None), ], Some(tys[685].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(97, 567, "fhreadlink", "fhreadlink", 0, vec![Param::new("fhp", tys[505].clone(), None), Param::new("buf", tys[666].clone(), None), Param::new("bufsize", tys[462].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(98, 553, "fhstat", "fhstat", 0, vec![Param::new("fhp", tys[505].clone(), None), Param::new("statbuf", tys[612].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(99, 558, "fhstatfs", "fhstatfs", 0, vec![Param::new("fhp", tys[505].clone(), None), Param::new("buf", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(100, 131, "flock", "flock", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("op", tys[376].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(101, 192, "fpathconf", "fpathconf", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("name", tys[294].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(102, 42, "freebsd10_pipe", "freebsd10_pipe", 0, vec![Param::new("pipefd", tys[613].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(103, 189, "freebsd11_fstat", "freebsd11_fstat", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("statbuf", tys[614].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(104, 272, "freebsd11_getdents", "freebsd11_getdents", 0, vec![Param::new("fd", tys[687].clone(), None), Param::new("ent", tys[666].clone(), None), Param::new("count", tys[466].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(105, 363, "freebsd11_kevent", "freebsd11_kevent", 0, vec![Param::new("int", tys[685].clone(), None), Param::new("changelist", tys[506].clone(), None), Param::new("nchanges", tys[463].clone(), None), Param::new("eventlist", tys[615].clone(), None), Param::new("nevents", tys[467].clone(), None), Param::new("timeout", tys[500].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(106, 190, "freebsd11_lstat", "freebsd11_lstat", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("statbuf", tys[614].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(107, 14, "freebsd11_mknod", "freebsd11_mknod", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("mod", tys[331].clone(), None), Param::new("dev", tys[413].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(108, 498, "freebsd11_mknodat", "freebsd11_mknodat", 0, vec![Param::new("dirfd", tys[687].clone(), None), Param::new("file", tys[587].clone(), None), Param::new("mod", tys[331].clone(), None), Param::new("dev", tys[413].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(109, 188, "freebsd11_stat", "freebsd11_stat", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("statbuf", tys[614].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(110, 509, "freebsd12_closefrom", "freebsd12_closefrom", 0, vec![Param::new("fd", tys[685].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(111, 482, "freebsd12_shm_open", "freebsd12_shm_open", 0, vec![Param::new("path", tys[587].clone(), None), Param::new("flags", tys[347].clone(), None), Param::new("mode", tys[388].clone(), None), ], Some(tys[699].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(112, 551, "fstat", "fstat", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("statbuf", tys[612].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(113, 95, "fsync", "fsync", 0, vec![Param::new("fd", tys[685].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(114, 480, "ftruncate", "ftruncate", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("len", tys[426].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(115, 494, "futimesat", "futimesat", 0, vec![Param::new("dir", tys[687].clone(), None), Param::new("pathname", tys[587].clone(), None), Param::new("times", tys[508].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(116, 43, "getegid", "getegid", 0, vec![], Some(tys[689].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(117, 25, "geteuid", "geteuid", 0, vec![], Some(tys[714].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(118, 161, "getfh", "getfh", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("fhp", tys[611].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(119, 564, "getfhat", "getfhat", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("file", tys[587].clone(), None), Param::new("fhp", tys[611].clone(), None), Param::new("flags", tys[377].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(120, 47, "getgid", "getgid", 0, vec![], Some(tys[689].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(121, 79, "getgroups", "getgroups", 0, vec![Param::new("size", tys[470].clone(), None), Param::new("list", tys[619].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(122, 86, "getitimer", "getitimer", 0, vec![Param::new("which", tys[307].clone(), None), Param::new("cur", tys[618].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(123, 31, "getpeername", "getpeername", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("peer", tys[674].clone(), None), Param::new("peerlen", tys[675].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(124, 31, "getpeername$inet", "getpeername", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("peer", tys[669].clone(), None), Param::new("peerlen", tys[675].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(125, 31, "getpeername$inet6", "getpeername", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("peer", tys[673].clone(), None), Param::new("peerlen", tys[675].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(126, 31, "getpeername$unix", "getpeername", 0, vec![Param::new("fd", tys[711].clone(), None), Param::new("peer", tys[664].clone(), None), Param::new("peerlen", tys[675].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(127, 207, "getpgid", "getpgid", 0, vec![Param::new("pid", tys[696].clone(), None), ], Some(tys[696].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_2(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(128, 81, "getpgrp", "getpgrp", 0, vec![Param::new("pid", tys[696].clone(), None), ], Some(tys[696].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(129, 20, "getpid", "getpid", 0, vec![], Some(tys[696].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(130, 361, "getresgid", "getresgid", 0, vec![Param::new("rgid", tys[630].clone(), None), Param::new("egid", tys[630].clone(), None), Param::new("sgid", tys[630].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(131, 360, "getresuid", "getresuid", 0, vec![Param::new("ruid", tys[626].clone(), None), Param::new("euid", tys[626].clone(), None), Param::new("suid", tys[626].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(132, 194, "getrlimit", "getrlimit", 0, vec![Param::new("res", tys[338].clone(), None), Param::new("rlim", tys[622].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(133, 117, "getrusage", "getrusage", 0, vec![Param::new("who", tys[339].clone(), None), Param::new("usage", tys[623].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(134, 32, "getsockname", "getsockname", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("addr", tys[674].clone(), None), Param::new("addrlen", tys[624].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(135, 32, "getsockname$inet", "getsockname", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("addr", tys[669].clone(), None), Param::new("addrlen", tys[624].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(136, 32, "getsockname$inet6", "getsockname", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("addr", tys[673].clone(), None), Param::new("addrlen", tys[624].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(137, 32, "getsockname$unix", "getsockname", 0, vec![Param::new("fd", tys[711].clone(), None), Param::new("addr", tys[664].clone(), None), Param::new("addrlen", tys[624].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(138, 118, "getsockopt", "getsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[413].clone(), None), Param::new("optname", tys[413].clone(), None), Param::new("optval", tys[666].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(139, 118, "getsockopt$inet6_buf", "getsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[320].clone(), None), Param::new("optval", tys[666].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(140, 118, "getsockopt$inet6_int", "getsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[321].clone(), None), Param::new("optval", tys[602].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(141, 118, "getsockopt$inet6_sctp_SCTP_ADAPTATION_LAYER", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[197].clone(), None), Param::new("val", tys[627].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(142, 118, "getsockopt$inet6_sctp_SCTP_ASSOCINFO", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[167].clone(), None), Param::new("val", tys[629].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(143, 118, "getsockopt$inet6_sctp_SCTP_AUTH_ACTIVE_KEY", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[147].clone(), None), Param::new("val", tys[631].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(144, 118, "getsockopt$inet6_sctp_SCTP_AUTOCLOSE", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[188].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(145, 118, "getsockopt$inet6_sctp_SCTP_AUTO_ASCONF", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[153].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(146, 118, "getsockopt$inet6_sctp_SCTP_CONTEXT", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[163].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(147, 118, "getsockopt$inet6_sctp_SCTP_DEFAULT_PRINFO", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[177].clone(), None), Param::new("val", tys[633].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(148, 118, "getsockopt$inet6_sctp_SCTP_DEFAULT_SEND_PARAM", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[133].clone(), None), Param::new("val", tys[634].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(149, 118, "getsockopt$inet6_sctp_SCTP_DEFAULT_SNDINFO", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[176].clone(), None), Param::new("val", tys[635].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(150, 118, "getsockopt$inet6_sctp_SCTP_DELAYED_SACK", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[140].clone(), None), Param::new("val", tys[636].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(151, 118, "getsockopt$inet6_sctp_SCTP_DISABLE_FRAGMENTS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[198].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(152, 118, "getsockopt$inet6_sctp_SCTP_ENABLE_STREAM_RESET", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[149].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(153, 118, "getsockopt$inet6_sctp_SCTP_EVENT", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[168].clone(), None), Param::new("val", tys[637].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(154, 118, "getsockopt$inet6_sctp_SCTP_EVENTS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[135].clone(), None), Param::new("val", tys[638].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(155, 118, "getsockopt$inet6_sctp_SCTP_EXPLICIT_EOR", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[164].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(156, 118, "getsockopt$inet6_sctp_SCTP_FRAGMENT_INTERLEAVE", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[141].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(157, 118, "getsockopt$inet6_sctp_SCTP_GET_ASSOC_ID_LIST", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[160].clone(), None), Param::new("val", tys[639].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(158, 118, "getsockopt$inet6_sctp_SCTP_GET_ASSOC_NUMBER", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[159].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(159, 118, "getsockopt$inet6_sctp_SCTP_GET_LOCAL_ADDRESSES", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[173].clone(), None), Param::new("val", tys[641].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(160, 118, "getsockopt$inet6_sctp_SCTP_GET_PEER_ADDRESSES", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[172].clone(), None), Param::new("val", tys[641].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(161, 118, "getsockopt$inet6_sctp_SCTP_GET_PEER_ADDR_INFO", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[155].clone(), None), Param::new("val", tys[642].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(162, 118, "getsockopt$inet6_sctp_SCTP_HMAC_IDENT", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[146].clone(), None), Param::new("val", tys[643].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(163, 118, "getsockopt$inet6_sctp_SCTP_INITMSG", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[180].clone(), None), Param::new("val", tys[644].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(164, 118, "getsockopt$inet6_sctp_SCTP_I_WANT_MAPPED_V4_ADDR", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[138].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(165, 118, "getsockopt$inet6_sctp_SCTP_LOCAL_AUTH_CHUNKS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[157].clone(), None), Param::new("val", tys[645].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(166, 118, "getsockopt$inet6_sctp_SCTP_MAXSEG", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[139].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(167, 118, "getsockopt$inet6_sctp_SCTP_MAX_BURST", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[158].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(168, 118, "getsockopt$inet6_sctp_SCTP_NODELAY", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[185].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(169, 118, "getsockopt$inet6_sctp_SCTP_PARTIAL_DELIVERY_POINT", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[142].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(170, 118, "getsockopt$inet6_sctp_SCTP_PEER_ADDR_PARAMS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[132].clone(), None), Param::new("val", tys[647].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(171, 118, "getsockopt$inet6_sctp_SCTP_PEER_ADDR_THLDS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[178].clone(), None), Param::new("val", tys[648].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(172, 118, "getsockopt$inet6_sctp_SCTP_PEER_AUTH_CHUNKS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[156].clone(), None), Param::new("val", tys[645].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(173, 118, "getsockopt$inet6_sctp_SCTP_PRIMARY_ADDR", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[193].clone(), None), Param::new("val", tys[649].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(174, 118, "getsockopt$inet6_sctp_SCTP_PR_ASSOC_STATUS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[162].clone(), None), Param::new("val", tys[650].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(175, 118, "getsockopt$inet6_sctp_SCTP_PR_STREAM_STATUS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[161].clone(), None), Param::new("val", tys[650].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(176, 118, "getsockopt$inet6_sctp_SCTP_PR_SUPPORTED", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[179].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(177, 118, "getsockopt$inet6_sctp_SCTP_RECONFIG_SUPPORTED", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[182].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(178, 118, "getsockopt$inet6_sctp_SCTP_RECVNXTINFO", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[175].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(179, 118, "getsockopt$inet6_sctp_SCTP_RECVRCVINFO", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[169].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(180, 118, "getsockopt$inet6_sctp_SCTP_RESET_STREAMS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[150].clone(), None), Param::new("val", tys[651].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(181, 118, "getsockopt$inet6_sctp_SCTP_REUSE_PORT", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[165].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(182, 118, "getsockopt$inet6_sctp_SCTP_RTOINFO", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[145].clone(), None), Param::new("val", tys[652].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(183, 118, "getsockopt$inet6_sctp_SCTP_STATUS", "getsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[154].clone(), None), Param::new("val", tys[653].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(184, 118, "getsockopt$inet6_tcp_buf", "getsockopt", 0, vec![Param::new("fd", tys[706].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[360].clone(), None), Param::new("optval", tys[666].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(185, 118, "getsockopt$inet6_tcp_int", "getsockopt", 0, vec![Param::new("fd", tys[706].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[361].clone(), None), Param::new("optval", tys[602].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(186, 118, "getsockopt$inet6_udp", "getsockopt", 0, vec![Param::new("fd", tys[708].clone(), None), Param::new("level", tys[142].clone(), None), Param::new("optname", tys[403].clone(), None), Param::new("optval", tys[602].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(187, 118, "getsockopt$inet6_udplite", "getsockopt", 0, vec![Param::new("fd", tys[710].clone(), None), Param::new("level", tys[137].clone(), None), Param::new("optname", tys[404].clone(), None), Param::new("optval", tys[602].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(188, 118, "getsockopt$inet_buf", "getsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[322].clone(), None), Param::new("optval", tys[666].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(189, 118, "getsockopt$inet_int", "getsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[323].clone(), None), Param::new("optval", tys[602].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(190, 118, "getsockopt$inet_mreq", "getsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[353].clone(), None), Param::new("optval", tys[654].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(191, 118, "getsockopt$inet_mreqn", "getsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[353].clone(), None), Param::new("optval", tys[655].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_3(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(192, 118, "getsockopt$inet_mreqsrc", "getsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[354].clone(), None), Param::new("optval", tys[656].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(193, 118, "getsockopt$inet_opts", "getsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[402].clone(), None), Param::new("optval", tys[666].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(194, 118, "getsockopt$inet_sctp_SCTP_ADAPTATION_LAYER", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[197].clone(), None), Param::new("val", tys[627].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(195, 118, "getsockopt$inet_sctp_SCTP_ASSOCINFO", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[167].clone(), None), Param::new("val", tys[629].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(196, 118, "getsockopt$inet_sctp_SCTP_AUTH_ACTIVE_KEY", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[147].clone(), None), Param::new("val", tys[631].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(197, 118, "getsockopt$inet_sctp_SCTP_AUTOCLOSE", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[188].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(198, 118, "getsockopt$inet_sctp_SCTP_AUTO_ASCONF", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[153].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(199, 118, "getsockopt$inet_sctp_SCTP_CONTEXT", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[163].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(200, 118, "getsockopt$inet_sctp_SCTP_DEFAULT_PRINFO", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[177].clone(), None), Param::new("val", tys[633].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(201, 118, "getsockopt$inet_sctp_SCTP_DEFAULT_SEND_PARAM", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[133].clone(), None), Param::new("val", tys[634].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(202, 118, "getsockopt$inet_sctp_SCTP_DEFAULT_SNDINFO", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[176].clone(), None), Param::new("val", tys[635].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(203, 118, "getsockopt$inet_sctp_SCTP_DELAYED_SACK", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[140].clone(), None), Param::new("val", tys[636].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(204, 118, "getsockopt$inet_sctp_SCTP_DISABLE_FRAGMENTS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[198].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(205, 118, "getsockopt$inet_sctp_SCTP_ENABLE_STREAM_RESET", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[149].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(206, 118, "getsockopt$inet_sctp_SCTP_EVENT", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[168].clone(), None), Param::new("val", tys[637].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(207, 118, "getsockopt$inet_sctp_SCTP_EVENTS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[135].clone(), None), Param::new("val", tys[638].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(208, 118, "getsockopt$inet_sctp_SCTP_EXPLICIT_EOR", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[164].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(209, 118, "getsockopt$inet_sctp_SCTP_FRAGMENT_INTERLEAVE", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[141].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(210, 118, "getsockopt$inet_sctp_SCTP_GET_ASSOC_ID_LIST", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[160].clone(), None), Param::new("val", tys[639].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(211, 118, "getsockopt$inet_sctp_SCTP_GET_ASSOC_NUMBER", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[159].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(212, 118, "getsockopt$inet_sctp_SCTP_GET_LOCAL_ADDRESSES", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[173].clone(), None), Param::new("val", tys[641].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(213, 118, "getsockopt$inet_sctp_SCTP_GET_PEER_ADDRESSES", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[172].clone(), None), Param::new("val", tys[641].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(214, 118, "getsockopt$inet_sctp_SCTP_GET_PEER_ADDR_INFO", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[155].clone(), None), Param::new("val", tys[642].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(215, 118, "getsockopt$inet_sctp_SCTP_HMAC_IDENT", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[146].clone(), None), Param::new("val", tys[643].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(216, 118, "getsockopt$inet_sctp_SCTP_INITMSG", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[180].clone(), None), Param::new("val", tys[644].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(217, 118, "getsockopt$inet_sctp_SCTP_I_WANT_MAPPED_V4_ADDR", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[138].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(218, 118, "getsockopt$inet_sctp_SCTP_LOCAL_AUTH_CHUNKS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[157].clone(), None), Param::new("val", tys[645].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(219, 118, "getsockopt$inet_sctp_SCTP_MAXSEG", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[139].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(220, 118, "getsockopt$inet_sctp_SCTP_MAX_BURST", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[158].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(221, 118, "getsockopt$inet_sctp_SCTP_NODELAY", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[185].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(222, 118, "getsockopt$inet_sctp_SCTP_PARTIAL_DELIVERY_POINT", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[142].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(223, 118, "getsockopt$inet_sctp_SCTP_PEER_ADDR_PARAMS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[132].clone(), None), Param::new("val", tys[647].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(224, 118, "getsockopt$inet_sctp_SCTP_PEER_ADDR_THLDS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[178].clone(), None), Param::new("val", tys[648].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(225, 118, "getsockopt$inet_sctp_SCTP_PEER_AUTH_CHUNKS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[156].clone(), None), Param::new("val", tys[645].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(226, 118, "getsockopt$inet_sctp_SCTP_PRIMARY_ADDR", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[193].clone(), None), Param::new("val", tys[649].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(227, 118, "getsockopt$inet_sctp_SCTP_PR_ASSOC_STATUS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[162].clone(), None), Param::new("val", tys[650].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(228, 118, "getsockopt$inet_sctp_SCTP_PR_STREAM_STATUS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[161].clone(), None), Param::new("val", tys[650].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(229, 118, "getsockopt$inet_sctp_SCTP_PR_SUPPORTED", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[179].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(230, 118, "getsockopt$inet_sctp_SCTP_RECONFIG_SUPPORTED", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[182].clone(), None), Param::new("val", tys[632].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(231, 118, "getsockopt$inet_sctp_SCTP_RECVNXTINFO", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[175].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(232, 118, "getsockopt$inet_sctp_SCTP_RECVRCVINFO", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[169].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(233, 118, "getsockopt$inet_sctp_SCTP_RESET_STREAMS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[150].clone(), None), Param::new("val", tys[651].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(234, 118, "getsockopt$inet_sctp_SCTP_REUSE_PORT", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[165].clone(), None), Param::new("val", tys[602].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(235, 118, "getsockopt$inet_sctp_SCTP_RTOINFO", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[145].clone(), None), Param::new("val", tys[652].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(236, 118, "getsockopt$inet_sctp_SCTP_STATUS", "getsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[154].clone(), None), Param::new("val", tys[653].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(237, 118, "getsockopt$inet_tcp_buf", "getsockopt", 0, vec![Param::new("fd", tys[705].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[360].clone(), None), Param::new("optval", tys[666].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(238, 118, "getsockopt$inet_tcp_int", "getsockopt", 0, vec![Param::new("fd", tys[705].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[361].clone(), None), Param::new("optval", tys[602].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(239, 118, "getsockopt$inet_udp", "getsockopt", 0, vec![Param::new("fd", tys[707].clone(), None), Param::new("level", tys[142].clone(), None), Param::new("optname", tys[403].clone(), None), Param::new("optval", tys[602].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(240, 118, "getsockopt$inet_udplite", "getsockopt", 0, vec![Param::new("fd", tys[709].clone(), None), Param::new("level", tys[137].clone(), None), Param::new("optname", tys[404].clone(), None), Param::new("optval", tys[602].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(241, 118, "getsockopt$sock_accept_filter", "getsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[190].clone(), None), Param::new("optname", tys[181].clone(), None), Param::new("optval", tys[657].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(242, 118, "getsockopt$sock_int", "getsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[190].clone(), None), Param::new("optname", tys[356].clone(), None), Param::new("optval", tys[602].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(243, 118, "getsockopt$sock_linger", "getsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[190].clone(), None), Param::new("optname", tys[134].clone(), None), Param::new("optval", tys[658].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(244, 118, "getsockopt$sock_timeval", "getsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[190].clone(), None), Param::new("optname", tys[357].clone(), None), Param::new("optval", tys[616].clone(), None), Param::new("optlen", tys[625].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(245, 24, "getuid", "getuid", 0, vec![], Some(tys[714].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(246, 54, "ioctl$DIOCADDADDR", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[263].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(247, 54, "ioctl$DIOCADDALTQV0", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[236].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(248, 54, "ioctl$DIOCADDALTQV1", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[240].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(249, 54, "ioctl$DIOCADDRULE", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[267].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(250, 54, "ioctl$DIOCADDSTATE", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[235].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(251, 54, "ioctl$DIOCBEGINADDRS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[262].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(252, 54, "ioctl$DIOCCHANGEADDR", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[266].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(253, 54, "ioctl$DIOCCHANGEALTQV0", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[239].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(254, 54, "ioctl$DIOCCHANGEALTQV1", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[243].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(255, 54, "ioctl$DIOCCHANGERULE", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[270].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_4(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(256, 54, "ioctl$DIOCCLRIFFLAG", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[227].clone(), None), Param::new("arg", tys[539].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(257, 54, "ioctl$DIOCCLRSTATES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[232].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(258, 54, "ioctl$DIOCGETADDR", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[265].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(259, 54, "ioctl$DIOCGETADDRS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[264].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(260, 54, "ioctl$DIOCGETALTQSV0", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[237].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(261, 54, "ioctl$DIOCGETALTQSV1", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[241].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(262, 54, "ioctl$DIOCGETALTQV0", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[238].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(263, 54, "ioctl$DIOCGETALTQV1", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[242].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(264, 54, "ioctl$DIOCGETLIMIT", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[215].clone(), None), Param::new("arg", tys[540].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(265, 54, "ioctl$DIOCGETQSTATSV0", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[223].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(266, 54, "ioctl$DIOCGETQSTATSV1", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[224].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(267, 54, "ioctl$DIOCGETRULE", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[269].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(268, 54, "ioctl$DIOCGETRULES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[268].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(269, 54, "ioctl$DIOCGETRULESET", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[246].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(270, 54, "ioctl$DIOCGETRULESETS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[245].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(271, 54, "ioctl$DIOCGETSRCNODES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[222].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(272, 54, "ioctl$DIOCGETSTATE", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[234].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(273, 54, "ioctl$DIOCGETSTATES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[218].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(274, 54, "ioctl$DIOCGETSTATUS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[244].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(275, 54, "ioctl$DIOCGETTIMEOUT", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[214].clone(), None), Param::new("arg", tys[541].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(276, 54, "ioctl$DIOCIGETIFACES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[225].clone(), None), Param::new("arg", tys[539].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(277, 54, "ioctl$DIOCKILLSRCNODES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[229].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(278, 54, "ioctl$DIOCKILLSTATES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[233].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(279, 54, "ioctl$DIOCNATLOOK", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[228].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(280, 54, "ioctl$DIOCOSFPADD", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[230].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(281, 54, "ioctl$DIOCOSFPGET", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[231].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(282, 54, "ioctl$DIOCRADDADDRS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[253].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(283, 54, "ioctl$DIOCRADDTABLES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[248].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(284, 54, "ioctl$DIOCRCLRASTATS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[258].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(285, 54, "ioctl$DIOCRCLRTABLES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[247].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(286, 54, "ioctl$DIOCRCLRTSTATS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[252].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(287, 54, "ioctl$DIOCRDELADDRS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[254].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(288, 54, "ioctl$DIOCRDELTABLES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[249].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(289, 54, "ioctl$DIOCRGETADDRS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[256].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(290, 54, "ioctl$DIOCRGETASTATS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[257].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(291, 54, "ioctl$DIOCRGETTABLES", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[250].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(292, 54, "ioctl$DIOCRGETTSTATS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[251].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(293, 54, "ioctl$DIOCRINADEFINE", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[261].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(294, 54, "ioctl$DIOCRSETADDRS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[255].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(295, 54, "ioctl$DIOCRSETTFLAGS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[260].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(296, 54, "ioctl$DIOCRTSTADDRS", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[259].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(297, 54, "ioctl$DIOCSETIFFLAG", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[226].clone(), None), Param::new("arg", tys[539].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(298, 54, "ioctl$DIOCSETLIMIT", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[216].clone(), None), Param::new("arg", tys[540].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(299, 54, "ioctl$DIOCSETSTATUSIF", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[217].clone(), None), Param::new("arg", tys[543].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(300, 54, "ioctl$DIOCSETTIMEOUT", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[213].clone(), None), Param::new("arg", tys[541].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(301, 54, "ioctl$DIOCXBEGIN", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[219].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(302, 54, "ioctl$DIOCXCOMMIT", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[220].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(303, 54, "ioctl$DIOCXROLLBACK", "ioctl", 0, vec![Param::new("fd", tys[688].clone(), None), Param::new("cmd", tys[221].clone(), None), Param::new("arg", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(304, 54, "ioctl$FIOGSHMLPGCNF", "ioctl", 0, vec![Param::new("fd", tys[699].clone(), None), Param::new("cmd", tys[202].clone(), None), Param::new("arg", tys[659].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(305, 54, "ioctl$FIOSSHMLPGCNF", "ioctl", 0, vec![Param::new("fd", tys[699].clone(), None), Param::new("cmd", tys[210].clone(), None), Param::new("arg", tys[544].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(306, 560, "kevent", "kevent", 0, vec![Param::new("kqueue", tys[694].clone(), None), Param::new("changelist", tys[545].clone(), None), Param::new("nchanges", tys[463].clone(), None), Param::new("eventlist", tys[660].clone(), None), Param::new("nevents", tys[467].clone(), None), Param::new("timeout", tys[500].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(307, 461, "kmq_notify", "kmq_notify", 0, vec![Param::new("mqd", tys[695].clone(), None), Param::new("notif", tys[490].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(308, 457, "kmq_open", "kmq_open", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("oflags", tys[335].clone(), None), Param::new("mode", tys[388].clone(), None), Param::new("attr", tys[548].clone(), None), ], Some(tys[695].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(309, 458, "kmq_setattr", "kmq_setattr", 0, vec![Param::new("mqd", tys[695].clone(), None), Param::new("attr", tys[548].clone(), None), Param::new("oldattr", tys[597].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(310, 459, "kmq_timedreceive", "kmq_timedreceive", 0, vec![Param::new("mqd", tys[695].clone(), None), Param::new("msg", tys[666].clone(), None), Param::new("msglen", tys[471].clone(), None), Param::new("prio", tys[426].clone(), None), Param::new("timeout", tys[489].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(311, 460, "kmq_timedsend", "kmq_timedsend", 0, vec![Param::new("mqd", tys[695].clone(), None), Param::new("msg", tys[553].clone(), None), Param::new("msglen", tys[471].clone(), None), Param::new("prio", tys[426].clone(), None), Param::new("timeout", tys[489].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(312, 462, "kmq_unlink", "kmq_unlink", 0, vec![Param::new("file", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(313, 362, "kqueue", "kqueue", 0, vec![], Some(tys[694].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(314, 400, "ksem_close", "ksem_close", 0, vec![Param::new("id", tys[697].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(315, 408, "ksem_destroy", "ksem_destroy", 0, vec![Param::new("id", tys[697].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(316, 407, "ksem_getvalue", "ksem_getvalue", 0, vec![Param::new("id", tys[697].clone(), None), Param::new("val", tys[602].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(317, 404, "ksem_init", "ksem_init", 0, vec![Param::new("idp", tys[661].clone(), None), Param::new("value", tys[413].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(318, 405, "ksem_open", "ksem_open", 0, vec![Param::new("idp", tys[661].clone(), None), Param::new("name", tys[498].clone(), None), Param::new("oflag", tys[379].clone(), None), Param::new("mode", tys[388].clone(), None), Param::new("value", tys[413].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(319, 401, "ksem_post", "ksem_post", 0, vec![Param::new("id", tys[697].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_5(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(320, 403, "ksem_trywait", "ksem_trywait", 0, vec![Param::new("id", tys[697].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(321, 406, "ksem_unlink", "ksem_unlink", 0, vec![Param::new("name", tys[498].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(322, 402, "ksem_wait", "ksem_wait", 0, vec![Param::new("id", tys[697].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(323, 235, "ktimer_create", "ktimer_create", 0, vec![Param::new("id", tys[292].clone(), None), Param::new("evp", tys[547].clone(), None), Param::new("timerid", tys[662].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(324, 236, "ktimer_delete", "ktimer_delete", 0, vec![Param::new("timerid", tys[713].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(325, 239, "ktimer_getoverrun", "ktimer_getoverrun", 0, vec![Param::new("timerid", tys[713].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(326, 238, "ktimer_gettime", "ktimer_gettime", 0, vec![Param::new("timerid", tys[713].clone(), None), Param::new("value", tys[663].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(327, 237, "ktimer_settime", "ktimer_settime", 0, vec![Param::new("timerid", tys[713].clone(), None), Param::new("flags", tys[362].clone(), None), Param::new("value", tys[549].clone(), None), Param::new("ovalue", tys[663].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(328, 391, "lchflags", "lchflags", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("flags", tys[371].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(329, 274, "lchmod", "lchmod", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("mode", tys[388].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(330, 254, "lchown", "lchown", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("uid", tys[714].clone(), None), Param::new("gid", tys[689].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(331, 160, "lgetfh", "lgetfh", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("fhp", tys[611].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(332, 9, "link", "link", 0, vec![Param::new("old", tys[587].clone(), None), Param::new("new", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(333, 495, "linkat", "linkat", 0, vec![Param::new("oldfd", tys[687].clone(), None), Param::new("old", tys[587].clone(), None), Param::new("newfd", tys[687].clone(), None), Param::new("new", tys[587].clone(), None), Param::new("flags", tys[380].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(334, 106, "listen", "listen", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("backlog", tys[413].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(335, 513, "lpathconf", "lpathconf", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("name", tys[294].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(336, 478, "lseek", "lseek", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("offset", tys[426].clone(), None), Param::new("whence", tys[344].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(337, 75, "madvise", "madvise", 0, vec![Param::new("addr", tys[715].clone(), None), Param::new("len", tys[461].clone(), None), Param::new("advice", tys[329].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(338, 78, "mincore", "mincore", 0, vec![Param::new("addr", tys[715].clone(), None), Param::new("size", tys[461].clone(), None), Param::new("vec", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(339, 250, "minherit", "minherit", 0, vec![Param::new("addr", tys[715].clone(), None), Param::new("len", tys[461].clone(), None), Param::new("inherit", tys[330].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(340, 136, "mkdir", "mkdir", 0, vec![Param::new("path", tys[587].clone(), None), Param::new("mode", tys[388].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(341, 496, "mkdirat", "mkdirat", 0, vec![Param::new("fd", tys[687].clone(), None), Param::new("path", tys[587].clone(), None), Param::new("mode", tys[388].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(342, 559, "mknodat", "mknodat", 0, vec![Param::new("dirfd", tys[687].clone(), None), Param::new("file", tys[587].clone(), None), Param::new("mode", tys[331].clone(), None), Param::new("dev", tys[415].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(343, 203, "mlock", "mlock", 0, vec![Param::new("addr", tys[715].clone(), None), Param::new("size", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(344, 324, "mlockall", "mlockall", 0, vec![Param::new("flags", tys[382].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(345, 477, "mmap", "mmap", 0, vec![Param::new("addr", tys[715].clone(), None), Param::new("len", tys[461].clone(), None), Param::new("prot", tys[383].clone(), None), Param::new("flags", tys[332].clone(), None), Param::new("fd", tys[685].clone(), None), Param::new("offset", tys[426].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(346, 74, "mprotect", "mprotect", 0, vec![Param::new("addr", tys[715].clone(), None), Param::new("len", tys[461].clone(), None), Param::new("prot", tys[383].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(347, 511, "msgctl$IPC_INFO", "msgctl", 0, vec![Param::new("msqid", tys[691].clone(), None), Param::new("cmd", tys[271].clone(), None), Param::new("buf", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(348, 511, "msgctl$IPC_RMID", "msgctl", 1, vec![Param::new("msqid", tys[691].clone(), None), Param::new("cmd", tys[278].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(349, 511, "msgctl$IPC_SET", "msgctl", 0, vec![Param::new("msqid", tys[691].clone(), None), Param::new("cmd", tys[209].clone(), None), Param::new("buf", tys[551].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(350, 511, "msgctl$IPC_STAT", "msgctl", 0, vec![Param::new("msqid", tys[691].clone(), None), Param::new("cmd", tys[212].clone(), None), Param::new("buf", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(351, 225, "msgget", "msgget", 0, vec![Param::new("key", tys[488].clone(), None), Param::new("flags", tys[384].clone(), None), ], Some(tys[691].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(352, 225, "msgget$private", "msgget", 0, vec![Param::new("key", tys[278].clone(), None), Param::new("flags", tys[384].clone(), None), ], Some(tys[691].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(353, 227, "msgrcv", "msgrcv", 0, vec![Param::new("msqid", tys[691].clone(), None), Param::new("msgp", tys[665].clone(), None), Param::new("sz", tys[474].clone(), None), Param::new("typ", tys[333].clone(), None), Param::new("flags", tys[385].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(354, 226, "msgsnd", "msgsnd", 0, vec![Param::new("msqid", tys[691].clone(), None), Param::new("msgp", tys[552].clone(), None), Param::new("sz", tys[474].clone(), None), Param::new("flags", tys[386].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(355, 65, "msync", "msync", 0, vec![Param::new("addr", tys[715].clone(), None), Param::new("len", tys[461].clone(), None), Param::new("f", tys[334].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(356, 204, "munlock", "munlock", 0, vec![Param::new("addr", tys[715].clone(), None), Param::new("size", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(357, 325, "munlockall", "munlockall", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(358, 73, "munmap", "munmap", 0, vec![Param::new("addr", tys[715].clone(), None), Param::new("len", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(359, 240, "nanosleep", "nanosleep", 0, vec![Param::new("req", tys[500].clone(), None), Param::new("rem", tys[593].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(360, 5, "open", "open", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("flags", tys[336].clone(), None), Param::new("mode", tys[388].clone(), None), ], Some(tys[685].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(361, 5, "open$dir", "open", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("flags", tys[336].clone(), None), Param::new("mode", tys[388].clone(), None), ], Some(tys[687].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(362, 499, "openat", "openat", 0, vec![Param::new("fd", tys[686].clone(), None), Param::new("file", tys[587].clone(), None), Param::new("flags", tys[336].clone(), None), Param::new("mode", tys[388].clone(), None), ], Some(tys[685].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(363, 499, "openat$ptmx", "openat", 0, vec![Param::new("fd", tys[208].clone(), None), Param::new("file", tys[554].clone(), None), Param::new("flags", tys[336].clone(), None), Param::new("mode", tys[278].clone(), None), ], Some(tys[688].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(364, 191, "pathconf", "pathconf", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("name", tys[294].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(365, 542, "pipe2", "pipe2", 0, vec![Param::new("pipefd", tys[613].clone(), None), Param::new("flags", tys[389].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(366, 209, "poll", "poll", 0, vec![Param::new("fds", tys[555].clone(), None), Param::new("nfds", tys[468].clone(), None), Param::new("timeout", tys[413].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(367, 531, "posix_fadvise", "posix_fadvise", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("offset", tys[426].clone(), None), Param::new("len", tys[426].clone(), None), Param::new("advice", tys[300].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(368, 530, "posix_fallocate", "posix_fallocate", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("offset", tys[426].clone(), None), Param::new("len", tys[426].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(369, 545, "ppoll", "ppoll", 0, vec![Param::new("fds", tys[555].clone(), None), Param::new("nfds", tys[468].clone(), None), Param::new("tsp", tys[500].clone(), None), Param::new("sigmask", tys[556].clone(), None), Param::new("size", tys[479].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(370, 289, "preadv", "preadv", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("vec", tys[557].clone(), None), Param::new("vlen", tys[482].clone(), None), Param::new("off", tys[426].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(371, 290, "pwritev", "pwritev", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("vec", tys[558].clone(), None), Param::new("vlen", tys[482].clone(), None), Param::new("off", tys[426].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(372, 3, "read", "read", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("buf", tys[666].clone(), None), Param::new("count", tys[462].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(373, 58, "readlink", "readlink", 0, vec![Param::new("path", tys[587].clone(), None), Param::new("buf", tys[666].clone(), None), Param::new("siz", tys[462].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(374, 500, "readlinkat", "readlinkat", 0, vec![Param::new("fd", tys[687].clone(), None), Param::new("path", tys[587].clone(), None), Param::new("buf", tys[666].clone(), None), Param::new("siz", tys[462].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(375, 120, "readv", "readv", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("vec", tys[557].clone(), None), Param::new("vlen", tys[482].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(376, 29, "recvfrom", "recvfrom", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("buf", tys[666].clone(), None), Param::new("len", tys[462].clone(), None), Param::new("f", tys[390].clone(), None), Param::new("addr", tys[496].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(377, 29, "recvfrom$inet", "recvfrom", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("buf", tys[666].clone(), None), Param::new("len", tys[462].clone(), None), Param::new("f", tys[390].clone(), None), Param::new("addr", tys[494].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(378, 29, "recvfrom$inet6", "recvfrom", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("buf", tys[666].clone(), None), Param::new("len", tys[462].clone(), None), Param::new("f", tys[390].clone(), None), Param::new("addr", tys[495].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(379, 29, "recvfrom$unix", "recvfrom", 0, vec![Param::new("fd", tys[711].clone(), None), Param::new("buf", tys[666].clone(), None), Param::new("len", tys[462].clone(), None), Param::new("f", tys[390].clone(), None), Param::new("addr", tys[491].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(380, 27, "recvmsg", "recvmsg", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("msg", tys[667].clone(), None), Param::new("f", tys[390].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(381, 128, "rename", "rename", 0, vec![Param::new("old", tys[587].clone(), None), Param::new("new", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(382, 501, "renameat", "renameat", 0, vec![Param::new("oldfd", tys[687].clone(), None), Param::new("old", tys[587].clone(), None), Param::new("newfd", tys[687].clone(), None), Param::new("new", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(383, 137, "rmdir", "rmdir", 0, vec![Param::new("path", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_6(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(384, 93, "select", "select", 0, vec![Param::new("n", tys[469].clone(), None), Param::new("inp", tys[668].clone(), None), Param::new("outp", tys[668].clone(), None), Param::new("exp", tys[668].clone(), None), Param::new("tvp", tys[617].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(385, 221, "semget", "semget", 0, vec![Param::new("key", tys[487].clone(), None), Param::new("nsems", tys[346].clone(), None), Param::new("flags", tys[393].clone(), None), ], Some(tys[692].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(386, 221, "semget$private", "semget", 0, vec![Param::new("key", tys[278].clone(), None), Param::new("nsems", tys[346].clone(), None), Param::new("flags", tys[393].clone(), None), ], Some(tys[692].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(387, 222, "semop", "semop", 0, vec![Param::new("semid", tys[692].clone(), None), Param::new("ops", tys[559].clone(), None), Param::new("nops", tys[475].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(388, 393, "sendfile", "sendfile", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("s", tys[701].clone(), None), Param::new("offset", tys[426].clone(), None), Param::new("nbytes", tys[415].clone(), None), Param::new("hdtr", tys[560].clone(), None), Param::new("sbytes", tys[620].clone(), None), Param::new("flags", tys[397].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(389, 28, "sendmsg", "sendmsg", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("msg", tys[562].clone(), None), Param::new("f", tys[396].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(390, 28, "sendmsg$inet6_sctp", "sendmsg", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("msg", tys[563].clone(), None), Param::new("f", tys[396].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(391, 28, "sendmsg$inet_sctp", "sendmsg", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("msg", tys[563].clone(), None), Param::new("f", tys[396].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(392, 28, "sendmsg$unix", "sendmsg", 0, vec![Param::new("fd", tys[711].clone(), None), Param::new("msg", tys[564].clone(), None), Param::new("f", tys[396].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(393, 133, "sendto", "sendto", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("buf", tys[553].clone(), None), Param::new("len", tys[462].clone(), None), Param::new("f", tys[396].clone(), None), Param::new("addr", tys[496].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(394, 133, "sendto$inet", "sendto", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("buf", tys[553].clone(), None), Param::new("len", tys[462].clone(), None), Param::new("f", tys[396].clone(), None), Param::new("addr", tys[494].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(395, 133, "sendto$inet6", "sendto", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("buf", tys[553].clone(), None), Param::new("len", tys[462].clone(), None), Param::new("f", tys[396].clone(), None), Param::new("addr", tys[495].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(396, 133, "sendto$unix", "sendto", 0, vec![Param::new("fd", tys[711].clone(), None), Param::new("buf", tys[553].clone(), None), Param::new("len", tys[462].clone(), None), Param::new("f", tys[396].clone(), None), Param::new("addr", tys[491].clone(), None), Param::new("addrlen", tys[461].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(397, 181, "setgid", "setgid", 0, vec![Param::new("gid", tys[689].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(398, 80, "setgroups", "setgroups", 0, vec![Param::new("size", tys[470].clone(), None), Param::new("list", tys[509].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(399, 83, "setitimer", "setitimer", 0, vec![Param::new("which", tys[307].clone(), None), Param::new("new", tys[508].clone(), None), Param::new("old", tys[594].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(400, 82, "setpgid", "setpgid", 0, vec![Param::new("pid", tys[696].clone(), None), Param::new("pgid", tys[696].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(401, 127, "setregid", "setregid", 0, vec![Param::new("rgid", tys[689].clone(), None), Param::new("egid", tys[689].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(402, 312, "setresgid", "setresgid", 0, vec![Param::new("rgid", tys[689].clone(), None), Param::new("egid", tys[689].clone(), None), Param::new("sgid", tys[689].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(403, 311, "setresuid", "setresuid", 0, vec![Param::new("ruid", tys[714].clone(), None), Param::new("euid", tys[714].clone(), None), Param::new("suid", tys[714].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(404, 126, "setreuid", "setreuid", 0, vec![Param::new("ruid", tys[714].clone(), None), Param::new("euid", tys[714].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(405, 195, "setrlimit", "setrlimit", 0, vec![Param::new("res", tys[338].clone(), None), Param::new("rlim", tys[510].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(406, 105, "setsockopt", "setsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[413].clone(), None), Param::new("optname", tys[413].clone(), None), Param::new("optval", tys[553].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(407, 105, "setsockopt$inet6_IPV6_DSTOPTS", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[186].clone(), None), Param::new("optval", tys[565].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(408, 105, "setsockopt$inet6_IPV6_HOPOPTS", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[184].clone(), None), Param::new("optval", tys[566].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(409, 105, "setsockopt$inet6_IPV6_PKTINFO", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[183].clone(), None), Param::new("optval", tys[567].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(410, 105, "setsockopt$inet6_IPV6_RTHDR", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[187].clone(), None), Param::new("optval", tys[568].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(411, 105, "setsockopt$inet6_IPV6_RTHDRDSTOPTS", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[178].clone(), None), Param::new("optval", tys[565].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(412, 105, "setsockopt$inet6_MCAST_JOIN_GROUP", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[194].clone(), None), Param::new("optval", tys[569].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(413, 105, "setsockopt$inet6_MCAST_LEAVE_GROUP", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[196].clone(), None), Param::new("optval", tys[569].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(414, 105, "setsockopt$inet6_MRT6_ADD_MFC", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[130].clone(), None), Param::new("optval", tys[570].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(415, 105, "setsockopt$inet6_MRT6_ADD_MIF", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[129].clone(), None), Param::new("optval", tys[571].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(416, 105, "setsockopt$inet6_MRT6_DEL_MFC", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[131].clone(), None), Param::new("optval", tys[570].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(417, 105, "setsockopt$inet6_buf", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[320].clone(), None), Param::new("optval", tys[553].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(418, 105, "setsockopt$inet6_group_source_req", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[355].clone(), None), Param::new("optval", tys[572].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(419, 105, "setsockopt$inet6_int", "setsockopt", 0, vec![Param::new("fd", tys[702].clone(), None), Param::new("level", tys[182].clone(), None), Param::new("optname", tys[321].clone(), None), Param::new("optval", tys[497].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(420, 105, "setsockopt$inet6_sctp_SCTP_ADAPTATION_LAYER", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[197].clone(), None), Param::new("val", tys[511].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(421, 105, "setsockopt$inet6_sctp_SCTP_ADD_STREAMS", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[152].clone(), None), Param::new("val", tys[573].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(422, 105, "setsockopt$inet6_sctp_SCTP_ASSOCINFO", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[167].clone(), None), Param::new("val", tys[513].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(423, 105, "setsockopt$inet6_sctp_SCTP_AUTH_ACTIVE_KEY", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[147].clone(), None), Param::new("val", tys[514].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(424, 105, "setsockopt$inet6_sctp_SCTP_AUTH_CHUNK", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[143].clone(), None), Param::new("val", tys[574].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(425, 105, "setsockopt$inet6_sctp_SCTP_AUTH_DEACTIVATE_KEY", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[166].clone(), None), Param::new("val", tys[514].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(426, 105, "setsockopt$inet6_sctp_SCTP_AUTH_DELETE_KEY", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[148].clone(), None), Param::new("val", tys[514].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(427, 105, "setsockopt$inet6_sctp_SCTP_AUTH_KEY", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[144].clone(), None), Param::new("val", tys[575].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(428, 105, "setsockopt$inet6_sctp_SCTP_AUTOCLOSE", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[188].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(429, 105, "setsockopt$inet6_sctp_SCTP_AUTO_ASCONF", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[153].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(430, 105, "setsockopt$inet6_sctp_SCTP_BINDX_ADD_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[170].clone(), None), Param::new("val", tys[522].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(431, 105, "setsockopt$inet6_sctp_SCTP_BINDX_REM_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[171].clone(), None), Param::new("val", tys[522].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(432, 105, "setsockopt$inet6_sctp_SCTP_CONNECT_X", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[174].clone(), None), Param::new("val", tys[576].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(433, 105, "setsockopt$inet6_sctp_SCTP_CONTEXT", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[163].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(434, 105, "setsockopt$inet6_sctp_SCTP_DEFAULT_PRINFO", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[177].clone(), None), Param::new("val", tys[516].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(435, 105, "setsockopt$inet6_sctp_SCTP_DEFAULT_SEND_PARAM", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[133].clone(), None), Param::new("val", tys[517].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(436, 105, "setsockopt$inet6_sctp_SCTP_DEFAULT_SNDINFO", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[176].clone(), None), Param::new("val", tys[518].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(437, 105, "setsockopt$inet6_sctp_SCTP_DELAYED_SACK", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[140].clone(), None), Param::new("val", tys[519].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(438, 105, "setsockopt$inet6_sctp_SCTP_DISABLE_FRAGMENTS", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[198].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(439, 105, "setsockopt$inet6_sctp_SCTP_ENABLE_STREAM_RESET", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[149].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(440, 105, "setsockopt$inet6_sctp_SCTP_EVENT", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[168].clone(), None), Param::new("val", tys[520].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(441, 105, "setsockopt$inet6_sctp_SCTP_EVENTS", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[135].clone(), None), Param::new("val", tys[521].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(442, 105, "setsockopt$inet6_sctp_SCTP_EXPLICIT_EOR", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[164].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(443, 105, "setsockopt$inet6_sctp_SCTP_FRAGMENT_INTERLEAVE", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[141].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(444, 105, "setsockopt$inet6_sctp_SCTP_HMAC_IDENT", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[146].clone(), None), Param::new("val", tys[524].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(445, 105, "setsockopt$inet6_sctp_SCTP_INITMSG", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[180].clone(), None), Param::new("val", tys[525].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(446, 105, "setsockopt$inet6_sctp_SCTP_I_WANT_MAPPED_V4_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[138].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(447, 105, "setsockopt$inet6_sctp_SCTP_MAXSEG", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[139].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_7(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(448, 105, "setsockopt$inet6_sctp_SCTP_MAX_BURST", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[158].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(449, 105, "setsockopt$inet6_sctp_SCTP_NODELAY", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[185].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(450, 105, "setsockopt$inet6_sctp_SCTP_PARTIAL_DELIVERY_POINT", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[142].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(451, 105, "setsockopt$inet6_sctp_SCTP_PEER_ADDR_PARAMS", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[132].clone(), None), Param::new("val", tys[528].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(452, 105, "setsockopt$inet6_sctp_SCTP_PEER_ADDR_THLDS", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[178].clone(), None), Param::new("val", tys[529].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(453, 105, "setsockopt$inet6_sctp_SCTP_PRIMARY_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[193].clone(), None), Param::new("val", tys[530].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(454, 105, "setsockopt$inet6_sctp_SCTP_PR_SUPPORTED", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[179].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(455, 105, "setsockopt$inet6_sctp_SCTP_RECONFIG_SUPPORTED", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[182].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(456, 105, "setsockopt$inet6_sctp_SCTP_RECVNXTINFO", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[175].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(457, 105, "setsockopt$inet6_sctp_SCTP_RECVRCVINFO", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[169].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(458, 105, "setsockopt$inet6_sctp_SCTP_RESET_ASSOC", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[151].clone(), None), Param::new("val", tys[512].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(459, 105, "setsockopt$inet6_sctp_SCTP_RESET_STREAMS", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[150].clone(), None), Param::new("val", tys[531].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(460, 105, "setsockopt$inet6_sctp_SCTP_REUSE_PORT", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[165].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(461, 105, "setsockopt$inet6_sctp_SCTP_RTOINFO", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[145].clone(), None), Param::new("val", tys[532].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(462, 105, "setsockopt$inet6_sctp_SCTP_SET_PEER_PRIMARY_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[704].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[191].clone(), None), Param::new("val", tys[530].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(463, 105, "setsockopt$inet6_tcp_TCP_CONGESTION", "setsockopt", 0, vec![Param::new("fd", tys[706].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[189].clone(), None), Param::new("optval", tys[578].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(464, 105, "setsockopt$inet6_tcp_TCP_FASTOPEN", "setsockopt", 0, vec![Param::new("fd", tys[706].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[128].clone(), None), Param::new("optval", tys[579].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(465, 105, "setsockopt$inet6_tcp_TCP_FUNCTION_BLK", "setsockopt", 0, vec![Param::new("fd", tys[706].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[195].clone(), None), Param::new("optval", tys[580].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(466, 105, "setsockopt$inet6_tcp_buf", "setsockopt", 0, vec![Param::new("fd", tys[706].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[360].clone(), None), Param::new("optval", tys[553].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(467, 105, "setsockopt$inet6_tcp_int", "setsockopt", 0, vec![Param::new("fd", tys[706].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[361].clone(), None), Param::new("optval", tys[497].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(468, 105, "setsockopt$inet6_udp", "setsockopt", 0, vec![Param::new("fd", tys[708].clone(), None), Param::new("level", tys[142].clone(), None), Param::new("optname", tys[403].clone(), None), Param::new("optval", tys[497].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(469, 105, "setsockopt$inet6_udplite", "setsockopt", 0, vec![Param::new("fd", tys[710].clone(), None), Param::new("level", tys[137].clone(), None), Param::new("optname", tys[404].clone(), None), Param::new("optval", tys[497].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(470, 105, "setsockopt$inet_MCAST_JOIN_GROUP", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[194].clone(), None), Param::new("optval", tys[581].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(471, 105, "setsockopt$inet_MCAST_LEAVE_GROUP", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[196].clone(), None), Param::new("optval", tys[581].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(472, 105, "setsockopt$inet_buf", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[322].clone(), None), Param::new("optval", tys[553].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(473, 105, "setsockopt$inet_group_source_req", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[352].clone(), None), Param::new("optval", tys[582].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(474, 105, "setsockopt$inet_int", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[323].clone(), None), Param::new("optval", tys[497].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(475, 105, "setsockopt$inet_mreq", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[353].clone(), None), Param::new("optval", tys[533].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(476, 105, "setsockopt$inet_mreqn", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[353].clone(), None), Param::new("optval", tys[534].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(477, 105, "setsockopt$inet_mreqsrc", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[354].clone(), None), Param::new("optval", tys[535].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(478, 105, "setsockopt$inet_msfilter", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[192].clone(), None), Param::new("optval", tys[583].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(479, 105, "setsockopt$inet_opts", "setsockopt", 0, vec![Param::new("fd", tys[701].clone(), None), Param::new("level", tys[199].clone(), None), Param::new("optname", tys[402].clone(), None), Param::new("optval", tys[553].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(480, 105, "setsockopt$inet_sctp_SCTP_ADAPTATION_LAYER", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[197].clone(), None), Param::new("val", tys[511].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(481, 105, "setsockopt$inet_sctp_SCTP_ADD_STREAMS", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[152].clone(), None), Param::new("val", tys[573].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(482, 105, "setsockopt$inet_sctp_SCTP_ASSOCINFO", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[167].clone(), None), Param::new("val", tys[513].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(483, 105, "setsockopt$inet_sctp_SCTP_AUTH_ACTIVE_KEY", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[147].clone(), None), Param::new("val", tys[514].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(484, 105, "setsockopt$inet_sctp_SCTP_AUTH_CHUNK", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[143].clone(), None), Param::new("val", tys[574].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(485, 105, "setsockopt$inet_sctp_SCTP_AUTH_DEACTIVATE_KEY", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[166].clone(), None), Param::new("val", tys[514].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(486, 105, "setsockopt$inet_sctp_SCTP_AUTH_DELETE_KEY", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[148].clone(), None), Param::new("val", tys[514].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(487, 105, "setsockopt$inet_sctp_SCTP_AUTH_KEY", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[144].clone(), None), Param::new("val", tys[575].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(488, 105, "setsockopt$inet_sctp_SCTP_AUTOCLOSE", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[188].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(489, 105, "setsockopt$inet_sctp_SCTP_AUTO_ASCONF", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[153].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(490, 105, "setsockopt$inet_sctp_SCTP_BINDX_ADD_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[170].clone(), None), Param::new("val", tys[522].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(491, 105, "setsockopt$inet_sctp_SCTP_BINDX_REM_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[171].clone(), None), Param::new("val", tys[522].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(492, 105, "setsockopt$inet_sctp_SCTP_CONNECT_X", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[174].clone(), None), Param::new("val", tys[576].clone(), None), Param::new("len", tys[628].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(493, 105, "setsockopt$inet_sctp_SCTP_CONTEXT", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[163].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(494, 105, "setsockopt$inet_sctp_SCTP_DEFAULT_PRINFO", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[177].clone(), None), Param::new("val", tys[516].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(495, 105, "setsockopt$inet_sctp_SCTP_DEFAULT_SEND_PARAM", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[133].clone(), None), Param::new("val", tys[517].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(496, 105, "setsockopt$inet_sctp_SCTP_DEFAULT_SNDINFO", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[176].clone(), None), Param::new("val", tys[518].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(497, 105, "setsockopt$inet_sctp_SCTP_DELAYED_SACK", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[140].clone(), None), Param::new("val", tys[519].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(498, 105, "setsockopt$inet_sctp_SCTP_DISABLE_FRAGMENTS", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[198].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(499, 105, "setsockopt$inet_sctp_SCTP_ENABLE_STREAM_RESET", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[149].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(500, 105, "setsockopt$inet_sctp_SCTP_EVENT", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[168].clone(), None), Param::new("val", tys[520].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(501, 105, "setsockopt$inet_sctp_SCTP_EVENTS", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[135].clone(), None), Param::new("val", tys[521].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(502, 105, "setsockopt$inet_sctp_SCTP_EXPLICIT_EOR", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[164].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(503, 105, "setsockopt$inet_sctp_SCTP_FRAGMENT_INTERLEAVE", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[141].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(504, 105, "setsockopt$inet_sctp_SCTP_HMAC_IDENT", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[146].clone(), None), Param::new("val", tys[524].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(505, 105, "setsockopt$inet_sctp_SCTP_INITMSG", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[180].clone(), None), Param::new("val", tys[525].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(506, 105, "setsockopt$inet_sctp_SCTP_I_WANT_MAPPED_V4_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[138].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(507, 105, "setsockopt$inet_sctp_SCTP_MAXSEG", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[139].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(508, 105, "setsockopt$inet_sctp_SCTP_MAX_BURST", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[158].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(509, 105, "setsockopt$inet_sctp_SCTP_NODELAY", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[185].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(510, 105, "setsockopt$inet_sctp_SCTP_PARTIAL_DELIVERY_POINT", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[142].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(511, 105, "setsockopt$inet_sctp_SCTP_PEER_ADDR_PARAMS", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[132].clone(), None), Param::new("val", tys[528].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_8(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(512, 105, "setsockopt$inet_sctp_SCTP_PEER_ADDR_THLDS", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[178].clone(), None), Param::new("val", tys[529].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(513, 105, "setsockopt$inet_sctp_SCTP_PRIMARY_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[193].clone(), None), Param::new("val", tys[530].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(514, 105, "setsockopt$inet_sctp_SCTP_PR_SUPPORTED", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[179].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(515, 105, "setsockopt$inet_sctp_SCTP_RECONFIG_SUPPORTED", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[182].clone(), None), Param::new("val", tys[515].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(516, 105, "setsockopt$inet_sctp_SCTP_RECVNXTINFO", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[175].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(517, 105, "setsockopt$inet_sctp_SCTP_RECVRCVINFO", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[169].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(518, 105, "setsockopt$inet_sctp_SCTP_RESET_ASSOC", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[151].clone(), None), Param::new("val", tys[512].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(519, 105, "setsockopt$inet_sctp_SCTP_RESET_STREAMS", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[150].clone(), None), Param::new("val", tys[531].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(520, 105, "setsockopt$inet_sctp_SCTP_REUSE_PORT", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[165].clone(), None), Param::new("val", tys[497].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(521, 105, "setsockopt$inet_sctp_SCTP_RTOINFO", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[145].clone(), None), Param::new("val", tys[532].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(522, 105, "setsockopt$inet_sctp_SCTP_SET_PEER_PRIMARY_ADDR", "setsockopt", 0, vec![Param::new("fd", tys[703].clone(), None), Param::new("level", tys[136].clone(), None), Param::new("opt", tys[191].clone(), None), Param::new("val", tys[530].clone(), None), Param::new("len", tys[481].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(523, 105, "setsockopt$inet_tcp_TCP_CONGESTION", "setsockopt", 0, vec![Param::new("fd", tys[705].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[189].clone(), None), Param::new("optval", tys[578].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(524, 105, "setsockopt$inet_tcp_TCP_FASTOPEN", "setsockopt", 0, vec![Param::new("fd", tys[705].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[128].clone(), None), Param::new("optval", tys[579].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(525, 105, "setsockopt$inet_tcp_TCP_FUNCTION_BLK", "setsockopt", 0, vec![Param::new("fd", tys[705].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[195].clone(), None), Param::new("optval", tys[580].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(526, 105, "setsockopt$inet_tcp_buf", "setsockopt", 0, vec![Param::new("fd", tys[705].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[360].clone(), None), Param::new("optval", tys[553].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(527, 105, "setsockopt$inet_tcp_int", "setsockopt", 0, vec![Param::new("fd", tys[705].clone(), None), Param::new("level", tys[191].clone(), None), Param::new("optname", tys[361].clone(), None), Param::new("optval", tys[497].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(528, 105, "setsockopt$inet_udp", "setsockopt", 0, vec![Param::new("fd", tys[707].clone(), None), Param::new("level", tys[142].clone(), None), Param::new("optname", tys[403].clone(), None), Param::new("optval", tys[497].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(529, 105, "setsockopt$inet_udplite", "setsockopt", 0, vec![Param::new("fd", tys[709].clone(), None), Param::new("level", tys[137].clone(), None), Param::new("optname", tys[404].clone(), None), Param::new("optval", tys[497].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(530, 105, "setsockopt$sock_accept_filter", "setsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[190].clone(), None), Param::new("optname", tys[181].clone(), None), Param::new("optval", tys[536].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(531, 105, "setsockopt$sock_int", "setsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[190].clone(), None), Param::new("optname", tys[356].clone(), None), Param::new("optval", tys[497].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(532, 105, "setsockopt$sock_linger", "setsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[190].clone(), None), Param::new("optname", tys[134].clone(), None), Param::new("optval", tys[538].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(533, 105, "setsockopt$sock_timeval", "setsockopt", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("level", tys[190].clone(), None), Param::new("optname", tys[357].clone(), None), Param::new("optval", tys[507].clone(), None), Param::new("optlen", tys[476].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(534, 23, "setuid", "setuid", 0, vec![Param::new("uid", tys[714].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(535, 571, "shm_open2", "shm_open2", 0, vec![Param::new("path", tys[587].clone(), None), Param::new("flags", tys[347].clone(), None), Param::new("mode", tys[388].clone(), None), Param::new("shmflags", tys[398].clone(), None), Param::new("name", tys[498].clone(), None), ], Some(tys[699].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(536, 572, "shm_rename", "shm_rename", 0, vec![Param::new("from", tys[587].clone(), None), Param::new("to", tys[587].clone(), None), Param::new("flags", tys[399].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(537, 483, "shm_unlink", "shm_unlink", 0, vec![Param::new("path", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(538, 228, "shmat", "shmat", 0, vec![Param::new("shmid", tys[693].clone(), None), Param::new("addr", tys[715].clone(), None), Param::new("flags", tys[400].clone(), None), ], Some(tys[698].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(539, 512, "shmctl$IPC_INFO", "shmctl", 0, vec![Param::new("shmid", tys[693].clone(), None), Param::new("cmd", tys[271].clone(), None), Param::new("buf", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(540, 512, "shmctl$IPC_RMID", "shmctl", 1, vec![Param::new("shmid", tys[693].clone(), None), Param::new("cmd", tys[278].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(541, 512, "shmctl$IPC_SET", "shmctl", 0, vec![Param::new("shmid", tys[693].clone(), None), Param::new("cmd", tys[209].clone(), None), Param::new("buf", tys[584].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(542, 512, "shmctl$IPC_STAT", "shmctl", 0, vec![Param::new("shmid", tys[693].clone(), None), Param::new("cmd", tys[212].clone(), None), Param::new("buf", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(543, 512, "shmctl$SHM_INFO", "shmctl", 0, vec![Param::new("shmid", tys[693].clone(), None), Param::new("cmd", tys[207].clone(), None), Param::new("buf", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(544, 512, "shmctl$SHM_LOCK", "shmctl", 1, vec![Param::new("shmid", tys[693].clone(), None), Param::new("cmd", tys[204].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(545, 512, "shmctl$SHM_STAT", "shmctl", 0, vec![Param::new("shmid", tys[693].clone(), None), Param::new("cmd", tys[206].clone(), None), Param::new("buf", tys[666].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(546, 512, "shmctl$SHM_UNLOCK", "shmctl", 1, vec![Param::new("shmid", tys[693].clone(), None), Param::new("cmd", tys[205].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(547, 230, "shmdt", "shmdt", 0, vec![Param::new("addr", tys[698].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(548, 231, "shmget", "shmget", 0, vec![Param::new("key", tys[486].clone(), None), Param::new("size", tys[480].clone(), None), Param::new("flags", tys[401].clone(), None), Param::new("unused", tys[715].clone(), None), ], Some(tys[693].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(549, 231, "shmget$private", "shmget", 0, vec![Param::new("key", tys[278].clone(), None), Param::new("size", tys[480].clone(), None), Param::new("flags", tys[401].clone(), None), Param::new("unused", tys[715].clone(), None), ], Some(tys[693].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(550, 134, "shutdown", "shutdown", 0, vec![Param::new("fd", tys[700].clone(), None), Param::new("how", tys[348].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(551, 53, "sigaltstack", "sigaltstack", 0, vec![Param::new("ss", tys[715].clone(), None), Param::new("oss", tys[596].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(552, 97, "socket", "socket", 0, vec![Param::new("domain", tys[350].clone(), None), Param::new("type", tys[351].clone(), None), Param::new("proto", tys[425].clone(), None), ], Some(tys[700].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(553, 97, "socket$inet", "socket", 0, vec![Param::new("domain", tys[212].clone(), None), Param::new("type", tys[351].clone(), None), Param::new("proto", tys[425].clone(), None), ], Some(tys[701].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(554, 97, "socket$inet6", "socket", 0, vec![Param::new("domain", tys[211].clone(), None), Param::new("type", tys[351].clone(), None), Param::new("proto", tys[425].clone(), None), ], Some(tys[702].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(555, 97, "socket$inet6_icmp", "socket", 0, vec![Param::new("domain", tys[211].clone(), None), Param::new("type", tys[212].clone(), None), Param::new("proto", tys[109].clone(), None), ], Some(tys[702].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(556, 97, "socket$inet6_icmp_raw", "socket", 0, vec![Param::new("domain", tys[211].clone(), None), Param::new("type", tys[271].clone(), None), Param::new("proto", tys[109].clone(), None), ], Some(tys[702].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(557, 97, "socket$inet6_sctp", "socket", 0, vec![Param::new("domain", tys[211].clone(), None), Param::new("type", tys[342].clone(), None), Param::new("proto", tys[81].clone(), None), ], Some(tys[704].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(558, 97, "socket$inet6_tcp", "socket", 0, vec![Param::new("domain", tys[211].clone(), None), Param::new("type", tys[209].clone(), None), Param::new("proto", tys[115].clone(), None), ], Some(tys[706].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(559, 97, "socket$inet6_udp", "socket", 0, vec![Param::new("domain", tys[211].clone(), None), Param::new("type", tys[212].clone(), None), Param::new("proto", tys[115].clone(), None), ], Some(tys[708].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(560, 97, "socket$inet6_udplite", "socket", 0, vec![Param::new("domain", tys[211].clone(), None), Param::new("type", tys[212].clone(), None), Param::new("proto", tys[85].clone(), None), ], Some(tys[710].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(561, 97, "socket$inet_icmp", "socket", 0, vec![Param::new("domain", tys[212].clone(), None), Param::new("type", tys[212].clone(), None), Param::new("proto", tys[100].clone(), None), ], Some(tys[701].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(562, 97, "socket$inet_icmp_raw", "socket", 0, vec![Param::new("domain", tys[212].clone(), None), Param::new("type", tys[271].clone(), None), Param::new("proto", tys[100].clone(), None), ], Some(tys[701].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(563, 97, "socket$inet_sctp", "socket", 0, vec![Param::new("domain", tys[212].clone(), None), Param::new("type", tys[342].clone(), None), Param::new("proto", tys[81].clone(), None), ], Some(tys[703].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(564, 97, "socket$inet_tcp", "socket", 0, vec![Param::new("domain", tys[212].clone(), None), Param::new("type", tys[209].clone(), None), Param::new("proto", tys[115].clone(), None), ], Some(tys[705].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(565, 97, "socket$inet_udp", "socket", 0, vec![Param::new("domain", tys[212].clone(), None), Param::new("type", tys[212].clone(), None), Param::new("proto", tys[115].clone(), None), ], Some(tys[707].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(566, 97, "socket$inet_udplite", "socket", 0, vec![Param::new("domain", tys[212].clone(), None), Param::new("type", tys[212].clone(), None), Param::new("proto", tys[85].clone(), None), ], Some(tys[709].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(567, 97, "socket$unix", "socket", 0, vec![Param::new("domain", tys[209].clone(), None), Param::new("type", tys[364].clone(), None), Param::new("proto", tys[115].clone(), None), ], Some(tys[711].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(568, 135, "socketpair", "socketpair", 0, vec![Param::new("domain", tys[350].clone(), None), Param::new("type", tys[351].clone(), None), Param::new("proto", tys[425].clone(), None), Param::new("fds", tys[670].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(569, 135, "socketpair$unix", "socketpair", 0, vec![Param::new("domain", tys[209].clone(), None), Param::new("type", tys[364].clone(), None), Param::new("proto", tys[115].clone(), None), Param::new("fds", tys[671].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(570, 57, "symlink", "symlink", 0, vec![Param::new("old", tys[587].clone(), None), Param::new("new", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(571, 502, "symlinkat", "symlinkat", 0, vec![Param::new("old", tys[587].clone(), None), Param::new("newfd", tys[687].clone(), None), Param::new("new", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(572, 36, "sync", "sync", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(573, 0, "syz_builtin0", "syz_builtin0", 0, vec![Param::new("a", tys[586].clone(), None), ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(574, 0, "syz_builtin1", "syz_builtin1", 0, vec![Param::new("a", tys[672].clone(), None), ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(575, 0, "syz_emit_ethernet", "syz_emit_ethernet", 0, vec![Param::new("len", tys[477].clone(), None), Param::new("packet", tys[590].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_9(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(576, 0, "syz_execute_func", "syz_execute_func", 0, vec![Param::new("text", tys[546].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(577, 0, "syz_extract_tcp_res", "syz_extract_tcp_res", 0, vec![Param::new("res", tys[676].clone(), None), Param::new("seq_inc", tys[413].clone(), None), Param::new("ack_inc", tys[413].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(578, 0, "syz_extract_tcp_res$synack", "syz_extract_tcp_res", 0, vec![Param::new("res", tys[676].clone(), None), Param::new("seq_inc", tys[145].clone(), None), Param::new("ack_inc", tys[199].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(579, 479, "truncate", "truncate", 0, vec![Param::new("file", tys[587].clone(), None), Param::new("len", tys[426].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(580, 205, "undelete", "undelete", 0, vec![Param::new("path", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(581, 10, "unlink", "unlink", 0, vec![Param::new("path", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(582, 503, "unlinkat", "unlinkat", 0, vec![Param::new("fd", tys[687].clone(), None), Param::new("path", tys[587].clone(), None), Param::new("flags", tys[365].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(583, 547, "utimensat", "utimensat", 0, vec![Param::new("dir", tys[687].clone(), None), Param::new("pathname", tys[587].clone(), None), Param::new("times", tys[508].clone(), None), Param::new("flags", tys[366].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(584, 138, "utimes", "utimes", 0, vec![Param::new("filename", tys[587].clone(), None), Param::new("times", tys[508].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(585, 7, "wait4", "wait4", 0, vec![Param::new("pid", tys[696].clone(), None), Param::new("status", tys[592].clone(), None), Param::new("options", tys[367].clone(), None), Param::new("ru", tys[595].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(586, 4, "write", "write", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("buf", tys[553].clone(), None), Param::new("count", tys[462].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(587, 121, "writev", "writev", 0, vec![Param::new("fd", tys[685].clone(), None), Param::new("vec", tys[558].clone(), None), Param::new("vlen", tys[482].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
pub fn syscalls() -> (Vec<Syscall>, Vec<Rc<Type>>){
	let tys = types();
	let mut calls = Vec::new();
	syscalls_0(&mut calls, &tys[..]);
	syscalls_1(&mut calls, &tys[..]);
	syscalls_2(&mut calls, &tys[..]);
	syscalls_3(&mut calls, &tys[..]);
	syscalls_4(&mut calls, &tys[..]);
	syscalls_5(&mut calls, &tys[..]);
	syscalls_6(&mut calls, &tys[..]);
	syscalls_7(&mut calls, &tys[..]);
	syscalls_8(&mut calls, &tys[..]);
	syscalls_9(&mut calls, &tys[..]);
	(calls, tys)
}

fn types_0(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(0, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(115), range:None})));
	tys.push(Rc::new(Type::new(1, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(832), range:None})));
	tys.push(Rc::new(Type::new(2, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(938), range:Some((0, 1))})));
	tys.push(Rc::new(Type::new(3, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(937), range:Some((0, 1))})));
	tys.push(Rc::new(Type::new(4, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(810), range:None})));
	tys.push(Rc::new(Type::new(5, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(801), range:None})));
	tys.push(Rc::new(Type::new(6, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(922), range:None})));
	tys.push(Rc::new(Type::new(7, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(814), range:None})));
	tys.push(Rc::new(Type::new(8, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(775), range:None})));
	tys.push(Rc::new(Type::new(9, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(780), range:None})));
	tys.push(Rc::new(Type::new(10, "array", 0, 2, false, true, TypeKind::Array{elem: TypeRef::Id(408), range:None})));
	tys.push(Rc::new(Type::new(11, "array", 0, 2, false, true, TypeKind::Array{elem: TypeRef::Id(891), range:None})));
	tys.push(Rc::new(Type::new(12, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(413), range:None})));
	tys.push(Rc::new(Type::new(13, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(685), range:None})));
	tys.push(Rc::new(Type::new(14, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(683), range:None})));
	tys.push(Rc::new(Type::new(15, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(689), range:None})));
	tys.push(Rc::new(Type::new(16, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(904), range:None})));
	tys.push(Rc::new(Type::new(17, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(858), range:None})));
	tys.push(Rc::new(Type::new(18, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(723), range:None})));
	tys.push(Rc::new(Type::new(19, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(414), range:None})));
	tys.push(Rc::new(Type::new(20, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(797), range:Some((0, 1))})));
	tys.push(Rc::new(Type::new(21, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(797), range:None})));
	tys.push(Rc::new(Type::new(22, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(498), range:None})));
	tys.push(Rc::new(Type::new(23, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(747), range:None})));
	tys.push(Rc::new(Type::new(24, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(426), range:None})));
	tys.push(Rc::new(Type::new(25, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(839), range:None})));
	tys.push(Rc::new(Type::new(26, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(791), range:None})));
	tys.push(Rc::new(Type::new(27, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(790), range:None})));
	tys.push(Rc::new(Type::new(28, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(722), range:None})));
	tys.push(Rc::new(Type::new(29, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(731), range:None})));
	tys.push(Rc::new(Type::new(30, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(717), range:None})));
	tys.push(Rc::new(Type::new(31, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(823), range:None})));
	tys.push(Rc::new(Type::new(32, "array", 10, 1, false, false, TypeKind::Array{elem: TypeRef::Id(115), range:Some((10, 10))})));
	tys.push(Rc::new(Type::new(33, "array", 12, 1, false, false, TypeKind::Array{elem: TypeRef::Id(115), range:Some((12, 12))})));
	tys.push(Rc::new(Type::new(34, "array", 120, 8, false, false, TypeKind::Array{elem: TypeRef::Id(278), range:Some((15, 15))})));
	tys.push(Rc::new(Type::new(35, "array", 13, 1, false, false, TypeKind::Array{elem: TypeRef::Id(115), range:Some((13, 13))})));
	tys.push(Rc::new(Type::new(36, "array", 16, 1, false, false, TypeKind::Array{elem: TypeRef::Id(115), range:Some((16, 16))})));
	tys.push(Rc::new(Type::new(37, "array", 16, 8, false, false, TypeKind::Array{elem: TypeRef::Id(415), range:Some((2, 2))})));
	tys.push(Rc::new(Type::new(38, "array", 2, 1, false, false, TypeKind::Array{elem: TypeRef::Id(103), range:Some((2, 2))})));
	tys.push(Rc::new(Type::new(39, "array", 3, 1, false, false, TypeKind::Array{elem: TypeRef::Id(115), range:Some((3, 3))})));
	tys.push(Rc::new(Type::new(40, "array", 32, 4, false, false, TypeKind::Array{elem: TypeRef::Id(413), range:Some((8, 8))})));
	tys.push(Rc::new(Type::new(41, "array", 32, 8, false, false, TypeKind::Array{elem: TypeRef::Id(278), range:Some((4, 4))})));
	tys.push(Rc::new(Type::new(42, "array", 32, 8, false, false, TypeKind::Array{elem: TypeRef::Id(415), range:Some((4, 4))})));
	tys.push(Rc::new(Type::new(43, "array", 4, 1, false, false, TypeKind::Array{elem: TypeRef::Id(115), range:Some((4, 4))})));
	tys.push(Rc::new(Type::new(44, "array", 40, 4, false, false, TypeKind::Array{elem: TypeRef::Id(199), range:Some((10, 10))})));
	tys.push(Rc::new(Type::new(45, "array", 5, 1, false, false, TypeKind::Array{elem: TypeRef::Id(93), range:Some((5, 5))})));
	tys.push(Rc::new(Type::new(46, "array", 6, 1, false, false, TypeKind::Array{elem: TypeRef::Id(115), range:Some((6, 6))})));
	tys.push(Rc::new(Type::new(47, "array", 6, 1, false, false, TypeKind::Array{elem: TypeRef::Id(103), range:Some((6, 6))})));
	tys.push(Rc::new(Type::new(48, "array", 64, 8, false, false, TypeKind::Array{elem: TypeRef::Id(415), range:Some((8, 8))})));
	tys.push(Rc::new(Type::new(49, "array", 8, 1, false, false, TypeKind::Array{elem: TypeRef::Id(115), range:Some((8, 8))})));
	tys.push(Rc::new(Type::new(50, "array", 8, 4, false, false, TypeKind::Array{elem: TypeRef::Id(413), range:Some((2, 2))})));
	tys.push(Rc::new(Type::new(51, "array", 8, 8, false, false, TypeKind::Array{elem: TypeRef::Id(415), range:Some((1, 1))})));
	tys.push(Rc::new(Type::new(52, "array", 80, 8, false, false, TypeKind::Array{elem: TypeRef::Id(415), range:Some((10, 10))})));
	tys.push(Rc::new(Type::new(53, "array", 96, 8, false, false, TypeKind::Array{elem: TypeRef::Id(278), range:Some((12, 12))})));
	tys.push(Rc::new(Type::new(54, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRange(0, 16), ""))));
	tys.push(Rc::new(Type::new(55, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRange(0, 8), ""))));
	tys.push(Rc::new(Type::new(56, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRand, ""))));
	tys.push(Rc::new(Type::new(57, "array", 1024, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(1024, 1024), ""))));
	tys.push(Rc::new(Type::new(58, "array", 16, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(16, 16), ""))));
	tys.push(Rc::new(Type::new(59, "array", 240, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(240, 240), ""))));
	tys.push(Rc::new(Type::new(60, "array", 3, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(3, 3), ""))));
	tys.push(Rc::new(Type::new(61, "array", 32, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(32, 32), ""))));
	tys.push(Rc::new(Type::new(62, "array", 6, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(6, 6), ""))));
	tys.push(Rc::new(Type::new(63, "filename", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))));
}
fn types_1(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(64, "string", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_str(vec![br##"cdg\x00"##, br##"chd\x00"##, br##"cubic\x00"##, br##"dctcp\x00"##, br##"hd\x00"##, br##"htcp\x00"##, br##"newreno\x00"##, br##"vegas\x00"##, ], false), "tcp_congestion_control_alg_names"))));
	tys.push(Rc::new(Type::new(65, "string", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_str(vec![], false), ""))));
	tys.push(Rc::new(Type::new(66, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"accf_data\x00\x00\x00\x00\x00\x00\x00"##, br##"accf_dns\x00\x00\x00\x00\x00\x00\x00\x00"##, br##"accf_http\x00\x00\x00\x00\x00\x00\x00"##, ], false), "accept_filter_names"))));
	tys.push(Rc::new(Type::new(67, "string", 32, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"freebsd\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"##, br##"rack\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"##, br##"bbr\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"##, ], false), "tcp_function_set_names"))));
	tys.push(Rc::new(Type::new(68, "string", 8, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/pf\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(69, "text", 0, 1, false, true, TypeKind::new_buffer(BufferKind::Text(TextKind::Target),""))));
	tys.push(Rc::new(Type::new(70, "close_range_flags", 8, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(71, "const", 0, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 1, bitfield_len: 2, bitfield_unit: 1, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(72, "const", 0, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 1, bitfield_len: 3, bitfield_unit: 1, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(73, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, val: 4, pad: false})));
	tys.push(Rc::new(Type::new(74, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, val: 6, pad: false})));
	tys.push(Rc::new(Type::new(75, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 11, pad: false})));
	tys.push(Rc::new(Type::new(76, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 128, pad: false})));
	tys.push(Rc::new(Type::new(77, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 129, pad: false})));
	tys.push(Rc::new(Type::new(78, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 12, pad: false})));
	tys.push(Rc::new(Type::new(79, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 130, pad: false})));
	tys.push(Rc::new(Type::new(80, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 131, pad: false})));
	tys.push(Rc::new(Type::new(81, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 132, pad: false})));
	tys.push(Rc::new(Type::new(82, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 133, pad: false})));
	tys.push(Rc::new(Type::new(83, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 134, pad: false})));
	tys.push(Rc::new(Type::new(84, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 135, pad: false})));
	tys.push(Rc::new(Type::new(85, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 136, pad: false})));
	tys.push(Rc::new(Type::new(86, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 137, pad: false})));
	tys.push(Rc::new(Type::new(87, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 13, pad: false})));
	tys.push(Rc::new(Type::new(88, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 143, pad: false})));
	tys.push(Rc::new(Type::new(89, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 148, pad: false})));
	tys.push(Rc::new(Type::new(90, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 14, pad: false})));
	tys.push(Rc::new(Type::new(91, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 15, pad: false})));
	tys.push(Rc::new(Type::new(92, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 16, pad: false})));
	tys.push(Rc::new(Type::new(93, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 170, pad: false})));
	tys.push(Rc::new(Type::new(94, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 172, pad: false})));
	tys.push(Rc::new(Type::new(95, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 17, pad: false})));
	tys.push(Rc::new(Type::new(96, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 187, pad: false})));
	tys.push(Rc::new(Type::new(97, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 18, pad: false})));
	tys.push(Rc::new(Type::new(98, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 194, pad: false})));
	tys.push(Rc::new(Type::new(99, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 19, pad: false})));
	tys.push(Rc::new(Type::new(100, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(101, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 20, pad: false})));
	tys.push(Rc::new(Type::new(102, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 254, pad: false})));
	tys.push(Rc::new(Type::new(103, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 255, pad: false})));
	tys.push(Rc::new(Type::new(104, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 28, pad: false})));
	tys.push(Rc::new(Type::new(105, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})));
	tys.push(Rc::new(Type::new(106, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 34, pad: false})));
	tys.push(Rc::new(Type::new(107, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3, pad: false})));
	tys.push(Rc::new(Type::new(108, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4, pad: false})));
	tys.push(Rc::new(Type::new(109, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 58, pad: false})));
	tys.push(Rc::new(Type::new(110, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5, pad: false})));
	tys.push(Rc::new(Type::new(111, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 68, pad: false})));
	tys.push(Rc::new(Type::new(112, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6, pad: false})));
	tys.push(Rc::new(Type::new(113, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7, pad: false})));
	tys.push(Rc::new(Type::new(114, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8, pad: false})));
	tys.push(Rc::new(Type::new(115, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(116, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(117, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2048, pad: false})));
	tys.push(Rc::new(Type::new(118, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2054, pad: false})));
	tys.push(Rc::new(Type::new(119, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 33024, pad: false})));
	tys.push(Rc::new(Type::new(120, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 34525, pad: false})));
	tys.push(Rc::new(Type::new(121, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 34984, pad: false})));
	tys.push(Rc::new(Type::new(122, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(123, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2130706433, pad: false})));
	tys.push(Rc::new(Type::new(124, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3758096385, pad: false})));
	tys.push(Rc::new(Type::new(125, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3758096386, pad: false})));
	tys.push(Rc::new(Type::new(126, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4294967295, pad: false})));
	tys.push(Rc::new(Type::new(127, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
}
fn types_2(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(128, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1025, pad: false})));
	tys.push(Rc::new(Type::new(129, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 102, pad: false})));
	tys.push(Rc::new(Type::new(130, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 104, pad: false})));
	tys.push(Rc::new(Type::new(131, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 105, pad: false})));
	tys.push(Rc::new(Type::new(132, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 10, pad: false})));
	tys.push(Rc::new(Type::new(133, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 11, pad: false})));
	tys.push(Rc::new(Type::new(134, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 128, pad: false})));
	tys.push(Rc::new(Type::new(135, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 12, pad: false})));
	tys.push(Rc::new(Type::new(136, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 132, pad: false})));
	tys.push(Rc::new(Type::new(137, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 136, pad: false})));
	tys.push(Rc::new(Type::new(138, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 13, pad: false})));
	tys.push(Rc::new(Type::new(139, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 14, pad: false})));
	tys.push(Rc::new(Type::new(140, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 15, pad: false})));
	tys.push(Rc::new(Type::new(141, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 16, pad: false})));
	tys.push(Rc::new(Type::new(142, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 17, pad: false})));
	tys.push(Rc::new(Type::new(143, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 18, pad: false})));
	tys.push(Rc::new(Type::new(144, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 19, pad: false})));
	tys.push(Rc::new(Type::new(145, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(146, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 20, pad: false})));
	tys.push(Rc::new(Type::new(147, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 21, pad: false})));
	tys.push(Rc::new(Type::new(148, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 22, pad: false})));
	tys.push(Rc::new(Type::new(149, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2304, pad: false})));
	tys.push(Rc::new(Type::new(150, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2305, pad: false})));
	tys.push(Rc::new(Type::new(151, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2306, pad: false})));
	tys.push(Rc::new(Type::new(152, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2307, pad: false})));
	tys.push(Rc::new(Type::new(153, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 24, pad: false})));
	tys.push(Rc::new(Type::new(154, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 256, pad: false})));
	tys.push(Rc::new(Type::new(155, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 257, pad: false})));
	tys.push(Rc::new(Type::new(156, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 258, pad: false})));
	tys.push(Rc::new(Type::new(157, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 259, pad: false})));
	tys.push(Rc::new(Type::new(158, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 25, pad: false})));
	tys.push(Rc::new(Type::new(159, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 260, pad: false})));
	tys.push(Rc::new(Type::new(160, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 261, pad: false})));
	tys.push(Rc::new(Type::new(161, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 263, pad: false})));
	tys.push(Rc::new(Type::new(162, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 264, pad: false})));
	tys.push(Rc::new(Type::new(163, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 26, pad: false})));
	tys.push(Rc::new(Type::new(164, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 27, pad: false})));
	tys.push(Rc::new(Type::new(165, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 28, pad: false})));
	tys.push(Rc::new(Type::new(166, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 29, pad: false})));
	tys.push(Rc::new(Type::new(167, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})));
	tys.push(Rc::new(Type::new(168, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 30, pad: false})));
	tys.push(Rc::new(Type::new(169, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 31, pad: false})));
	tys.push(Rc::new(Type::new(170, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 32769, pad: false})));
	tys.push(Rc::new(Type::new(171, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 32770, pad: false})));
	tys.push(Rc::new(Type::new(172, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 32771, pad: false})));
	tys.push(Rc::new(Type::new(173, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 32772, pad: false})));
	tys.push(Rc::new(Type::new(174, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 32775, pad: false})));
	tys.push(Rc::new(Type::new(175, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 32, pad: false})));
	tys.push(Rc::new(Type::new(176, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 33, pad: false})));
	tys.push(Rc::new(Type::new(177, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 34, pad: false})));
	tys.push(Rc::new(Type::new(178, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 35, pad: false})));
	tys.push(Rc::new(Type::new(179, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 38, pad: false})));
	tys.push(Rc::new(Type::new(180, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3, pad: false})));
	tys.push(Rc::new(Type::new(181, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4096, pad: false})));
	tys.push(Rc::new(Type::new(182, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 41, pad: false})));
	tys.push(Rc::new(Type::new(183, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 46, pad: false})));
	tys.push(Rc::new(Type::new(184, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 49, pad: false})));
	tys.push(Rc::new(Type::new(185, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4, pad: false})));
	tys.push(Rc::new(Type::new(186, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 50, pad: false})));
	tys.push(Rc::new(Type::new(187, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 51, pad: false})));
	tys.push(Rc::new(Type::new(188, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5, pad: false})));
	tys.push(Rc::new(Type::new(189, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 64, pad: false})));
	tys.push(Rc::new(Type::new(190, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 65535, pad: false})));
	tys.push(Rc::new(Type::new(191, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6, pad: false})));
}
fn types_3(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(192, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 74, pad: false})));
	tys.push(Rc::new(Type::new(193, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7, pad: false})));
	tys.push(Rc::new(Type::new(194, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 80, pad: false})));
	tys.push(Rc::new(Type::new(195, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8192, pad: false})));
	tys.push(Rc::new(Type::new(196, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 81, pad: false})));
	tys.push(Rc::new(Type::new(197, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8, pad: false})));
	tys.push(Rc::new(Type::new(198, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 9, pad: false})));
	tys.push(Rc::new(Type::new(199, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(200, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(201, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(202, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1076913765, pad: false})));
	tys.push(Rc::new(Type::new(203, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 10, pad: false})));
	tys.push(Rc::new(Type::new(204, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 11, pad: false})));
	tys.push(Rc::new(Type::new(205, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 12, pad: false})));
	tys.push(Rc::new(Type::new(206, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 13, pad: false})));
	tys.push(Rc::new(Type::new(207, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 14, pad: false})));
	tys.push(Rc::new(Type::new(208, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 18446744073709551516, pad: false})));
	tys.push(Rc::new(Type::new(209, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(210, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2150655588, pad: false})));
	tys.push(Rc::new(Type::new(211, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 28, pad: false})));
	tys.push(Rc::new(Type::new(212, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})));
	tys.push(Rc::new(Type::new(213, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3221767197, pad: false})));
	tys.push(Rc::new(Type::new(214, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3221767198, pad: false})));
	tys.push(Rc::new(Type::new(215, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3221767207, pad: false})));
	tys.push(Rc::new(Type::new(216, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3221767208, pad: false})));
	tys.push(Rc::new(Type::new(217, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222291476, pad: false})));
	tys.push(Rc::new(Type::new(218, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222291481, pad: false})));
	tys.push(Rc::new(Type::new(219, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222291537, pad: false})));
	tys.push(Rc::new(Type::new(220, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222291538, pad: false})));
	tys.push(Rc::new(Type::new(221, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222291539, pad: false})));
	tys.push(Rc::new(Type::new(222, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222291540, pad: false})));
	tys.push(Rc::new(Type::new(223, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222815794, pad: false})));
	tys.push(Rc::new(Type::new(224, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3223340082, pad: false})));
	tys.push(Rc::new(Type::new(225, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3223864407, pad: false})));
	tys.push(Rc::new(Type::new(226, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3223864409, pad: false})));
	tys.push(Rc::new(Type::new(227, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3223864410, pad: false})));
	tys.push(Rc::new(Type::new(228, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3226223639, pad: false})));
	tys.push(Rc::new(Type::new(229, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3229631579, pad: false})));
	tys.push(Rc::new(Type::new(230, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3230155855, pad: false})));
	tys.push(Rc::new(Type::new(231, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3230155856, pad: false})));
	tys.push(Rc::new(Type::new(232, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3235922962, pad: false})));
	tys.push(Rc::new(Type::new(233, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3235922985, pad: false})));
	tys.push(Rc::new(Type::new(234, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3237102611, pad: false})));
	tys.push(Rc::new(Type::new(235, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3237102629, pad: false})));
	tys.push(Rc::new(Type::new(236, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3238020141, pad: false})));
	tys.push(Rc::new(Type::new(237, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3238020143, pad: false})));
	tys.push(Rc::new(Type::new(238, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3238020144, pad: false})));
	tys.push(Rc::new(Type::new(239, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3238020145, pad: false})));
	tys.push(Rc::new(Type::new(240, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3241165869, pad: false})));
	tys.push(Rc::new(Type::new(241, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3241165871, pad: false})));
	tys.push(Rc::new(Type::new(242, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3241165872, pad: false})));
	tys.push(Rc::new(Type::new(243, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3241165873, pad: false})));
	tys.push(Rc::new(Type::new(244, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3248505877, pad: false})));
	tys.push(Rc::new(Type::new(245, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3292808250, pad: false})));
	tys.push(Rc::new(Type::new(246, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3292808251, pad: false})));
	tys.push(Rc::new(Type::new(247, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594684, pad: false})));
	tys.push(Rc::new(Type::new(248, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594685, pad: false})));
	tys.push(Rc::new(Type::new(249, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594686, pad: false})));
	tys.push(Rc::new(Type::new(250, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594687, pad: false})));
	tys.push(Rc::new(Type::new(251, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594688, pad: false})));
	tys.push(Rc::new(Type::new(252, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594689, pad: false})));
	tys.push(Rc::new(Type::new(253, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594691, pad: false})));
	tys.push(Rc::new(Type::new(254, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594692, pad: false})));
	tys.push(Rc::new(Type::new(255, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594693, pad: false})));
}
fn types_4(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(256, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594694, pad: false})));
	tys.push(Rc::new(Type::new(257, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594695, pad: false})));
	tys.push(Rc::new(Type::new(258, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594696, pad: false})));
	tys.push(Rc::new(Type::new(259, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594697, pad: false})));
	tys.push(Rc::new(Type::new(260, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594698, pad: false})));
	tys.push(Rc::new(Type::new(261, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3293594701, pad: false})));
	tys.push(Rc::new(Type::new(262, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3295691827, pad: false})));
	tys.push(Rc::new(Type::new(263, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3295691828, pad: false})));
	tys.push(Rc::new(Type::new(264, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3295691829, pad: false})));
	tys.push(Rc::new(Type::new(265, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3295691830, pad: false})));
	tys.push(Rc::new(Type::new(266, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3295691831, pad: false})));
	tys.push(Rc::new(Type::new(267, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3420472324, pad: false})));
	tys.push(Rc::new(Type::new(268, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3420472326, pad: false})));
	tys.push(Rc::new(Type::new(269, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3420472327, pad: false})));
	tys.push(Rc::new(Type::new(270, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3420472346, pad: false})));
	tys.push(Rc::new(Type::new(271, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3, pad: false})));
	tys.push(Rc::new(Type::new(272, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4, pad: false})));
	tys.push(Rc::new(Type::new(273, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5, pad: false})));
	tys.push(Rc::new(Type::new(274, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6, pad: false})));
	tys.push(Rc::new(Type::new(275, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7, pad: false})));
	tys.push(Rc::new(Type::new(276, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8, pad: false})));
	tys.push(Rc::new(Type::new(277, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 9, pad: false})));
	tys.push(Rc::new(Type::new(278, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(279, "copy_file_range_flags", 8, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(280, "pad", 1, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(281, "pad", 2, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(282, "pad", 3, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(283, "pad", 4, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(284, "pad", 7, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(285, "realpathat_flags", 8, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(286, "csum", 2, 2, false, false, TypeKind::new_csum(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, CsumKind::Inet, Some(r##"parent"##), 0))));
	tys.push(Rc::new(Type::new(287, "csum", 2, 2, false, false, TypeKind::new_csum(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, CsumKind::Pseudo, Some(r##"parent"##), 17))));
	tys.push(Rc::new(Type::new(288, "csum", 2, 2, false, false, TypeKind::new_csum(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, CsumKind::Pseudo, Some(r##"parent"##), 58))));
	tys.push(Rc::new(Type::new(289, "csum", 2, 2, false, false, TypeKind::new_csum(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, CsumKind::Pseudo, Some(r##"tcp_packet"##), 6))));
	tys.push(Rc::new(Type::new(290, "arp_hrds", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 6, 15, 24, 32, ], false))));
	tys.push(Rc::new(Type::new(291, "arp_ops", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 8, 9, ], false))));
	tys.push(Rc::new(Type::new(292, "clock_id", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 4, 14, 15, ], false))));
	tys.push(Rc::new(Type::new(293, "cmsg_levels", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 6, 17, 41, 58, 132, 136, 65535, ], false))));
	tys.push(Rc::new(Type::new(294, "conf_value", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 21, 53, 54, 55, 59, 60, 61, 62, 63, 64, ], false))));
	tys.push(Rc::new(Type::new(295, "cpuset_level", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(296, "cpuset_which", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 7, 8, ], false))));
	tys.push(Rc::new(Type::new(297, "domainset_policy", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(298, "domainset_policy", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(299, "ether_types", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4, 512, 512, 1280, 1536, 1537, 1632, 1633, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2304, 2560, 2561, 2989, 2990, 2991, 4660, 5632, 6537, 6549, 15360, 15361, 15362, 15363, 15364, 15365, 15366, 15367, 15368, 15369, 15370, 15371, 15372, 15373, 16962, 16972, 17185, 19522, 21000, 24576, 24577, 24578, 24579, 24580, 24581, 24582, 24583, 24584, 24585, 25944, 25945, 28672, 28673, 28674, 28675, 28677, 28679, 28681, 28720, 28721, 28724, 32771, 32772, 32773, 32774, 32776, 32784, 32787, 32788, 32789, 32790, 32793, 32814, 32815, 32821, 32822, 32823, 32824, 32825, 32826, 32827, 32828, 32829, 32830, 32831, 32832, 32833, 32836, 32840, 32841, 32859, 32860, 32861, 32864, 32866, 32871, 32872, 32873, 32874, 32876, 32877, 32890, 32891, 32892, 32896, 32923, 32927, 32966, 32967, 32981, 32989, 33010, 33011, 33015, 33024, 33026, 33027, 33067, 33072, 33072, 33073, 33079, 33080, 33087, 33093, 33094, 33095, 33096, 33097, 33098, 33100, 33103, 33104, 33149, 33150, 33152, 33153, 33165, 33169, 33680, 34091, 34178, 34523, 34525, 34526, 34527, 34617, 34618, 34667, 34668, 34669, 34824, 34825, 34827, 34848, 34850, 34887, 34888, 34902, 34915, 34916, 34952, 34958, 34984, 36864, 36865, 36866, 36867, 43690, 64245, 65280, ], false))));
	tys.push(Rc::new(Type::new(300, "fadvise_advice", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, ], false))));
	tys.push(Rc::new(Type::new(301, "fcntl_dupfd", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 17, ], false))));
	tys.push(Rc::new(Type::new(302, "fcntl_getflags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 3, ], false))));
	tys.push(Rc::new(Type::new(303, "fcntl_lock", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![11, 12, 13, ], false))));
	tys.push(Rc::new(Type::new(304, "fflags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 1, 1, 1, 2, 2, 2, 4, 4, 8, 8, 16, 16, 32, 64, 128, 256, 512, 1024, 16777215, 16777216, 536870912, 1073741824, 1073741824, 2147483648, 2147483648, 3221225472, 3221225472, ], false))));
	tys.push(Rc::new(Type::new(305, "filters", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![18446744073709551603, 18446744073709551605, 18446744073709551608, 18446744073709551609, 18446744073709551610, 18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614, 18446744073709551615, ], false))));
	tys.push(Rc::new(Type::new(306, "flock_type", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(307, "getitimer_which", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(308, "hop_limits", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 255, ], false))));
	tys.push(Rc::new(Type::new(309, "icmp_dest_unreach_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, ], false))));
	tys.push(Rc::new(Type::new(310, "icmp_parameter_prob_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(311, "icmp_redirect_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(312, "icmp_time_exceeded_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(313, "icmp_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 30, 31, 32, 33, 34, 35, 36, 39, 40, ], false))));
	tys.push(Rc::new(Type::new(314, "icmpv6_dest_unreach_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 2, 3, 4, 5, 6, 7, ], false))));
	tys.push(Rc::new(Type::new(315, "icmpv6_mld_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![130, 131, 132, ], false))));
	tys.push(Rc::new(Type::new(316, "icmpv6_ndisc_option_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 14, 24, 25, 31, ], false))));
	tys.push(Rc::new(Type::new(317, "icmpv6_ni_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![139, 140, ], false))));
	tys.push(Rc::new(Type::new(318, "icmpv6_param_prob_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(319, "icmpv6_time_exceed_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
}
fn types_5(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(320, "inet6_option_types_buf", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![25, 28, 35, 44, 46, 49, 50, 51, 80, 81, 82, 83, 84, 85, 102, 104, 105, ], false))));
	tys.push(Rc::new(Type::new(321, "inet6_option_types_int", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4, 9, 10, 11, 19, 20, 22, 23, 24, 26, 27, 36, 37, 38, 39, 40, 43, 47, 48, 57, 59, 61, 62, 72, ], false))));
	tys.push(Rc::new(Type::new(322, "inet_option_types_buf", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 9, 12, 13, 21, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, ], false))));
	tys.push(Rc::new(Type::new(323, "inet_option_types_int", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2, 3, 4, 5, 8, 27, 65, 66, 68, ], false))));
	tys.push(Rc::new(Type::new(324, "ipv4_option_timestamp_flags", 0, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, vec![0, 1, 3, ], false))));
	tys.push(Rc::new(Type::new(325, "ipv4_option_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 7, 68, 130, 131, 133, 134, 136, 137, 148, ], false))));
	tys.push(Rc::new(Type::new(326, "ipv4_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 108, 108, 112, 113, 135, 136, 137, 139, 140, 240, ], false))));
	tys.push(Rc::new(Type::new(327, "ipv6_routing_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 0, 1, ], false))));
	tys.push(Rc::new(Type::new(328, "ipv6_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 108, 108, 112, 113, 135, 136, 137, 139, 140, 240, ], false))));
	tys.push(Rc::new(Type::new(329, "madvise_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ], false))));
	tys.push(Rc::new(Type::new(330, "minherit_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(331, "mknod_mode", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 4096, 8192, 24576, 32768, 49152, ], false))));
	tys.push(Rc::new(Type::new(332, "mmap_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 16, 1024, 4096, 524288, ], false))));
	tys.push(Rc::new(Type::new(333, "msgbuf_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(334, "msync_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(335, "oflags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, 512, 2048, ], false))));
	tys.push(Rc::new(Type::new(336, "open_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, 8, 64, 128, 256, 512, 1024, 2048, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, ], false))));
	tys.push(Rc::new(Type::new(337, "pollfd_events", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 4, 8, 16, 32, 64, 128, 256, 8192, ], false))));
	tys.push(Rc::new(Type::new(338, "rlimit_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 10, ], false))));
	tys.push(Rc::new(Type::new(339, "rusage_who", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 18446744073709551615, ], false))));
	tys.push(Rc::new(Type::new(340, "sctp_event_types", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, ], false))));
	tys.push(Rc::new(Type::new(341, "sctp_pr_policies", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 15, ], false))));
	tys.push(Rc::new(Type::new(342, "sctp_socket_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 5, ], false))));
	tys.push(Rc::new(Type::new(343, "seek_whence", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(344, "seek_whence", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(345, "sem_sem_id", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(346, "sem_sem_id", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(347, "shm_open_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 2, 512, 1024, 2048, ], false))));
	tys.push(Rc::new(Type::new(348, "shutdown_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(349, "sigev_notify", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(350, "socket_domain", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 16, 23, 28, ], false))));
	tys.push(Rc::new(Type::new(351, "socket_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 268435456, 536870912, ], false))));
	tys.push(Rc::new(Type::new(352, "sockopt_opt_ip_group_source_req", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![82, 83, 84, 85, ], false))));
	tys.push(Rc::new(Type::new(353, "sockopt_opt_ip_mreq", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![9, 12, 13, ], false))));
	tys.push(Rc::new(Type::new(354, "sockopt_opt_ip_mreqsrc", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![70, 71, 72, 73, ], false))));
	tys.push(Rc::new(Type::new(355, "sockopt_opt_ipv6_group_source_req", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![82, 83, 84, 85, ], false))));
	tys.push(Rc::new(Type::new(356, "sockopt_opt_sock_int", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 256, 512, 1024, 2048, 4097, 4098, 4099, 4100, 4103, 4104, 4113, 4114, 4115, 4116, 4117, 4118, 4118, 4119, 4120, 4121, 8192, 16384, 32768, 65536, ], false))));
	tys.push(Rc::new(Type::new(357, "sockopt_opt_sock_timeval", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4101, 4102, ], false))));
	tys.push(Rc::new(Type::new(358, "tcp_flags", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, 8, 16, 32, 64, 128, ], false))));
	tys.push(Rc::new(Type::new(359, "tcp_option_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 8, 19, 34, ], false))));
	tys.push(Rc::new(Type::new(360, "tcp_option_types_buf", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![32, 35, 36, 37, 38, 64, 65, 1025, 8192, ], false))));
	tys.push(Rc::new(Type::new(361, "tcp_option_types_int", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 34, 72, 128, 256, 512, 1024, 2048, 4096, ], false))));
	tys.push(Rc::new(Type::new(362, "timer_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(363, "unix_socket_family", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(364, "unix_socket_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 5, ], false))));
	tys.push(Rc::new(Type::new(365, "unlinkat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 2048, ], false))));
	tys.push(Rc::new(Type::new(366, "utimensat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 512, ], false))));
	tys.push(Rc::new(Type::new(367, "wait_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 1, 2, 2, 4, 4, 8, 16, ], false))));
	tys.push(Rc::new(Type::new(368, "accept_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![268435456, 536870912, ], true))));
	tys.push(Rc::new(Type::new(369, "at_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![512, 1024, ], true))));
	tys.push(Rc::new(Type::new(370, "attrnamespace_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(371, "chflags_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 128, 256, 512, 1024, 2048, 4096, 32768, 65536, 131072, 262144, 1048576, 2097152, ], true))));
	tys.push(Rc::new(Type::new(372, "evflags", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 16384, 32768, ], true))));
	tys.push(Rc::new(Type::new(373, "faccessat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![256, 512, 1024, 2048, 4096, ], true))));
	tys.push(Rc::new(Type::new(374, "fcntl_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(375, "fcntl_status", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4, 8, 64, 65536, ], true))));
	tys.push(Rc::new(Type::new(376, "flock_op", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, ], true))));
	tys.push(Rc::new(Type::new(377, "getfhat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![512, 4096, ], true))));
	tys.push(Rc::new(Type::new(378, "ip_msfilter_mode", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(379, "ksem_oflag", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![512, 2048, ], true))));
	tys.push(Rc::new(Type::new(380, "linkat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1024, ], true))));
	tys.push(Rc::new(Type::new(381, "mif6c_flags", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(382, "mlockall_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(383, "mmap_prot", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, ], true))));
}
fn types_6(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(384, "msgget_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, ], true))));
	tys.push(Rc::new(Type::new(385, "msgrcv_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2048, 4096, ], true))));
	tys.push(Rc::new(Type::new(386, "msgsnd_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2048, ], true))));
	tys.push(Rc::new(Type::new(387, "open_mode", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, ], true))));
	tys.push(Rc::new(Type::new(388, "open_mode", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, ], true))));
	tys.push(Rc::new(Type::new(389, "pipe_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4, 1048576, ], true))));
	tys.push(Rc::new(Type::new(390, "recv_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 64, 128, 262144, ], true))));
	tys.push(Rc::new(Type::new(391, "sctp_sndrcv_flags", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![16, 32, 256, 512, 1024, 2048, 4096, 8192, 16384, ], true))));
	tys.push(Rc::new(Type::new(392, "sctp_spp_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 128, 256, 512, ], true))));
	tys.push(Rc::new(Type::new(393, "semget_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, ], true))));
	tys.push(Rc::new(Type::new(394, "semop_flags", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2048, 4096, ], true))));
	tys.push(Rc::new(Type::new(395, "send_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 4, 8, 128, 256, 131072, ], true))));
	tys.push(Rc::new(Type::new(396, "send_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 4, 8, 128, 256, 131072, ], true))));
	tys.push(Rc::new(Type::new(397, "sf_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 4, 8, 16, ], true))));
	tys.push(Rc::new(Type::new(398, "shm_open2_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, ], true))));
	tys.push(Rc::new(Type::new(399, "shm_rename_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(400, "shmat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4096, 8192, ], true))));
	tys.push(Rc::new(Type::new(401, "shmget_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, ], true))));
	tys.push(Rc::new(Type::new(402, "sockopt_opt_ip_opts", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(403, "udp_option_types", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(404, "udplite_option_types", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2, 4, ], true))));
	tys.push(Rc::new(Type::new(405, "int16", 0, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 3, bitfield_unit: 2, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(406, "int16", 0, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 3, bitfield_len: 1, bitfield_unit: 2, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(407, "int16", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 12, bitfield_unit: 2, bitfield_unit_off: 0}, range: Some((0, 4)), align: 0})));
	tys.push(Rc::new(Type::new(408, "int16", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(409, "int16be", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((100, 104)), align: 0})));
	tys.push(Rc::new(Type::new(410, "int16be", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(411, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((100, 104)), align: 0})));
	tys.push(Rc::new(Type::new(412, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((0, 33)), align: 0})));
	tys.push(Rc::new(Type::new(413, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(414, "int32be", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(415, "int64", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(416, "int64be", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(417, "int8", 0, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 1, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(418, "int8", 0, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 2, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(419, "int8", 0, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 3, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(420, "int8", 0, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(421, "int8", 0, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 3, bitfield_len: 1, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(422, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 2, bitfield_len: 6, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(423, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 3, bitfield_len: 5, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(424, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(425, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(426, "intptr", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(427, "bytesize", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["msg_control", ]))));
	tys.push(Rc::new(Type::new(428, "bytesize", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["ctrl", ]))));
	tys.push(Rc::new(Type::new(429, "bytesize", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["mask", ]))));
	tys.push(Rc::new(Type::new(430, "bytesize", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["msg_control", ]))));
	tys.push(Rc::new(Type::new(431, "bytesize4", 0, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, 32, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(432, "bytesize4", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, 32, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(433, "bytesize8", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 64, false, vec!["data", ]))));
	tys.push(Rc::new(Type::new(434, "bytesize8", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 64, false, vec!["options", ]))));
	tys.push(Rc::new(Type::new(435, "bytesize8", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 64, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(436, "len", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["ar_spa", ]))));
	tys.push(Rc::new(Type::new(437, "len", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["aux", ]))));
	tys.push(Rc::new(Type::new(438, "len", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["data", ]))));
	tys.push(Rc::new(Type::new(439, "len", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["pad", ]))));
	tys.push(Rc::new(Type::new(440, "len", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(441, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["grec", ]))));
	tys.push(Rc::new(Type::new(442, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["ipv4_packet", ]))));
	tys.push(Rc::new(Type::new(443, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(444, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["payload", ]))));
	tys.push(Rc::new(Type::new(445, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["srcs", ]))));
	tys.push(Rc::new(Type::new(446, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["sca_key", ]))));
	tys.push(Rc::new(Type::new(447, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["srs_stream_list", ]))));
}
fn types_7(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(448, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["addr", ]))));
	tys.push(Rc::new(Type::new(449, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["gaids_assoc_id", ]))));
	tys.push(Rc::new(Type::new(450, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["gauth_chunks", ]))));
	tys.push(Rc::new(Type::new(451, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["headers", ]))));
	tys.push(Rc::new(Type::new(452, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["imsf_slist", ]))));
	tys.push(Rc::new(Type::new(453, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msg_iov", ]))));
	tys.push(Rc::new(Type::new(454, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msg_name", ]))));
	tys.push(Rc::new(Type::new(455, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["optval", ]))));
	tys.push(Rc::new(Type::new(456, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(457, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["peer", ]))));
	tys.push(Rc::new(Type::new(458, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["shmac_idents", ]))));
	tys.push(Rc::new(Type::new(459, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["trailers", ]))));
	tys.push(Rc::new(Type::new(460, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["val", ]))));
	tys.push(Rc::new(Type::new(461, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["addr", ]))));
	tys.push(Rc::new(Type::new(462, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["buf", ]))));
	tys.push(Rc::new(Type::new(463, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["changelist", ]))));
	tys.push(Rc::new(Type::new(464, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["cmds", ]))));
	tys.push(Rc::new(Type::new(465, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["data", ]))));
	tys.push(Rc::new(Type::new(466, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["ent", ]))));
	tys.push(Rc::new(Type::new(467, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["eventlist", ]))));
	tys.push(Rc::new(Type::new(468, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["fds", ]))));
	tys.push(Rc::new(Type::new(469, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["inp", ]))));
	tys.push(Rc::new(Type::new(470, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["list", ]))));
	tys.push(Rc::new(Type::new(471, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msg", ]))));
	tys.push(Rc::new(Type::new(472, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msg_control", ]))));
	tys.push(Rc::new(Type::new(473, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msg_iov", ]))));
	tys.push(Rc::new(Type::new(474, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msgp", ]))));
	tys.push(Rc::new(Type::new(475, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["ops", ]))));
	tys.push(Rc::new(Type::new(476, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["optval", ]))));
	tys.push(Rc::new(Type::new(477, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["packet", ]))));
	tys.push(Rc::new(Type::new(478, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(479, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["sigmask", ]))));
	tys.push(Rc::new(Type::new(480, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["unused", ]))));
	tys.push(Rc::new(Type::new(481, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["val", ]))));
	tys.push(Rc::new(Type::new(482, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["vec", ]))));
	tys.push(Rc::new(Type::new(483, "proc", 1, 1, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 0, per_proc: 1})));
	tys.push(Rc::new(Type::new(484, "proc", 2, 2, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 20000, per_proc: 4})));
	tys.push(Rc::new(Type::new(485, "proc", 4, 4, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 20000, per_proc: 4})));
	tys.push(Rc::new(Type::new(486, "proc", 8, 8, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 2039339027, per_proc: 4})));
	tys.push(Rc::new(Type::new(487, "proc", 8, 8, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 2039359027, per_proc: 4})));
	tys.push(Rc::new(Type::new(488, "proc", 8, 8, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 2039379027, per_proc: 4})));
	tys.push(Rc::new(Type::new(489, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(931)})));
	tys.push(Rc::new(Type::new(490, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(897)})));
	tys.push(Rc::new(Type::new(491, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(909)})));
	tys.push(Rc::new(Type::new(492, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(18)})));
	tys.push(Rc::new(Type::new(493, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(29)})));
	tys.push(Rc::new(Type::new(494, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(902)})));
	tys.push(Rc::new(Type::new(495, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(903)})));
	tys.push(Rc::new(Type::new(496, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(905)})));
	tys.push(Rc::new(Type::new(497, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(413)})));
	tys.push(Rc::new(Type::new(498, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(65)})));
	tys.push(Rc::new(Type::new(499, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(24)})));
	tys.push(Rc::new(Type::new(500, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(931)})));
	tys.push(Rc::new(Type::new(501, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(734)})));
	tys.push(Rc::new(Type::new(502, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(735)})));
	tys.push(Rc::new(Type::new(503, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(22)})));
	tys.push(Rc::new(Type::new(504, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(746)})));
	tys.push(Rc::new(Type::new(505, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(744)})));
	tys.push(Rc::new(Type::new(506, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(23)})));
	tys.push(Rc::new(Type::new(507, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(932)})));
	tys.push(Rc::new(Type::new(508, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(838)})));
	tys.push(Rc::new(Type::new(509, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(15)})));
	tys.push(Rc::new(Type::new(510, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(860)})));
	tys.push(Rc::new(Type::new(511, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(887)})));
}
fn types_8(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(512, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(683)})));
	tys.push(Rc::new(Type::new(513, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(865)})));
	tys.push(Rc::new(Type::new(514, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(870)})));
	tys.push(Rc::new(Type::new(515, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(864)})));
	tys.push(Rc::new(Type::new(516, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(872)})));
	tys.push(Rc::new(Type::new(517, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(889)})));
	tys.push(Rc::new(Type::new(518, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(888)})));
	tys.push(Rc::new(Type::new(519, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(886)})));
	tys.push(Rc::new(Type::new(520, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(873)})));
	tys.push(Rc::new(Type::new(521, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(874)})));
	tys.push(Rc::new(Type::new(522, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(904)})));
	tys.push(Rc::new(Type::new(523, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(16)})));
	tys.push(Rc::new(Type::new(524, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(876)})));
	tys.push(Rc::new(Type::new(525, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(877)})));
	tys.push(Rc::new(Type::new(526, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(37)})));
	tys.push(Rc::new(Type::new(527, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(892)})));
	tys.push(Rc::new(Type::new(528, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(879)})));
	tys.push(Rc::new(Type::new(529, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(880)})));
	tys.push(Rc::new(Type::new(530, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(881)})));
	tys.push(Rc::new(Type::new(531, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(884)})));
	tys.push(Rc::new(Type::new(532, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(885)})));
	tys.push(Rc::new(Type::new(533, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(792)})));
	tys.push(Rc::new(Type::new(534, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(794)})));
	tys.push(Rc::new(Type::new(535, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(793)})));
	tys.push(Rc::new(Type::new(536, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(718)})));
	tys.push(Rc::new(Type::new(537, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(10)})));
	tys.push(Rc::new(Type::new(538, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(840)})));
	tys.push(Rc::new(Type::new(539, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(852)})));
	tys.push(Rc::new(Type::new(540, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(853)})));
	tys.push(Rc::new(Type::new(541, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(855)})));
	tys.push(Rc::new(Type::new(542, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(854)})));
	tys.push(Rc::new(Type::new(543, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(851)})));
	tys.push(Rc::new(Type::new(544, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(896)})));
	tys.push(Rc::new(Type::new(545, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(25)})));
	tys.push(Rc::new(Type::new(546, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(69)})));
	tys.push(Rc::new(Type::new(547, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(897)})));
	tys.push(Rc::new(Type::new(548, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(846)})));
	tys.push(Rc::new(Type::new(549, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(837)})));
	tys.push(Rc::new(Type::new(550, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(909)})));
	tys.push(Rc::new(Type::new(551, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(850)})));
	tys.push(Rc::new(Type::new(552, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(847)})));
	tys.push(Rc::new(Type::new(553, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(56)})));
	tys.push(Rc::new(Type::new(554, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(68)})));
	tys.push(Rc::new(Type::new(555, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(17)})));
	tys.push(Rc::new(Type::new(556, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(900)})));
	tys.push(Rc::new(Type::new(557, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(26)})));
	tys.push(Rc::new(Type::new(558, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(27)})));
	tys.push(Rc::new(Type::new(559, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(11)})));
	tys.push(Rc::new(Type::new(560, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(894)})));
	tys.push(Rc::new(Type::new(561, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(28)})));
	tys.push(Rc::new(Type::new(562, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(893)})));
	tys.push(Rc::new(Type::new(563, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(848)})));
	tys.push(Rc::new(Type::new(564, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(849)})));
	tys.push(Rc::new(Type::new(565, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(822)})));
	tys.push(Rc::new(Type::new(566, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(825)})));
	tys.push(Rc::new(Type::new(567, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(789)})));
	tys.push(Rc::new(Type::new(568, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(829)})));
	tys.push(Rc::new(Type::new(569, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(751)})));
	tys.push(Rc::new(Type::new(570, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(844)})));
	tys.push(Rc::new(Type::new(571, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(845)})));
	tys.push(Rc::new(Type::new(572, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(753)})));
	tys.push(Rc::new(Type::new(573, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(862)})));
	tys.push(Rc::new(Type::new(574, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(866)})));
	tys.push(Rc::new(Type::new(575, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(869)})));
}
fn types_9(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(576, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(871)})));
	tys.push(Rc::new(Type::new(577, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(902)})));
	tys.push(Rc::new(Type::new(578, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(64)})));
	tys.push(Rc::new(Type::new(579, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(914)})));
	tys.push(Rc::new(Type::new(580, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(916)})));
	tys.push(Rc::new(Type::new(581, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(750)})));
	tys.push(Rc::new(Type::new(582, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(752)})));
	tys.push(Rc::new(Type::new(583, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(795)})));
	tys.push(Rc::new(Type::new(584, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(895)})));
	tys.push(Rc::new(Type::new(585, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(30)})));
	tys.push(Rc::new(Type::new(586, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(716)})));
	tys.push(Rc::new(Type::new(587, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(63)})));
	tys.push(Rc::new(Type::new(588, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(903)})));
	tys.push(Rc::new(Type::new(589, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(905)})));
	tys.push(Rc::new(Type::new(590, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(741)})));
	tys.push(Rc::new(Type::new(591, "ptr64", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(30)})));
	tys.push(Rc::new(Type::new(592, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(413)})));
	tys.push(Rc::new(Type::new(593, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(931)})));
	tys.push(Rc::new(Type::new(594, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(838)})));
	tys.push(Rc::new(Type::new(595, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(861)})));
	tys.push(Rc::new(Type::new(596, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(426)})));
	tys.push(Rc::new(Type::new(597, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(846)})));
	tys.push(Rc::new(Type::new(598, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(909)})));
	tys.push(Rc::new(Type::new(599, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(902)})));
	tys.push(Rc::new(Type::new(600, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(903)})));
	tys.push(Rc::new(Type::new(601, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(905)})));
	tys.push(Rc::new(Type::new(602, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(413)})));
	tys.push(Rc::new(Type::new(603, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(65)})));
	tys.push(Rc::new(Type::new(604, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(12)})));
	tys.push(Rc::new(Type::new(605, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(24)})));
	tys.push(Rc::new(Type::new(606, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(931)})));
	tys.push(Rc::new(Type::new(607, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(684)})));
	tys.push(Rc::new(Type::new(608, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(734)})));
	tys.push(Rc::new(Type::new(609, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(735)})));
	tys.push(Rc::new(Type::new(610, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(297)})));
	tys.push(Rc::new(Type::new(611, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(744)})));
	tys.push(Rc::new(Type::new(612, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(912)})));
	tys.push(Rc::new(Type::new(613, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(857)})));
	tys.push(Rc::new(Type::new(614, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(748)})));
	tys.push(Rc::new(Type::new(615, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(23)})));
	tys.push(Rc::new(Type::new(616, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(932)})));
	tys.push(Rc::new(Type::new(617, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(932)})));
	tys.push(Rc::new(Type::new(618, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(838)})));
	tys.push(Rc::new(Type::new(619, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(15)})));
	tys.push(Rc::new(Type::new(620, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(415)})));
	tys.push(Rc::new(Type::new(621, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(415)})));
	tys.push(Rc::new(Type::new(622, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(860)})));
	tys.push(Rc::new(Type::new(623, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(861)})));
	tys.push(Rc::new(Type::new(624, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(448)})));
	tys.push(Rc::new(Type::new(625, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(455)})));
	tys.push(Rc::new(Type::new(626, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(714)})));
	tys.push(Rc::new(Type::new(627, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(887)})));
	tys.push(Rc::new(Type::new(628, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(460)})));
	tys.push(Rc::new(Type::new(629, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(865)})));
	tys.push(Rc::new(Type::new(630, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(689)})));
	tys.push(Rc::new(Type::new(631, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(870)})));
	tys.push(Rc::new(Type::new(632, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(864)})));
	tys.push(Rc::new(Type::new(633, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(872)})));
	tys.push(Rc::new(Type::new(634, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(889)})));
	tys.push(Rc::new(Type::new(635, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(888)})));
	tys.push(Rc::new(Type::new(636, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(886)})));
	tys.push(Rc::new(Type::new(637, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(873)})));
	tys.push(Rc::new(Type::new(638, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(874)})));
	tys.push(Rc::new(Type::new(639, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(863)})));
}
fn types_10(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(640, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(16)})));
	tys.push(Rc::new(Type::new(641, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(875)})));
	tys.push(Rc::new(Type::new(642, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(878)})));
	tys.push(Rc::new(Type::new(643, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(876)})));
	tys.push(Rc::new(Type::new(644, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(877)})));
	tys.push(Rc::new(Type::new(645, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(867)})));
	tys.push(Rc::new(Type::new(646, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(37)})));
	tys.push(Rc::new(Type::new(647, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(879)})));
	tys.push(Rc::new(Type::new(648, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(880)})));
	tys.push(Rc::new(Type::new(649, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(881)})));
	tys.push(Rc::new(Type::new(650, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(883)})));
	tys.push(Rc::new(Type::new(651, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(884)})));
	tys.push(Rc::new(Type::new(652, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(885)})));
	tys.push(Rc::new(Type::new(653, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(890)})));
	tys.push(Rc::new(Type::new(654, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(792)})));
	tys.push(Rc::new(Type::new(655, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(794)})));
	tys.push(Rc::new(Type::new(656, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(793)})));
	tys.push(Rc::new(Type::new(657, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(718)})));
	tys.push(Rc::new(Type::new(658, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(840)})));
	tys.push(Rc::new(Type::new(659, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(896)})));
	tys.push(Rc::new(Type::new(660, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(25)})));
	tys.push(Rc::new(Type::new(661, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(697)})));
	tys.push(Rc::new(Type::new(662, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(713)})));
	tys.push(Rc::new(Type::new(663, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(837)})));
	tys.push(Rc::new(Type::new(664, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(909)})));
	tys.push(Rc::new(Type::new(665, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(847)})));
	tys.push(Rc::new(Type::new(666, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(56)})));
	tys.push(Rc::new(Type::new(667, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(859)})));
	tys.push(Rc::new(Type::new(668, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(743)})));
	tys.push(Rc::new(Type::new(669, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(902)})));
	tys.push(Rc::new(Type::new(670, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(901)})));
	tys.push(Rc::new(Type::new(671, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(936)})));
	tys.push(Rc::new(Type::new(672, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(717)})));
	tys.push(Rc::new(Type::new(673, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(903)})));
	tys.push(Rc::new(Type::new(674, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(905)})));
	tys.push(Rc::new(Type::new(675, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(457)})));
	tys.push(Rc::new(Type::new(676, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(926)})));
	tys.push(Rc::new(Type::new(677, "ANYRES16", 2, 2, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES16", vec!["ANYRES16", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(678, "ANYRES32", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES32", vec!["ANYRES32", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(679, "ANYRES64", 18, 1, false, false, TypeKind::Res{fmt: BinFmt::StrHex, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(680, "ANYRES64", 20, 1, false, false, TypeKind::Res{fmt: BinFmt::StrDec, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(681, "ANYRES64", 23, 1, false, false, TypeKind::Res{fmt: BinFmt::StrOct, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(682, "ANYRES64", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(683, "assoc_id", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("assoc_id", vec!["assoc_id", ], vec![0, ])})));
	tys.push(Rc::new(Type::new(684, "cpuset", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("cpuset", vec!["cpuset", ], vec![0, ])})));
	tys.push(Rc::new(Type::new(685, "fd", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd", vec!["fd", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(686, "fd_dir", 4, 4, true, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_dir", vec!["fd", "fd_dir", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(687, "fd_dir", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_dir", vec!["fd", "fd_dir", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(688, "fd_pf", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_pf", vec!["fd", "fd_pf", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(689, "gid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("gid", vec!["gid", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(690, "ifindex", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ifindex", vec!["ifindex", ], vec![0, ])})));
	tys.push(Rc::new(Type::new(691, "ipc_msq", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ipc_msq", vec!["ipc", "ipc_msq", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(692, "ipc_sem", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ipc_sem", vec!["ipc", "ipc_sem", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(693, "ipc_shm", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ipc_shm", vec!["ipc", "ipc_shm", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(694, "kqueue", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("kqueue", vec!["fd", "kqueue", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(695, "mqd", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("mqd", vec!["fd", "mqd", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(696, "pid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("pid", vec!["pid", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(697, "semid", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("semid", vec!["semid", ], vec![0, ])})));
	tys.push(Rc::new(Type::new(698, "shmaddr", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("shmaddr", vec!["shmaddr", ], vec![0, ])})));
	tys.push(Rc::new(Type::new(699, "shmfd", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("shmfd", vec!["fd", "shmfd", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(700, "sock", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock", vec!["fd", "sock", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(701, "sock_in", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_in", vec!["fd", "sock", "sock_in", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(702, "sock_in6", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_in6", vec!["fd", "sock", "sock_in6", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(703, "sock_sctp", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_sctp", vec!["fd", "sock", "sock_in", "sock_sctp", ], vec![18446744073709551615, 18446744073709551516, ])})));
}
fn types_11(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(704, "sock_sctp6", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_sctp6", vec!["fd", "sock", "sock_in6", "sock_sctp6", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(705, "sock_tcp", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_tcp", vec!["fd", "sock", "sock_in", "sock_tcp", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(706, "sock_tcp6", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_tcp6", vec!["fd", "sock", "sock_in6", "sock_tcp6", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(707, "sock_udp", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_udp", vec!["fd", "sock", "sock_in", "sock_udp", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(708, "sock_udp6", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_udp6", vec!["fd", "sock", "sock_in6", "sock_udp6", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(709, "sock_udplite", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_udplite", vec!["fd", "sock", "sock_in", "sock_udplite", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(710, "sock_udplite6", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_udplite6", vec!["fd", "sock", "sock_in6", "sock_udplite6", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(711, "sock_unix", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_unix", vec!["fd", "sock", "sock_unix", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(712, "tcp_seq_num", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("tcp_seq_num", vec!["tcp_seq_num", ], vec![1094861636, ])})));
	tys.push(Rc::new(Type::new(713, "timerid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("timerid", vec!["timerid", ], vec![0, ])})));
	tys.push(Rc::new(Type::new(714, "uid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("uid", vec!["uid", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(715, "vma", 8, 8, false, false, TypeKind::Vma{begin: 0, end: 0})));
	tys.push(Rc::new(Type::new(716, "ANYPTRS", 8, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYPTR".to_string()), ty: TypeRef::Id(585), dir: None }, Field{ name: String::into_boxed_str("ANYPTR64".to_string()), ty: TypeRef::Id(591), dir: None }, ]))));
	tys.push(Rc::new(Type::new(717, "ANYUNION", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYBLOB".to_string()), ty: TypeRef::Id(56), dir: None }, Field{ name: String::into_boxed_str("ANYRES16".to_string()), ty: TypeRef::Id(677), dir: None }, Field{ name: String::into_boxed_str("ANYRES32".to_string()), ty: TypeRef::Id(678), dir: None }, Field{ name: String::into_boxed_str("ANYRES64".to_string()), ty: TypeRef::Id(682), dir: None }, Field{ name: String::into_boxed_str("ANYRESDEC".to_string()), ty: TypeRef::Id(680), dir: None }, Field{ name: String::into_boxed_str("ANYRESHEX".to_string()), ty: TypeRef::Id(679), dir: None }, Field{ name: String::into_boxed_str("ANYRESOCT".to_string()), ty: TypeRef::Id(681), dir: None }, ]))));
	tys.push(Rc::new(Type::new(718, "accept_filter", 256, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("af_name".to_string()), ty: TypeRef::Id(66), dir: None }, Field{ name: String::into_boxed_str("af_arg".to_string()), ty: TypeRef::Id(59), dir: None }, ]))));
	tys.push(Rc::new(Type::new(719, "arp_ether_ipv4_packet", 28, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ar_hrd".to_string()), ty: TypeRef::Id(116), dir: None }, Field{ name: String::into_boxed_str("ar_pro".to_string()), ty: TypeRef::Id(117), dir: None }, Field{ name: String::into_boxed_str("ar_hln".to_string()), ty: TypeRef::Id(112), dir: None }, Field{ name: String::into_boxed_str("ar_pln".to_string()), ty: TypeRef::Id(108), dir: None }, Field{ name: String::into_boxed_str("ar_op".to_string()), ty: TypeRef::Id(291), dir: None }, Field{ name: String::into_boxed_str("ar_sha".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("ar_spa".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("ar_tha".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("ar_tpa".to_string()), ty: TypeRef::Id(797), dir: None }, ]))));
	tys.push(Rc::new(Type::new(720, "arp_generic_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ar_hrd".to_string()), ty: TypeRef::Id(290), dir: None }, Field{ name: String::into_boxed_str("ar_pro".to_string()), ty: TypeRef::Id(299), dir: None }, Field{ name: String::into_boxed_str("ar_hln".to_string()), ty: TypeRef::Id(112), dir: None }, Field{ name: String::into_boxed_str("ar_pln".to_string()), ty: TypeRef::Id(436), dir: None }, Field{ name: String::into_boxed_str("ar_op".to_string()), ty: TypeRef::Id(291), dir: None }, Field{ name: String::into_boxed_str("ar_sha".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("ar_spa".to_string()), ty: TypeRef::Id(54), dir: None }, Field{ name: String::into_boxed_str("ar_tha".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("ar_tpa".to_string()), ty: TypeRef::Id(58), dir: None }, ]))));
	tys.push(Rc::new(Type::new(721, "arp_packet", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(720), dir: None }, Field{ name: String::into_boxed_str("ether_ipv4".to_string()), ty: TypeRef::Id(719), dir: None }, ]))));
	tys.push(Rc::new(Type::new(722, "cmsghdr", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("cmsg_len".to_string()), ty: TypeRef::Id(478), dir: None }, Field{ name: String::into_boxed_str("cmsg_level".to_string()), ty: TypeRef::Id(293), dir: None }, Field{ name: String::into_boxed_str("cmsg_type".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(723, "cmsghdr_sctp", 0, 4, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("init".to_string()), ty: TypeRef::Id(727), dir: None }, Field{ name: String::into_boxed_str("sndrcv".to_string()), ty: TypeRef::Id(730), dir: None }, Field{ name: String::into_boxed_str("sndinfo".to_string()), ty: TypeRef::Id(729), dir: None }, Field{ name: String::into_boxed_str("prinfo".to_string()), ty: TypeRef::Id(728), dir: None }, Field{ name: String::into_boxed_str("authinfo".to_string()), ty: TypeRef::Id(724), dir: None }, Field{ name: String::into_boxed_str("dstaddrv4".to_string()), ty: TypeRef::Id(725), dir: None }, Field{ name: String::into_boxed_str("dstaddrv6".to_string()), ty: TypeRef::Id(726), dir: None }, ]))));
	tys.push(Rc::new(Type::new(724, "cmsghdr_sctp_authinfo", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(456), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(136), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(197), dir: None }, Field{ name: String::into_boxed_str("msg".to_string()), ty: TypeRef::Id(868), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(281), dir: None }, ]))));
	tys.push(Rc::new(Type::new(725, "cmsghdr_sctp_dstaddrv4", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(456), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(136), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(198), dir: None }, Field{ name: String::into_boxed_str("msg".to_string()), ty: TypeRef::Id(797), dir: None }, ]))));
	tys.push(Rc::new(Type::new(726, "cmsghdr_sctp_dstaddrv6", 28, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(456), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(136), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(132), dir: None }, Field{ name: String::into_boxed_str("msg".to_string()), ty: TypeRef::Id(814), dir: None }, ]))));
	tys.push(Rc::new(Type::new(727, "cmsghdr_sctp_init", 20, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(456), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(136), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(145), dir: None }, Field{ name: String::into_boxed_str("msg".to_string()), ty: TypeRef::Id(877), dir: None }, ]))));
	tys.push(Rc::new(Type::new(728, "cmsghdr_sctp_prinfo", 20, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(456), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(136), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(193), dir: None }, Field{ name: String::into_boxed_str("msg".to_string()), ty: TypeRef::Id(882), dir: None }, ]))));
	tys.push(Rc::new(Type::new(729, "cmsghdr_sctp_sndinfo", 28, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(456), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(136), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(185), dir: None }, Field{ name: String::into_boxed_str("msg".to_string()), ty: TypeRef::Id(888), dir: None }, ]))));
	tys.push(Rc::new(Type::new(730, "cmsghdr_sctp_sndrcv", 44, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(456), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(136), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(167), dir: None }, Field{ name: String::into_boxed_str("msg".to_string()), ty: TypeRef::Id(889), dir: None }, ]))));
	tys.push(Rc::new(Type::new(731, "cmsghdr_un", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("rights".to_string()), ty: TypeRef::Id(733), dir: None }, Field{ name: String::into_boxed_str("cred".to_string()), ty: TypeRef::Id(732), dir: None }, ]))));
	tys.push(Rc::new(Type::new(732, "cmsghdr_un_cred", 32, 8, false, false, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(478), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(190), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(167), dir: None }, Field{ name: String::into_boxed_str("pid".to_string()), ty: TypeRef::Id(696), dir: None }, Field{ name: String::into_boxed_str("uid".to_string()), ty: TypeRef::Id(714), dir: None }, Field{ name: String::into_boxed_str("gid".to_string()), ty: TypeRef::Id(689), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, ]))));
	tys.push(Rc::new(Type::new(733, "cmsghdr_un_rights", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(478), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(190), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(145), dir: None }, Field{ name: String::into_boxed_str("fds".to_string()), ty: TypeRef::Id(13), dir: None }, ]))));
	tys.push(Rc::new(Type::new(734, "cpuset_mask", 8, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(51), dir: None }, ]))));
	tys.push(Rc::new(Type::new(735, "domainset_mask", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(42), dir: None }, ]))));
	tys.push(Rc::new(Type::new(736, "eth2_packet", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(737), dir: None }, Field{ name: String::into_boxed_str("arp".to_string()), ty: TypeRef::Id(738), dir: None }, Field{ name: String::into_boxed_str("ipv4".to_string()), ty: TypeRef::Id(739), dir: None }, Field{ name: String::into_boxed_str("ipv6".to_string()), ty: TypeRef::Id(740), dir: None }, ]))));
	tys.push(Rc::new(Type::new(737, "eth2_packet_generic", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("etype".to_string()), ty: TypeRef::Id(299), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(738, "eth2_packet_t[ETHERTYPE_ARP, arp_packet]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("etype".to_string()), ty: TypeRef::Id(118), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(721), dir: None }, ]))));
	tys.push(Rc::new(Type::new(739, "eth2_packet_t[ETHERTYPE_IP, ipv4_packet]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("etype".to_string()), ty: TypeRef::Id(117), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(812), dir: None }, ]))));
	tys.push(Rc::new(Type::new(740, "eth2_packet_t[ETHERTYPE_IPV6, ipv6_packet_t]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("etype".to_string()), ty: TypeRef::Id(120), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(827), dir: None }, ]))));
	tys.push(Rc::new(Type::new(741, "eth_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dst_mac".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("src_mac".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("vtag".to_string()), ty: TypeRef::Id(3), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(742), dir: None }, ]))));
	tys.push(Rc::new(Type::new(742, "eth_payload", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("eth2".to_string()), ty: TypeRef::Id(736), dir: None }, ]))));
	tys.push(Rc::new(Type::new(743, "fd_set", 64, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mask0".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mask1".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mask2".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mask3".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mask4".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mask5".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mask6".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mask7".to_string()), ty: TypeRef::Id(415), dir: None }, ]))));
	tys.push(Rc::new(Type::new(744, "fhandle", 28, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fh_fsid".to_string()), ty: TypeRef::Id(749), dir: None }, Field{ name: String::into_boxed_str("fh_fid".to_string()), ty: TypeRef::Id(745), dir: None }, ]))));
	tys.push(Rc::new(Type::new(745, "fid", 20, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fid_len".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("fid_data0".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("fid_data".to_string()), ty: TypeRef::Id(58), dir: None }, ]))));
	tys.push(Rc::new(Type::new(746, "flock", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(306), dir: None }, Field{ name: String::into_boxed_str("whence".to_string()), ty: TypeRef::Id(343), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("start".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("pid".to_string()), ty: TypeRef::Id(696), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, ]))));
	tys.push(Rc::new(Type::new(747, "freebsd11_kevent", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ident".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("filter".to_string()), ty: TypeRef::Id(305), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(372), dir: None }, Field{ name: String::into_boxed_str("fflags".to_string()), ty: TypeRef::Id(304), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("udata".to_string()), ty: TypeRef::Id(426), dir: None }, ]))));
	tys.push(Rc::new(Type::new(748, "freebsd11_stat", 120, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dev".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("ino".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("nlink".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("uid".to_string()), ty: TypeRef::Id(714), dir: None }, Field{ name: String::into_boxed_str("gid".to_string()), ty: TypeRef::Id(689), dir: None }, Field{ name: String::into_boxed_str("rdev".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("atime".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("ansec".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mtime".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mnsec".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("ctime".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("cnsec".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("size".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("blocks".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("blksize".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("gen".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("__spare".to_string()), ty: TypeRef::Id(199), dir: None }, Field{ name: String::into_boxed_str("btime".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("bnsec".to_string()), ty: TypeRef::Id(415), dir: None }, ]))));
	tys.push(Rc::new(Type::new(749, "fsid", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("val".to_string()), ty: TypeRef::Id(50), dir: None }, ]))));
	tys.push(Rc::new(Type::new(750, "group_req_in", 144, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("gr_interface".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("gr_group".to_string()), ty: TypeRef::Id(906), dir: None }, ]))));
	tys.push(Rc::new(Type::new(751, "group_req_in6", 136, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("gr_interface".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("gr_group".to_string()), ty: TypeRef::Id(907), dir: None }, ]))));
	tys.push(Rc::new(Type::new(752, "group_source_req_in", 280, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("gsr_interface".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("gsr_group".to_string()), ty: TypeRef::Id(906), dir: None }, Field{ name: String::into_boxed_str("gsr_source".to_string()), ty: TypeRef::Id(906), dir: None }, ]))));
	tys.push(Rc::new(Type::new(753, "group_source_req_in6", 264, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("gsr_interface".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("gsr_group".to_string()), ty: TypeRef::Id(907), dir: None }, Field{ name: String::into_boxed_str("gsr_source".to_string()), ty: TypeRef::Id(907), dir: None }, ]))));
	tys.push(Rc::new(Type::new(754, "icmp_dest_unreach_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(107), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(309), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("mtu".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(760), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(55), dir: None }, ]))));
	tys.push(Rc::new(Type::new(755, "icmp_echo_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(114), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(756, "icmp_echo_reply_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(409), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(757, "icmp_generic_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(313), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(758, "icmp_info_reply_packet", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(92), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(410), dir: None }, ]))));
	tys.push(Rc::new(Type::new(759, "icmp_info_request_packet", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(91), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(410), dir: None }, ]))));
	tys.push(Rc::new(Type::new(760, "icmp_ipv4_header", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ihl".to_string()), ty: TypeRef::Id(431), dir: None }, Field{ name: String::into_boxed_str("version".to_string()), ty: TypeRef::Id(73), dir: None }, Field{ name: String::into_boxed_str("ecn".to_string()), ty: TypeRef::Id(418), dir: None }, Field{ name: String::into_boxed_str("dscp".to_string()), ty: TypeRef::Id(422), dir: None }, Field{ name: String::into_boxed_str("total_len".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(409), dir: None }, Field{ name: String::into_boxed_str("frag_off".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("ttl".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("protocol".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("src_ip".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("dst_ip".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(811), dir: None }, ]))));
	tys.push(Rc::new(Type::new(761, "icmp_mask_reply_packet", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(97), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(414), dir: None }, ]))));
	tys.push(Rc::new(Type::new(762, "icmp_mask_request_packet", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(95), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(414), dir: None }, ]))));
	tys.push(Rc::new(Type::new(763, "icmp_packet", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(757), dir: None }, Field{ name: String::into_boxed_str("echo_reply".to_string()), ty: TypeRef::Id(756), dir: None }, Field{ name: String::into_boxed_str("dest_unreach".to_string()), ty: TypeRef::Id(754), dir: None }, Field{ name: String::into_boxed_str("source_quench".to_string()), ty: TypeRef::Id(766), dir: None }, Field{ name: String::into_boxed_str("redirect".to_string()), ty: TypeRef::Id(765), dir: None }, Field{ name: String::into_boxed_str("echo".to_string()), ty: TypeRef::Id(755), dir: None }, Field{ name: String::into_boxed_str("time_exceeded".to_string()), ty: TypeRef::Id(767), dir: None }, Field{ name: String::into_boxed_str("parameter_prob".to_string()), ty: TypeRef::Id(764), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(768), dir: None }, Field{ name: String::into_boxed_str("timestamp_reply".to_string()), ty: TypeRef::Id(769), dir: None }, Field{ name: String::into_boxed_str("info_request".to_string()), ty: TypeRef::Id(759), dir: None }, Field{ name: String::into_boxed_str("info_reply".to_string()), ty: TypeRef::Id(758), dir: None }, Field{ name: String::into_boxed_str("mask_request".to_string()), ty: TypeRef::Id(762), dir: None }, Field{ name: String::into_boxed_str("mask_reply".to_string()), ty: TypeRef::Id(761), dir: None }, ]))));
	tys.push(Rc::new(Type::new(764, "icmp_parameter_prob_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(78), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(310), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(122), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(760), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(55), dir: None }, ]))));
	tys.push(Rc::new(Type::new(765, "icmp_redirect_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(110), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(311), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("ip".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(760), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(55), dir: None }, ]))));
	tys.push(Rc::new(Type::new(766, "icmp_source_quench_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(108), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(199), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(760), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(55), dir: None }, ]))));
	tys.push(Rc::new(Type::new(767, "icmp_time_exceeded_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(75), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(312), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("unused1".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("unused2".to_string()), ty: TypeRef::Id(122), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(760), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(55), dir: None }, ]))));
}
fn types_12(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(768, "icmp_timestamp_packet", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(87), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("orig_ts".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("recv_ts".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("trans_ts".to_string()), ty: TypeRef::Id(414), dir: None }, ]))));
	tys.push(Rc::new(Type::new(769, "icmp_timestamp_reply_packet", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(90), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("orig_ts".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("recv_ts".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("trans_ts".to_string()), ty: TypeRef::Id(414), dir: None }, ]))));
	tys.push(Rc::new(Type::new(770, "icmpv6_dest_unreach_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(100), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(314), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(39), dir: None }, Field{ name: String::into_boxed_str("packet".to_string()), ty: TypeRef::Id(773), dir: None }, ]))));
	tys.push(Rc::new(Type::new(771, "icmpv6_echo_reply_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(77), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(772, "icmpv6_echo_request_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(76), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(773, "icmpv6_ipv6_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("priority".to_string()), ty: TypeRef::Id(420), dir: None }, Field{ name: String::into_boxed_str("version".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flow_label".to_string()), ty: TypeRef::Id(60), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(328), dir: None }, Field{ name: String::into_boxed_str("hop_limit".to_string()), ty: TypeRef::Id(308), dir: None }, Field{ name: String::into_boxed_str("src_ip".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("dst_ip".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("ext_headers".to_string()), ty: TypeRef::Id(31), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(774, "icmpv6_mld_packet", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(315), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("mrd".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(814), dir: None }, ]))));
	tys.push(Rc::new(Type::new(775, "icmpv6_mldv2_grec", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("auxwords".to_string()), ty: TypeRef::Id(437), dir: None }, Field{ name: String::into_boxed_str("nsrcs".to_string()), ty: TypeRef::Id(445), dir: None }, Field{ name: String::into_boxed_str("mca".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("srcs".to_string()), ty: TypeRef::Id(7), dir: None }, Field{ name: String::into_boxed_str("aux".to_string()), ty: TypeRef::Id(12), dir: None }, ]))));
	tys.push(Rc::new(Type::new(776, "icmpv6_mldv2_listener_query_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(79), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("mrd".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("mca".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("qrv".to_string()), ty: TypeRef::Id(419), dir: None }, Field{ name: String::into_boxed_str("suppress".to_string()), ty: TypeRef::Id(421), dir: None }, Field{ name: String::into_boxed_str("resv2".to_string()), ty: TypeRef::Id(424), dir: None }, Field{ name: String::into_boxed_str("qqic".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("nsrcs".to_string()), ty: TypeRef::Id(445), dir: None }, Field{ name: String::into_boxed_str("srcs".to_string()), ty: TypeRef::Id(7), dir: None }, ]))));
	tys.push(Rc::new(Type::new(777, "icmpv6_mldv2_listener_report_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(88), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("ngrec".to_string()), ty: TypeRef::Id(441), dir: None }, Field{ name: String::into_boxed_str("grec".to_string()), ty: TypeRef::Id(8), dir: None }, ]))));
	tys.push(Rc::new(Type::new(778, "icmpv6_ndisc_neigh_advert_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(85), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("neighbor_flags".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(39), dir: None }, Field{ name: String::into_boxed_str("target_addr".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(9), dir: None }, ]))));
	tys.push(Rc::new(Type::new(779, "icmpv6_ndisc_neigh_solicit_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(84), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("target_addr".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(9), dir: None }, ]))));
	tys.push(Rc::new(Type::new(780, "icmpv6_ndisc_option", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("option_type".to_string()), ty: TypeRef::Id(316), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(435), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(781, "icmpv6_ndisc_redir_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(86), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(43), dir: None }, Field{ name: String::into_boxed_str("target_addr".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("dst_addr".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(9), dir: None }, ]))));
	tys.push(Rc::new(Type::new(782, "icmpv6_ndisc_router_advert_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(83), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("cur_hop_limit".to_string()), ty: TypeRef::Id(308), dir: None }, Field{ name: String::into_boxed_str("router_flags".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("router_lifetime".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("reachable_time".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("retrans_time".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(9), dir: None }, ]))));
	tys.push(Rc::new(Type::new(783, "icmpv6_ndisc_router_solicit_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(82), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(43), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(9), dir: None }, ]))));
	tys.push(Rc::new(Type::new(784, "icmpv6_ni_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(317), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("qtype".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("nonce".to_string()), ty: TypeRef::Id(416), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(785, "icmpv6_packet", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("dest_unreach".to_string()), ty: TypeRef::Id(770), dir: None }, Field{ name: String::into_boxed_str("pkt_toobig".to_string()), ty: TypeRef::Id(787), dir: None }, Field{ name: String::into_boxed_str("time_exceed".to_string()), ty: TypeRef::Id(788), dir: None }, Field{ name: String::into_boxed_str("param_prob".to_string()), ty: TypeRef::Id(786), dir: None }, Field{ name: String::into_boxed_str("echo_request".to_string()), ty: TypeRef::Id(772), dir: None }, Field{ name: String::into_boxed_str("echo_reply".to_string()), ty: TypeRef::Id(771), dir: None }, Field{ name: String::into_boxed_str("mld".to_string()), ty: TypeRef::Id(774), dir: None }, Field{ name: String::into_boxed_str("mlv2_query".to_string()), ty: TypeRef::Id(776), dir: None }, Field{ name: String::into_boxed_str("mlv2_report".to_string()), ty: TypeRef::Id(777), dir: None }, Field{ name: String::into_boxed_str("ni".to_string()), ty: TypeRef::Id(784), dir: None }, Field{ name: String::into_boxed_str("ndisc_rs".to_string()), ty: TypeRef::Id(783), dir: None }, Field{ name: String::into_boxed_str("ndisc_ra".to_string()), ty: TypeRef::Id(782), dir: None }, Field{ name: String::into_boxed_str("ndisc_na".to_string()), ty: TypeRef::Id(778), dir: None }, Field{ name: String::into_boxed_str("ndisc_ns".to_string()), ty: TypeRef::Id(779), dir: None }, Field{ name: String::into_boxed_str("ndisc_redir".to_string()), ty: TypeRef::Id(781), dir: None }, ]))));
	tys.push(Rc::new(Type::new(786, "icmpv6_param_prob_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(108), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(318), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("packet".to_string()), ty: TypeRef::Id(773), dir: None }, ]))));
	tys.push(Rc::new(Type::new(787, "icmpv6_pkt_toobig_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(105), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("mtu".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("packet".to_string()), ty: TypeRef::Id(773), dir: None }, ]))));
	tys.push(Rc::new(Type::new(788, "icmpv6_time_exceed_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(107), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(319), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(288), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(39), dir: None }, Field{ name: String::into_boxed_str("packet".to_string()), ty: TypeRef::Id(773), dir: None }, ]))));
	tys.push(Rc::new(Type::new(789, "in6_pktinfo", 20, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ipi6_addr".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("ipi6_ifindex".to_string()), ty: TypeRef::Id(690), dir: None }, ]))));
	tys.push(Rc::new(Type::new(790, "iovec_in", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(553), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(461), dir: None }, ]))));
	tys.push(Rc::new(Type::new(791, "iovec_out", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(666), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(461), dir: None }, ]))));
	tys.push(Rc::new(Type::new(792, "ip_mreq", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("imr_multiaddr".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("imr_interface".to_string()), ty: TypeRef::Id(797), dir: None }, ]))));
	tys.push(Rc::new(Type::new(793, "ip_mreq_source", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("imr_multiaddr".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("imr_interface".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("imr_sourceaddr".to_string()), ty: TypeRef::Id(797), dir: None }, ]))));
	tys.push(Rc::new(Type::new(794, "ip_mreqn", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("imr_multiaddr".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("imr_address".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("imr_ifindex".to_string()), ty: TypeRef::Id(690), dir: None }, ]))));
	tys.push(Rc::new(Type::new(795, "ip_msfilter", 0, 4, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("imsf_multiaddr".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("imsf_interface".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("imsf_fmode".to_string()), ty: TypeRef::Id(378), dir: None }, Field{ name: String::into_boxed_str("imsf_numsrc".to_string()), ty: TypeRef::Id(452), dir: None }, Field{ name: String::into_boxed_str("imsf_slist".to_string()), ty: TypeRef::Id(21), dir: None }, ]))));
	tys.push(Rc::new(Type::new(796, "ipc_perm", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("key".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("uid".to_string()), ty: TypeRef::Id(714), dir: None }, Field{ name: String::into_boxed_str("gid".to_string()), ty: TypeRef::Id(689), dir: None }, Field{ name: String::into_boxed_str("cuid".to_string()), ty: TypeRef::Id(714), dir: None }, Field{ name: String::into_boxed_str("cgid".to_string()), ty: TypeRef::Id(689), dir: None }, Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(387), dir: None }, Field{ name: String::into_boxed_str("seq".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("pad0".to_string()), ty: TypeRef::Id(122), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("pad1".to_string()), ty: TypeRef::Id(278), dir: None }, Field{ name: String::into_boxed_str("pad2".to_string()), ty: TypeRef::Id(278), dir: None }, ]))));
	tys.push(Rc::new(Type::new(797, "ipv4_addr", 4, 4, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("empty".to_string()), ty: TypeRef::Id(127), dir: None }, Field{ name: String::into_boxed_str("local".to_string()), ty: TypeRef::Id(798), dir: None }, Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(799), dir: None }, Field{ name: String::into_boxed_str("loopback".to_string()), ty: TypeRef::Id(123), dir: None }, Field{ name: String::into_boxed_str("multicast1".to_string()), ty: TypeRef::Id(124), dir: None }, Field{ name: String::into_boxed_str("multicast2".to_string()), ty: TypeRef::Id(125), dir: None }, Field{ name: String::into_boxed_str("broadcast".to_string()), ty: TypeRef::Id(126), dir: None }, Field{ name: String::into_boxed_str("rand_addr".to_string()), ty: TypeRef::Id(414), dir: None }, ]))));
	tys.push(Rc::new(Type::new(798, "ipv4_addr_local", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(94), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(101), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(483), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(93), dir: None }, ]))));
	tys.push(Rc::new(Type::new(799, "ipv4_addr_remote", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(94), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(101), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(483), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(96), dir: None }, ]))));
	tys.push(Rc::new(Type::new(800, "ipv4_header", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ihl".to_string()), ty: TypeRef::Id(431), dir: None }, Field{ name: String::into_boxed_str("version".to_string()), ty: TypeRef::Id(73), dir: None }, Field{ name: String::into_boxed_str("ecn".to_string()), ty: TypeRef::Id(418), dir: None }, Field{ name: String::into_boxed_str("dscp".to_string()), ty: TypeRef::Id(422), dir: None }, Field{ name: String::into_boxed_str("total_len".to_string()), ty: TypeRef::Id(442), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(409), dir: None }, Field{ name: String::into_boxed_str("frag_off".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("ttl".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("protocol".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(286), dir: None }, Field{ name: String::into_boxed_str("src_ip".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("dst_ip".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(811), dir: None }, ]))));
	tys.push(Rc::new(Type::new(801, "ipv4_option", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(803), dir: None }, Field{ name: String::into_boxed_str("end".to_string()), ty: TypeRef::Id(802), dir: None }, Field{ name: String::into_boxed_str("noop".to_string()), ty: TypeRef::Id(805), dir: None }, Field{ name: String::into_boxed_str("lsrr".to_string()), ty: TypeRef::Id(804), dir: None }, Field{ name: String::into_boxed_str("ssrr".to_string()), ty: TypeRef::Id(808), dir: None }, Field{ name: String::into_boxed_str("rr".to_string()), ty: TypeRef::Id(807), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(809), dir: None }, Field{ name: String::into_boxed_str("ra".to_string()), ty: TypeRef::Id(806), dir: None }, ]))));
	tys.push(Rc::new(Type::new(802, "ipv4_option_end", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(115), dir: None }, ]))));
	tys.push(Rc::new(Type::new(803, "ipv4_option_generic", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(325), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(54), dir: None }, ]))));
	tys.push(Rc::new(Type::new(804, "ipv4_option_lsrr", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(80), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(21), dir: None }, ]))));
	tys.push(Rc::new(Type::new(805, "ipv4_option_noop", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(100), dir: None }, ]))));
	tys.push(Rc::new(Type::new(806, "ipv4_option_ra", 6, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(89), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("value".to_string()), ty: TypeRef::Id(414), dir: None }, ]))));
	tys.push(Rc::new(Type::new(807, "ipv4_option_rr", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(113), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(21), dir: None }, ]))));
	tys.push(Rc::new(Type::new(808, "ipv4_option_ssrr", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(86), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(21), dir: None }, ]))));
	tys.push(Rc::new(Type::new(809, "ipv4_option_timestamp", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(111), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("flg".to_string()), ty: TypeRef::Id(324), dir: None }, Field{ name: String::into_boxed_str("oflw".to_string()), ty: TypeRef::Id(424), dir: None }, Field{ name: String::into_boxed_str("timestamps".to_string()), ty: TypeRef::Id(4), dir: None }, ]))));
	tys.push(Rc::new(Type::new(810, "ipv4_option_timestamp_timestamp", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(20), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(414), dir: None }, ]))));
	tys.push(Rc::new(Type::new(811, "ipv4_options", 0, 4, false, true, TypeKind::new_struct(4, vec![Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(5), dir: None }, ]))));
	tys.push(Rc::new(Type::new(812, "ipv4_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("header".to_string()), ty: TypeRef::Id(800), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(813), dir: None }, ]))));
	tys.push(Rc::new(Type::new(813, "ipv4_payload", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(56), dir: None }, Field{ name: String::into_boxed_str("tcp".to_string()), ty: TypeRef::Id(924), dir: None }, Field{ name: String::into_boxed_str("udp".to_string()), ty: TypeRef::Id(934), dir: None }, Field{ name: String::into_boxed_str("icmp".to_string()), ty: TypeRef::Id(763), dir: None }, ]))));
	tys.push(Rc::new(Type::new(814, "ipv6_addr", 16, 1, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("rand_addr".to_string()), ty: TypeRef::Id(58), dir: None }, Field{ name: String::into_boxed_str("empty".to_string()), ty: TypeRef::Id(815), dir: None }, Field{ name: String::into_boxed_str("local".to_string()), ty: TypeRef::Id(817), dir: None }, Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(821), dir: None }, Field{ name: String::into_boxed_str("loopback".to_string()), ty: TypeRef::Id(818), dir: None }, Field{ name: String::into_boxed_str("ipv4".to_string()), ty: TypeRef::Id(816), dir: None }, Field{ name: String::into_boxed_str("mcast1".to_string()), ty: TypeRef::Id(819), dir: None }, Field{ name: String::into_boxed_str("mcast2".to_string()), ty: TypeRef::Id(820), dir: None }, ]))));
	tys.push(Rc::new(Type::new(815, "ipv6_addr_empty", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(36), dir: None }, ]))));
	tys.push(Rc::new(Type::new(816, "ipv6_addr_ipv4", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(32), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(38), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(797), dir: None }, ]))));
	tys.push(Rc::new(Type::new(817, "ipv6_addr_local", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(102), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(76), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(33), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(483), dir: None }, Field{ name: String::into_boxed_str("a4".to_string()), ty: TypeRef::Id(93), dir: None }, ]))));
	tys.push(Rc::new(Type::new(818, "ipv6_addr_loopback", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(201), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(200), dir: None }, ]))));
	tys.push(Rc::new(Type::new(819, "ipv6_addr_multicast1", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(103), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(100), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(35), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(100), dir: None }, ]))));
	tys.push(Rc::new(Type::new(820, "ipv6_addr_multicast2", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(103), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(105), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(35), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(100), dir: None }, ]))));
	tys.push(Rc::new(Type::new(821, "ipv6_addr_remote", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(102), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(76), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(33), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(483), dir: None }, Field{ name: String::into_boxed_str("a4".to_string()), ty: TypeRef::Id(96), dir: None }, ]))));
	tys.push(Rc::new(Type::new(822, "ipv6_dstopts_ext_header", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(328), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(434), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(46), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(1), dir: None }, ]))));
	tys.push(Rc::new(Type::new(823, "ipv6_ext_header", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("hopopts".to_string()), ty: TypeRef::Id(825), dir: None }, Field{ name: String::into_boxed_str("routing".to_string()), ty: TypeRef::Id(829), dir: None }, Field{ name: String::into_boxed_str("fragment".to_string()), ty: TypeRef::Id(824), dir: None }, Field{ name: String::into_boxed_str("dstopts".to_string()), ty: TypeRef::Id(822), dir: None }, ]))));
	tys.push(Rc::new(Type::new(824, "ipv6_fragment_ext_header", 8, 8, false, false, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(328), dir: None }, Field{ name: String::into_boxed_str("reserved1".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("fragment_off_hi".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("m_flag".to_string()), ty: TypeRef::Id(417), dir: None }, Field{ name: String::into_boxed_str("reserved2".to_string()), ty: TypeRef::Id(71), dir: None }, Field{ name: String::into_boxed_str("fragment_off_lo".to_string()), ty: TypeRef::Id(423), dir: None }, Field{ name: String::into_boxed_str("identification".to_string()), ty: TypeRef::Id(411), dir: None }, ]))));
	tys.push(Rc::new(Type::new(825, "ipv6_hopopts_ext_header", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(328), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(434), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(46), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(1), dir: None }, ]))));
	tys.push(Rc::new(Type::new(826, "ipv6_packet_payload", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ext_headers".to_string()), ty: TypeRef::Id(31), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(828), dir: None }, ]))));
	tys.push(Rc::new(Type::new(827, "ipv6_packet_t", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("priority".to_string()), ty: TypeRef::Id(420), dir: None }, Field{ name: String::into_boxed_str("version".to_string()), ty: TypeRef::Id(74), dir: None }, Field{ name: String::into_boxed_str("flow_label".to_string()), ty: TypeRef::Id(60), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(444), dir: None }, Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(328), dir: None }, Field{ name: String::into_boxed_str("hop_limit".to_string()), ty: TypeRef::Id(308), dir: None }, Field{ name: String::into_boxed_str("src_ip".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("dst_ip".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(826), dir: None }, ]))));
	tys.push(Rc::new(Type::new(828, "ipv6_payload", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(56), dir: None }, Field{ name: String::into_boxed_str("tcp".to_string()), ty: TypeRef::Id(924), dir: None }, Field{ name: String::into_boxed_str("udp".to_string()), ty: TypeRef::Id(934), dir: None }, Field{ name: String::into_boxed_str("icmpv6".to_string()), ty: TypeRef::Id(785), dir: None }, ]))));
	tys.push(Rc::new(Type::new(829, "ipv6_rt_hdr", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(328), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(433), dir: None }, Field{ name: String::into_boxed_str("routing_type".to_string()), ty: TypeRef::Id(327), dir: None }, Field{ name: String::into_boxed_str("segments_left".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("reserved".to_string()), ty: TypeRef::Id(199), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(7), dir: None }, ]))));
	tys.push(Rc::new(Type::new(830, "ipv6_tlv_generic", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(438), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(831, "ipv6_tlv_jumbo", 6, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(98), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(108), dir: None }, Field{ name: String::into_boxed_str("pkt_len".to_string()), ty: TypeRef::Id(414), dir: None }, ]))));
}
fn types_13(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(832, "ipv6_tlv_option", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(830), dir: None }, Field{ name: String::into_boxed_str("pad1".to_string()), ty: TypeRef::Id(833), dir: None }, Field{ name: String::into_boxed_str("padn".to_string()), ty: TypeRef::Id(834), dir: None }, Field{ name: String::into_boxed_str("jumbo".to_string()), ty: TypeRef::Id(831), dir: None }, Field{ name: String::into_boxed_str("enc_lim".to_string()), ty: TypeRef::Id(836), dir: None }, Field{ name: String::into_boxed_str("ra".to_string()), ty: TypeRef::Id(835), dir: None }, ]))));
	tys.push(Rc::new(Type::new(833, "ipv6_tlv_pad1", 3, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(100), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(115), dir: None }, ]))));
	tys.push(Rc::new(Type::new(834, "ipv6_tlv_padn", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(100), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(439), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(0), dir: None }, ]))));
	tys.push(Rc::new(Type::new(835, "ipv6_tlv_ra", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(110), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(105), dir: None }, Field{ name: String::into_boxed_str("ra".to_string()), ty: TypeRef::Id(410), dir: None }, ]))));
	tys.push(Rc::new(Type::new(836, "ipv6_tlv_tun_lim", 3, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(108), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(100), dir: None }, Field{ name: String::into_boxed_str("encap_limit".to_string()), ty: TypeRef::Id(425), dir: None }, ]))));
	tys.push(Rc::new(Type::new(837, "itimerspec", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("interv".to_string()), ty: TypeRef::Id(931), dir: None }, Field{ name: String::into_boxed_str("value".to_string()), ty: TypeRef::Id(931), dir: None }, ]))));
	tys.push(Rc::new(Type::new(838, "itimerval", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("interv".to_string()), ty: TypeRef::Id(932), dir: None }, Field{ name: String::into_boxed_str("value".to_string()), ty: TypeRef::Id(932), dir: None }, ]))));
	tys.push(Rc::new(Type::new(839, "kevent", 64, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ident".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("filter".to_string()), ty: TypeRef::Id(305), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(372), dir: None }, Field{ name: String::into_boxed_str("fflags".to_string()), ty: TypeRef::Id(304), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("udata".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("ext".to_string()), ty: TypeRef::Id(42), dir: None }, ]))));
	tys.push(Rc::new(Type::new(840, "linger", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("onoff".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("linger".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(841, "mac_addr", 6, 1, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("empty".to_string()), ty: TypeRef::Id(46), dir: None }, Field{ name: String::into_boxed_str("local".to_string()), ty: TypeRef::Id(842), dir: None }, Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(843), dir: None }, Field{ name: String::into_boxed_str("broadcast".to_string()), ty: TypeRef::Id(47), dir: None }, Field{ name: String::into_boxed_str("random".to_string()), ty: TypeRef::Id(62), dir: None }, ]))));
	tys.push(Rc::new(Type::new(842, "mac_addr_t[const[0xaa, int8]]", 6, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(45), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(93), dir: None }, ]))));
	tys.push(Rc::new(Type::new(843, "mac_addr_t[const[0xbb, int8]]", 6, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(45), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(96), dir: None }, ]))));
	tys.push(Rc::new(Type::new(844, "mf6cctl", 92, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mf6cc_origin".to_string()), ty: TypeRef::Id(903), dir: None }, Field{ name: String::into_boxed_str("mf6cc_mcastgrp".to_string()), ty: TypeRef::Id(903), dir: None }, Field{ name: String::into_boxed_str("mf6cc_parent".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(281), dir: None }, Field{ name: String::into_boxed_str("mf6cc_ifset".to_string()), ty: TypeRef::Id(40), dir: None }, ]))));
	tys.push(Rc::new(Type::new(845, "mif6ctl", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mif6c_mifi".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("mif6c_flags".to_string()), ty: TypeRef::Id(381), dir: None }, Field{ name: String::into_boxed_str("vifc_threshold".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("mif6c_pifi".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(281), dir: None }, Field{ name: String::into_boxed_str("vifc_rate_limit".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(846, "mq_attr", 64, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mq_flags".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("mq_maxmsg".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("mq_msgsize".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("mq_curmsgs".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("__reserved".to_string()), ty: TypeRef::Id(41), dir: None }, ]))));
	tys.push(Rc::new(Type::new(847, "msgbuf", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("typ".to_string()), ty: TypeRef::Id(333), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(848, "msghdr_sctp", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("msg_name".to_string()), ty: TypeRef::Id(522), dir: None }, Field{ name: String::into_boxed_str("msg_namelen".to_string()), ty: TypeRef::Id(454), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("msg_iov".to_string()), ty: TypeRef::Id(558), dir: None }, Field{ name: String::into_boxed_str("msg_iovlen".to_string()), ty: TypeRef::Id(453), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("msg_control".to_string()), ty: TypeRef::Id(492), dir: None }, Field{ name: String::into_boxed_str("msg_controllen".to_string()), ty: TypeRef::Id(427), dir: None }, Field{ name: String::into_boxed_str("msg_flags".to_string()), ty: TypeRef::Id(395), dir: None }, ]))));
	tys.push(Rc::new(Type::new(849, "msghdr_un", 56, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(550), dir: None }, Field{ name: String::into_boxed_str("addrlen".to_string()), ty: TypeRef::Id(448), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("vec".to_string()), ty: TypeRef::Id(558), dir: None }, Field{ name: String::into_boxed_str("vlen".to_string()), ty: TypeRef::Id(482), dir: None }, Field{ name: String::into_boxed_str("ctrl".to_string()), ty: TypeRef::Id(493), dir: None }, Field{ name: String::into_boxed_str("ctrllen".to_string()), ty: TypeRef::Id(428), dir: None }, Field{ name: String::into_boxed_str("f".to_string()), ty: TypeRef::Id(395), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, ]))));
	tys.push(Rc::new(Type::new(850, "msqid_ds", 120, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("perm".to_string()), ty: TypeRef::Id(796), dir: None }, Field{ name: String::into_boxed_str("stime".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("rtime".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("ctime".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("cbytes".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("qnum".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("qbytes".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("lspid".to_string()), ty: TypeRef::Id(696), dir: None }, Field{ name: String::into_boxed_str("lrpid".to_string()), ty: TypeRef::Id(696), dir: None }, Field{ name: String::into_boxed_str("pad0".to_string()), ty: TypeRef::Id(278), dir: None }, Field{ name: String::into_boxed_str("pad1".to_string()), ty: TypeRef::Id(278), dir: None }, ]))));
	tys.push(Rc::new(Type::new(851, "pfioc_if", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ifname".to_string()), ty: TypeRef::Id(92), dir: None }, ]))));
	tys.push(Rc::new(Type::new(852, "pfioc_iface", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pfiio_name".to_string()), ty: TypeRef::Id(92), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(284), dir: None }, Field{ name: String::into_boxed_str("pfiio_buffer".to_string()), ty: TypeRef::Id(553), dir: None }, Field{ name: String::into_boxed_str("pfiio_esize".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("pfiio_size".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("pfiio_flags".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, ]))));
	tys.push(Rc::new(Type::new(853, "pfioc_limit", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("index".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("limit".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(854, "pfioc_table", 1136, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pfrio_table".to_string()), ty: TypeRef::Id(856), dir: None }, Field{ name: String::into_boxed_str("pfrio_buffer".to_string()), ty: TypeRef::Id(553), dir: None }, Field{ name: String::into_boxed_str("pfrio_esize".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("pfrio_size".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("pfrio_size2".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("pfrio_nadd".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("pfrio_ndel".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("pfrio_nchange".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("pfrio_flags".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("pfrio_ticket".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, ]))));
	tys.push(Rc::new(Type::new(855, "pfioc_tm", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("timeout".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("seconds".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(856, "pfr_table", 1064, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pfrt_anchor".to_string()), ty: TypeRef::Id(57), dir: None }, Field{ name: String::into_boxed_str("pfrt_name".to_string()), ty: TypeRef::Id(61), dir: None }, Field{ name: String::into_boxed_str("pfrt_flags".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("pfrt_fback".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(282), dir: None }, ]))));
	tys.push(Rc::new(Type::new(857, "pipefd", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("rfd".to_string()), ty: TypeRef::Id(685), dir: None }, Field{ name: String::into_boxed_str("wfd".to_string()), ty: TypeRef::Id(685), dir: None }, ]))));
	tys.push(Rc::new(Type::new(858, "pollfd", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fd".to_string()), ty: TypeRef::Id(685), dir: None }, Field{ name: String::into_boxed_str("events".to_string()), ty: TypeRef::Id(337), dir: None }, Field{ name: String::into_boxed_str("revents".to_string()), ty: TypeRef::Id(122), dir: None }, ]))));
	tys.push(Rc::new(Type::new(859, "recv_msghdr", 56, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("msg_name".to_string()), ty: TypeRef::Id(601), dir: None }, Field{ name: String::into_boxed_str("msg_namelen".to_string()), ty: TypeRef::Id(454), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("msg_iov".to_string()), ty: TypeRef::Id(557), dir: None }, Field{ name: String::into_boxed_str("msg_iovlen".to_string()), ty: TypeRef::Id(473), dir: None }, Field{ name: String::into_boxed_str("msg_control".to_string()), ty: TypeRef::Id(666), dir: None }, Field{ name: String::into_boxed_str("msg_controllen".to_string()), ty: TypeRef::Id(472), dir: None }, Field{ name: String::into_boxed_str("msg_flags".to_string()), ty: TypeRef::Id(199), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, ]))));
	tys.push(Rc::new(Type::new(860, "rlimit", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("soft".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("hard".to_string()), ty: TypeRef::Id(426), dir: None }, ]))));
	tys.push(Rc::new(Type::new(861, "rusage", 144, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("utime".to_string()), ty: TypeRef::Id(932), dir: None }, Field{ name: String::into_boxed_str("stime".to_string()), ty: TypeRef::Id(932), dir: None }, Field{ name: String::into_boxed_str("maxrss".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("ixrss".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("idrss".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("isrss".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("minflt".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("majflt".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("nswap".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("inblock".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("oublock".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("msgsnd".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("msgrcv".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("signals".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("nvcsw".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("nivcsw".to_string()), ty: TypeRef::Id(426), dir: None }, ]))));
	tys.push(Rc::new(Type::new(862, "sctp_add_streams", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sas_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("sas_instrms".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sas_outstrms".to_string()), ty: TypeRef::Id(408), dir: None }, ]))));
	tys.push(Rc::new(Type::new(863, "sctp_assoc_ids", 0, 4, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("gaids_number_of_ids".to_string()), ty: TypeRef::Id(449), dir: None }, Field{ name: String::into_boxed_str("gaids_assoc_id".to_string()), ty: TypeRef::Id(14), dir: None }, ]))));
	tys.push(Rc::new(Type::new(864, "sctp_assoc_value", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("assoc_value".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(865, "sctp_assocparams", 20, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sasoc_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("sasoc_peer_rwnd".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sasoc_local_rwnd".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sasoc_cookie_life".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sasoc_asocmaxrxt".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sasoc_number_peer_dest".to_string()), ty: TypeRef::Id(408), dir: None }, ]))));
	tys.push(Rc::new(Type::new(866, "sctp_authchunk", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sauth_chunk".to_string()), ty: TypeRef::Id(425), dir: None }, ]))));
	tys.push(Rc::new(Type::new(867, "sctp_authchunks", 0, 4, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("gauth_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("gauth_number_of_chunks".to_string()), ty: TypeRef::Id(450), dir: None }, Field{ name: String::into_boxed_str("gauth_chunks".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(868, "sctp_authinfo", 2, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("auth_keynumber".to_string()), ty: TypeRef::Id(408), dir: None }, ]))));
	tys.push(Rc::new(Type::new(869, "sctp_authkey", 0, 4, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sca_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("sca_keynumber".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sca_keylength".to_string()), ty: TypeRef::Id(446), dir: None }, Field{ name: String::into_boxed_str("sca_key".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(870, "sctp_authkeyid", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("scact_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("scact_keynumber".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(281), dir: None }, ]))));
	tys.push(Rc::new(Type::new(871, "sctp_connectx", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addrcnt".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("addrs".to_string()), ty: TypeRef::Id(523), dir: None }, ]))));
	tys.push(Rc::new(Type::new(872, "sctp_default_prinfo", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pr_policy".to_string()), ty: TypeRef::Id(341), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(281), dir: None }, Field{ name: String::into_boxed_str("pr_value".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("pr_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, ]))));
	tys.push(Rc::new(Type::new(873, "sctp_event", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("se_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("se_type".to_string()), ty: TypeRef::Id(340), dir: None }, Field{ name: String::into_boxed_str("se_on".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(280), dir: None }, ]))));
	tys.push(Rc::new(Type::new(874, "sctp_event_subscribe", 11, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sctp_data_io_event".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_association_event".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_address_event".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_send_failure_event".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_peer_error_event".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_shutdown_event".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_partial_delivery_e".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_adaptation_layer_e".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_authentication_e".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_sender_dry_event".to_string()), ty: TypeRef::Id(425), dir: None }, Field{ name: String::into_boxed_str("sctp_stream_reset_event".to_string()), ty: TypeRef::Id(425), dir: None }, ]))));
	tys.push(Rc::new(Type::new(875, "sctp_getaddresses_out", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sget_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(640), dir: None }, ]))));
	tys.push(Rc::new(Type::new(876, "sctp_hmacalgo", 0, 4, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("shmac_num_idents".to_string()), ty: TypeRef::Id(458), dir: None }, Field{ name: String::into_boxed_str("shmac_idents".to_string()), ty: TypeRef::Id(10), dir: None }, ]))));
	tys.push(Rc::new(Type::new(877, "sctp_initmsg", 8, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sinit_num_ostreams".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sinit_max_instreams".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sinit_max_attempts".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sinit_max_init_timeo".to_string()), ty: TypeRef::Id(408), dir: None }, ]))));
	tys.push(Rc::new(Type::new(878, "sctp_paddrinfo", 0, 4, false, true, TypeKind::new_struct(4, vec![Field{ name: String::into_boxed_str("spinfo_address".to_string()), ty: TypeRef::Id(908), dir: None }, Field{ name: String::into_boxed_str("spinfo_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("spinfo_state".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("spinfo_cwnd".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("spinfo_srtt".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("spinfo_rto".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("spinfo_mtu".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(879, "sctp_paddrparams", 0, 4, false, true, TypeKind::new_struct(4, vec![Field{ name: String::into_boxed_str("spp_address".to_string()), ty: TypeRef::Id(908), dir: None }, Field{ name: String::into_boxed_str("spp_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("spp_hbinterval".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("spp_pathmtu".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("spp_flags".to_string()), ty: TypeRef::Id(392), dir: None }, Field{ name: String::into_boxed_str("spp_ipv6_flowlabel".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("spp_pathmaxrxt".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("spp_dscp".to_string()), ty: TypeRef::Id(425), dir: None }, ]))));
	tys.push(Rc::new(Type::new(880, "sctp_paddrthlds", 0, 4, false, true, TypeKind::new_struct(4, vec![Field{ name: String::into_boxed_str("spt_address".to_string()), ty: TypeRef::Id(908), dir: None }, Field{ name: String::into_boxed_str("spt_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("spt_pathmaxrxt".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("spt_pathpfthld".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("spt_pathcpthld".to_string()), ty: TypeRef::Id(408), dir: None }, ]))));
	tys.push(Rc::new(Type::new(881, "sctp_prim", 0, 4, false, true, TypeKind::new_struct(4, vec![Field{ name: String::into_boxed_str("ssp_addr".to_string()), ty: TypeRef::Id(908), dir: None }, Field{ name: String::into_boxed_str("ssp_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, ]))));
	tys.push(Rc::new(Type::new(882, "sctp_prinfo", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pr_policy".to_string()), ty: TypeRef::Id(341), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(281), dir: None }, Field{ name: String::into_boxed_str("pr_value".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(883, "sctp_prstatus", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sprstat_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("sprstat_sid".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sprstat_policy".to_string()), ty: TypeRef::Id(341), dir: None }, Field{ name: String::into_boxed_str("sprstat_abandoned_uns".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("sprstat_abandoned_sent".to_string()), ty: TypeRef::Id(415), dir: None }, ]))));
	tys.push(Rc::new(Type::new(884, "sctp_reset_streams", 0, 4, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("srs_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("srs_flags".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("srs_number_streams".to_string()), ty: TypeRef::Id(447), dir: None }, Field{ name: String::into_boxed_str("srs_stream_list".to_string()), ty: TypeRef::Id(10), dir: None }, ]))));
	tys.push(Rc::new(Type::new(885, "sctp_rtoinfo", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("srto_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("srto_initial".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("srto_max".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("srto_min".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(886, "sctp_sack_info", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sack_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("sack_delay".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sack_freq".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(887, "sctp_setadaptation", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ssb_adaptation_ind".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(888, "sctp_sndinfo", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("snd_sid".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("snd_flags".to_string()), ty: TypeRef::Id(391), dir: None }, Field{ name: String::into_boxed_str("snd_ppid".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("snd_context".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("snd_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, ]))));
	tys.push(Rc::new(Type::new(889, "sctp_sndrcvinfo", 32, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sinfo_stream".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sinfo_ssn".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sinfo_flags".to_string()), ty: TypeRef::Id(391), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(281), dir: None }, Field{ name: String::into_boxed_str("sinfo_ppid".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sinfo_context".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sinfo_timetolive".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sinfo_tsn".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sinfo_cumtsn".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sinfo_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, ]))));
	tys.push(Rc::new(Type::new(890, "sctp_status", 0, 4, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sstat_assoc_id".to_string()), ty: TypeRef::Id(683), dir: None }, Field{ name: String::into_boxed_str("sstat_state".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sstat_rwnd".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sstat_unackdata".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sstat_penddata".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sstat_instrms".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sstat_outstrms".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("sstat_fragmentation_p".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("sstat_primary".to_string()), ty: TypeRef::Id(878), dir: None }, ]))));
	tys.push(Rc::new(Type::new(891, "sembuf", 6, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("num".to_string()), ty: TypeRef::Id(345), dir: None }, Field{ name: String::into_boxed_str("op".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("flg".to_string()), ty: TypeRef::Id(394), dir: None }, ]))));
	tys.push(Rc::new(Type::new(892, "semid_ds", 88, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("perm".to_string()), ty: TypeRef::Id(796), dir: None }, Field{ name: String::into_boxed_str("otime".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("ctime".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("nsems".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("pad0".to_string()), ty: TypeRef::Id(278), dir: None }, Field{ name: String::into_boxed_str("pad1".to_string()), ty: TypeRef::Id(278), dir: None }, ]))));
	tys.push(Rc::new(Type::new(893, "send_msghdr", 56, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("msg_name".to_string()), ty: TypeRef::Id(496), dir: None }, Field{ name: String::into_boxed_str("msg_namelen".to_string()), ty: TypeRef::Id(454), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("msg_iov".to_string()), ty: TypeRef::Id(558), dir: None }, Field{ name: String::into_boxed_str("msg_iovlen".to_string()), ty: TypeRef::Id(473), dir: None }, Field{ name: String::into_boxed_str("msg_control".to_string()), ty: TypeRef::Id(561), dir: None }, Field{ name: String::into_boxed_str("msg_controllen".to_string()), ty: TypeRef::Id(430), dir: None }, Field{ name: String::into_boxed_str("msg_flags".to_string()), ty: TypeRef::Id(199), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, ]))));
	tys.push(Rc::new(Type::new(894, "sf_hdtr", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("headers".to_string()), ty: TypeRef::Id(558), dir: None }, Field{ name: String::into_boxed_str("hdr_cnt".to_string()), ty: TypeRef::Id(451), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("trailers".to_string()), ty: TypeRef::Id(558), dir: None }, Field{ name: String::into_boxed_str("trl_cnt".to_string()), ty: TypeRef::Id(459), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, ]))));
	tys.push(Rc::new(Type::new(895, "shmid_ds", 112, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("perm".to_string()), ty: TypeRef::Id(796), dir: None }, Field{ name: String::into_boxed_str("segsz".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("atime".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("dtime".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("ctime".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("cpid".to_string()), ty: TypeRef::Id(696), dir: None }, Field{ name: String::into_boxed_str("lpid".to_string()), ty: TypeRef::Id(696), dir: None }, Field{ name: String::into_boxed_str("nattch".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("unused0".to_string()), ty: TypeRef::Id(122), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("unused1".to_string()), ty: TypeRef::Id(278), dir: None }, Field{ name: String::into_boxed_str("unused2".to_string()), ty: TypeRef::Id(278), dir: None }, ]))));
}
fn types_14(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(896, "shmlgpgconf", 48, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("psind".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("alloc".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(44), dir: None }, ]))));
	tys.push(Rc::new(Type::new(897, "sigevent", 80, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("notify".to_string()), ty: TypeRef::Id(349), dir: None }, Field{ name: String::into_boxed_str("signo".to_string()), ty: TypeRef::Id(412), dir: None }, Field{ name: String::into_boxed_str("val".to_string()), ty: TypeRef::Id(278), dir: None }, Field{ name: String::into_boxed_str("u".to_string()), ty: TypeRef::Id(899), dir: None }, ]))));
	tys.push(Rc::new(Type::new(898, "sigevent_thread", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("func".to_string()), ty: TypeRef::Id(546), dir: None }, Field{ name: String::into_boxed_str("attr".to_string()), ty: TypeRef::Id(553), dir: None }, ]))));
	tys.push(Rc::new(Type::new(899, "sigevent_u", 64, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("tid".to_string()), ty: TypeRef::Id(696), dir: None }, Field{ name: String::into_boxed_str("thr".to_string()), ty: TypeRef::Id(898), dir: None }, Field{ name: String::into_boxed_str("ke_flags".to_string()), ty: TypeRef::Id(372), dir: None }, Field{ name: String::into_boxed_str("spare".to_string()), ty: TypeRef::Id(48), dir: None }, ]))));
	tys.push(Rc::new(Type::new(900, "sigset", 8, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(415), dir: None }, ]))));
	tys.push(Rc::new(Type::new(901, "sock_pair", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fd0".to_string()), ty: TypeRef::Id(700), dir: None }, Field{ name: String::into_boxed_str("fd1".to_string()), ty: TypeRef::Id(700), dir: None }, ]))));
	tys.push(Rc::new(Type::new(902, "sockaddr_in", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("family".to_string()), ty: TypeRef::Id(105), dir: None }, Field{ name: String::into_boxed_str("port".to_string()), ty: TypeRef::Id(484), dir: None }, Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(49), dir: None }, ]))));
	tys.push(Rc::new(Type::new(903, "sockaddr_in6", 28, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("family".to_string()), ty: TypeRef::Id(104), dir: None }, Field{ name: String::into_boxed_str("port".to_string()), ty: TypeRef::Id(484), dir: None }, Field{ name: String::into_boxed_str("flow".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("scope".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(904, "sockaddr_sctp", 0, 4, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("in".to_string()), ty: TypeRef::Id(902), dir: None }, Field{ name: String::into_boxed_str("in6".to_string()), ty: TypeRef::Id(903), dir: None }, ]))));
	tys.push(Rc::new(Type::new(905, "sockaddr_storage", 0, 4, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("un".to_string()), ty: TypeRef::Id(909), dir: None }, Field{ name: String::into_boxed_str("in".to_string()), ty: TypeRef::Id(902), dir: None }, Field{ name: String::into_boxed_str("in6".to_string()), ty: TypeRef::Id(903), dir: None }, ]))));
	tys.push(Rc::new(Type::new(906, "sockaddr_storage_in", 136, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(902), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(34), dir: None }, ]))));
	tys.push(Rc::new(Type::new(907, "sockaddr_storage_in6", 128, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(903), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(283), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(908, "sockaddr_storage_sctp", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("in".to_string()), ty: TypeRef::Id(906), dir: None }, Field{ name: String::into_boxed_str("in6".to_string()), ty: TypeRef::Id(907), dir: None }, ]))));
	tys.push(Rc::new(Type::new(909, "sockaddr_un", 0, 4, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("file".to_string()), ty: TypeRef::Id(911), dir: None }, Field{ name: String::into_boxed_str("abs".to_string()), ty: TypeRef::Id(910), dir: None }, ]))));
	tys.push(Rc::new(Type::new(910, "sockaddr_un_abstract", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("family".to_string()), ty: TypeRef::Id(363), dir: None }, Field{ name: String::into_boxed_str("ind".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(280), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(485), dir: None }, ]))));
	tys.push(Rc::new(Type::new(911, "sockaddr_un_file", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("family".to_string()), ty: TypeRef::Id(363), dir: None }, Field{ name: String::into_boxed_str("path".to_string()), ty: TypeRef::Id(63), dir: None }, ]))));
	tys.push(Rc::new(Type::new(912, "stat", 224, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dev".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("ino".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("nlink".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("__pad0".to_string()), ty: TypeRef::Id(122), dir: None }, Field{ name: String::into_boxed_str("uid".to_string()), ty: TypeRef::Id(714), dir: None }, Field{ name: String::into_boxed_str("gid".to_string()), ty: TypeRef::Id(689), dir: None }, Field{ name: String::into_boxed_str("__pad1".to_string()), ty: TypeRef::Id(199), dir: None }, Field{ name: String::into_boxed_str("rdev".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("atime".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("ansec".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mtime".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("mnsec".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("ctime".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("cnsec".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("btime".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("bnsec".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("size".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("blocks".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("blksize".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("gen".to_string()), ty: TypeRef::Id(415), dir: None }, Field{ name: String::into_boxed_str("__spare".to_string()), ty: TypeRef::Id(52), dir: None }, ]))));
	tys.push(Rc::new(Type::new(913, "tcp_eol_option", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(115), dir: None }, ]))));
	tys.push(Rc::new(Type::new(914, "tcp_fastopen", 20, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("enable".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("psk".to_string()), ty: TypeRef::Id(58), dir: None }, ]))));
	tys.push(Rc::new(Type::new(915, "tcp_fastopen_option", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(106), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(54), dir: None }, ]))));
	tys.push(Rc::new(Type::new(916, "tcp_function_set", 36, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("function_set_name".to_string()), ty: TypeRef::Id(67), dir: None }, Field{ name: String::into_boxed_str("pcbcnt".to_string()), ty: TypeRef::Id(413), dir: None }, ]))));
	tys.push(Rc::new(Type::new(917, "tcp_generic_option", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(359), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(54), dir: None }, ]))));
	tys.push(Rc::new(Type::new(918, "tcp_header", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("src_port".to_string()), ty: TypeRef::Id(484), dir: None }, Field{ name: String::into_boxed_str("dst_port".to_string()), ty: TypeRef::Id(484), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(712), dir: None }, Field{ name: String::into_boxed_str("ack_num".to_string()), ty: TypeRef::Id(712), dir: None }, Field{ name: String::into_boxed_str("ns".to_string()), ty: TypeRef::Id(417), dir: None }, Field{ name: String::into_boxed_str("reserved".to_string()), ty: TypeRef::Id(72), dir: None }, Field{ name: String::into_boxed_str("data_off".to_string()), ty: TypeRef::Id(432), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(358), dir: None }, Field{ name: String::into_boxed_str("window_size".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(289), dir: None }, Field{ name: String::into_boxed_str("urg_ptr".to_string()), ty: TypeRef::Id(410), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(923), dir: None }, ]))));
	tys.push(Rc::new(Type::new(919, "tcp_md5sig_option", 18, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(99), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("md5".to_string()), ty: TypeRef::Id(58), dir: None }, ]))));
	tys.push(Rc::new(Type::new(920, "tcp_mss_option", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(105), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("seg_size".to_string()), ty: TypeRef::Id(410), dir: None }, ]))));
	tys.push(Rc::new(Type::new(921, "tcp_nop_option", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(100), dir: None }, ]))));
	tys.push(Rc::new(Type::new(922, "tcp_option", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(917), dir: None }, Field{ name: String::into_boxed_str("nop".to_string()), ty: TypeRef::Id(921), dir: None }, Field{ name: String::into_boxed_str("eol".to_string()), ty: TypeRef::Id(913), dir: None }, Field{ name: String::into_boxed_str("mss".to_string()), ty: TypeRef::Id(920), dir: None }, Field{ name: String::into_boxed_str("window".to_string()), ty: TypeRef::Id(930), dir: None }, Field{ name: String::into_boxed_str("sack_perm".to_string()), ty: TypeRef::Id(928), dir: None }, Field{ name: String::into_boxed_str("sack".to_string()), ty: TypeRef::Id(927), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(929), dir: None }, Field{ name: String::into_boxed_str("md5sig".to_string()), ty: TypeRef::Id(919), dir: None }, Field{ name: String::into_boxed_str("fastopen".to_string()), ty: TypeRef::Id(915), dir: None }, ]))));
	tys.push(Rc::new(Type::new(923, "tcp_options", 0, 4, false, true, TypeKind::new_struct(4, vec![Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(6), dir: None }, ]))));
	tys.push(Rc::new(Type::new(924, "tcp_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("header".to_string()), ty: TypeRef::Id(918), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(925), dir: None }, ]))));
	tys.push(Rc::new(Type::new(925, "tcp_payload", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(926, "tcp_resources", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("seq".to_string()), ty: TypeRef::Id(712), dir: None }, Field{ name: String::into_boxed_str("ack".to_string()), ty: TypeRef::Id(712), dir: None }, ]))));
	tys.push(Rc::new(Type::new(927, "tcp_sack_option", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(110), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(19), dir: None }, ]))));
	tys.push(Rc::new(Type::new(928, "tcp_sack_perm_option", 2, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(108), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, ]))));
	tys.push(Rc::new(Type::new(929, "tcp_timestamp_option", 10, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(114), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("tsval".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("tsecr".to_string()), ty: TypeRef::Id(414), dir: None }, ]))));
	tys.push(Rc::new(Type::new(930, "tcp_window_option", 3, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(107), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(440), dir: None }, Field{ name: String::into_boxed_str("shift".to_string()), ty: TypeRef::Id(425), dir: None }, ]))));
	tys.push(Rc::new(Type::new(931, "timespec", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sec".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("nsec".to_string()), ty: TypeRef::Id(426), dir: None }, ]))));
	tys.push(Rc::new(Type::new(932, "timeval", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sec".to_string()), ty: TypeRef::Id(426), dir: None }, Field{ name: String::into_boxed_str("usec".to_string()), ty: TypeRef::Id(426), dir: None }, ]))));
	tys.push(Rc::new(Type::new(933, "udp_header", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("src_port".to_string()), ty: TypeRef::Id(484), dir: None }, Field{ name: String::into_boxed_str("dst_port".to_string()), ty: TypeRef::Id(484), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(443), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(287), dir: None }, ]))));
	tys.push(Rc::new(Type::new(934, "udp_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("header".to_string()), ty: TypeRef::Id(933), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(935), dir: None }, ]))));
	tys.push(Rc::new(Type::new(935, "udp_payload", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(56), dir: None }, ]))));
	tys.push(Rc::new(Type::new(936, "unix_pair", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fd0".to_string()), ty: TypeRef::Id(711), dir: None }, Field{ name: String::into_boxed_str("fd1".to_string()), ty: TypeRef::Id(711), dir: None }, ]))));
	tys.push(Rc::new(Type::new(937, "vlan_tag", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag_ad".to_string()), ty: TypeRef::Id(2), dir: None }, Field{ name: String::into_boxed_str("tag_q".to_string()), ty: TypeRef::Id(939), dir: None }, ]))));
	tys.push(Rc::new(Type::new(938, "vlan_tag_ad", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tpid".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("pcp".to_string()), ty: TypeRef::Id(405), dir: None }, Field{ name: String::into_boxed_str("dei".to_string()), ty: TypeRef::Id(406), dir: None }, Field{ name: String::into_boxed_str("vid".to_string()), ty: TypeRef::Id(407), dir: None }, ]))));
	tys.push(Rc::new(Type::new(939, "vlan_tag_q", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tpid".to_string()), ty: TypeRef::Id(119), dir: None }, Field{ name: String::into_boxed_str("pcp".to_string()), ty: TypeRef::Id(405), dir: None }, Field{ name: String::into_boxed_str("dei".to_string()), ty: TypeRef::Id(406), dir: None }, Field{ name: String::into_boxed_str("vid".to_string()), ty: TypeRef::Id(407), dir: None }, ]))));
}
fn types() -> Vec<Rc<Type>>{
	let mut tys = Vec::new();
	types_0(&mut tys);
	types_1(&mut tys);
	types_2(&mut tys);
	types_3(&mut tys);
	types_4(&mut tys);
	types_5(&mut tys);
	types_6(&mut tys);
	types_7(&mut tys);
	types_8(&mut tys);
	types_9(&mut tys);
	types_10(&mut tys);
	types_11(&mut tys);
	types_12(&mut tys);
	types_13(&mut tys);
	types_14(&mut tys);
	tys
}

pub static REVISION : &str = "3fd1a46c965392aca9a6851d82322f5273dee532";
