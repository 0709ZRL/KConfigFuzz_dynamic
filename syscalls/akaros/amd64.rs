//! System call information of akaros/amd64
//! AUTOGENERATED FILE. DO NOT EDIT.
use std::rc::Rc;
use hlang::ast::*;


const OS: &str = "akaros";
const ARCH: &str = "amd64";
const PTR_SIZE: usize = 8;
const PARGE_SIZE: usize = 4096;
const NUM_PARGS: usize = 4096;
const DATA_OFFSET: usize = 536870912;
const LITTLE_ENDIAN: bool = true;

fn syscalls_0(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(0, 31, "abort_sysc", "abort_sysc", 0, vec![Param::new("sysc", tys[184].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1, 33, "abort_sysc_fd", "abort_sysc_fd", 0, vec![Param::new("fd", tys[370].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2, 108, "access", "access", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("mode", tys[174].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(3, 2, "block", "block", 0, vec![Param::new("usec", tys[184].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(4, 3, "cache_invalidate", "cache_invalidate", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(5, 29, "change_to_m", "change_to_m", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(6, 14, "change_vcore", "change_vcore", 0, vec![Param::new("vcoreid", tys[180].clone(), None), Param::new("enable_my_notif", tys[179].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(7, 116, "chdir", "chdir", 0, vec![Param::new("pid", tys[371].clone(), None), Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(8, 103, "close", "close", 0, vec![Param::new("fd", tys[370].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(9, 125, "dup_fds_to", "dup_fds_to", 0, vec![Param::new("pid", tys[371].clone(), None), Param::new("map", tys[204].clone(), None), Param::new("nentries", tys[189].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(10, 16, "exec", "exec", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("argenv", tys[220].clone(), None), Param::new("argenv_l", tys[187].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(11, 124, "fchdir", "fchdir", 0, vec![Param::new("pid", tys[371].clone(), None), Param::new("fd", tys[370].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(12, 107, "fcntl$F_DUPFD", "fcntl", 0, vec![Param::new("fd", tys[370].clone(), None), Param::new("cmd", tys[160].clone(), None), Param::new("arg", tys[370].clone(), None), Param::new("must_use_low", tys[183].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(13, 107, "fcntl$F_GETFD", "fcntl", 2, vec![Param::new("fd", tys[370].clone(), None), Param::new("cmd", tys[156].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(14, 107, "fcntl$F_GETFL", "fcntl", 2, vec![Param::new("fd", tys[370].clone(), None), Param::new("cmd", tys[158].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(15, 107, "fcntl$F_SETFD", "fcntl", 1, vec![Param::new("fd", tys[370].clone(), None), Param::new("cmd", tys[157].clone(), None), Param::new("flags", tys[169].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(16, 107, "fcntl$F_SETFL", "fcntl", 1, vec![Param::new("fd", tys[370].clone(), None), Param::new("cmd", tys[159].clone(), None), Param::new("flags", tys[170].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(17, 107, "fcntl$F_SYNC", "fcntl", 2, vec![Param::new("fd", tys[370].clone(), None), Param::new("cmd", tys[154].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(18, 149, "fd2path", "fd2path", 0, vec![Param::new("fd", tys[370].clone(), None), Param::new("u_buf", tys[357].clone(), None), Param::new("len", tys[198].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(19, 15, "fork", "fork", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(20, 104, "fstat", "fstat", 0, vec![Param::new("fd", tys[370].clone(), None), Param::new("statbuf", tys[358].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(21, 122, "fwstat", "fwstat", 0, vec![Param::new("fd", tys[370].clone(), None), Param::new("stat_m", tys[357].clone(), None), Param::new("stat_sz", tys[185].clone(), None), Param::new("flags", tys[160].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(22, 117, "getcwd", "getcwd", 0, vec![Param::new("buf", tys[357].clone(), None), Param::new("size", tys[188].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(23, 7, "getpcoreid", "getpcoreid", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(24, 8, "getvcoreid", "getvcoreid", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(25, 27, "halt_core", "halt_core", 0, vec![Param::new("usec", tys[184].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(26, 112, "link", "link", 0, vec![Param::new("old", tys[251].clone(), None), Param::new("old_l", tys[192].clone(), None), Param::new("new", tys[251].clone(), None), Param::new("new_l", tys[190].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(27, 111, "llseek", "llseek", 0, vec![Param::new("fd", tys[370].clone(), None), Param::new("offset_hi", tys[184].clone(), None), Param::new("offset_lo", tys[184].clone(), None), Param::new("result", tys[359].clone(), None), Param::new("whence", tys[168].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(28, 106, "lstat", "lstat", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("statbuf", tys[358].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(29, 118, "mkdir", "mkdir", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("mode", tys[174].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(30, 18, "mmap", "mmap", 0, vec![Param::new("addr", tys[373].clone(), None), Param::new("len", tys[186].clone(), None), Param::new("prot", tys[173].clone(), None), Param::new("flags", tys[172].clone(), None), Param::new("fd", tys[369].clone(), None), Param::new("offset", tys[184].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(31, 20, "mprotect", "mprotect", 0, vec![Param::new("addr", tys[373].clone(), None), Param::new("len", tys[186].clone(), None), Param::new("prot", tys[173].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(32, 19, "munmap", "munmap", 0, vec![Param::new("addr", tys[373].clone(), None), Param::new("len", tys[186].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(33, 36, "nanosleep", "nanosleep", 0, vec![Param::new("req", tys[331].clone(), None), Param::new("rem", tys[356].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(34, 145, "nbind", "nbind", 0, vec![Param::new("src_path", tys[251].clone(), None), Param::new("src_l", tys[196].clone(), None), Param::new("onto_path", tys[251].clone(), None), Param::new("onto_l", tys[194].clone(), None), Param::new("flag", tys[163].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(35, 146, "nmount", "nmount", 0, vec![Param::new("fd", tys[370].clone(), None), Param::new("onto_path", tys[251].clone(), None), Param::new("onto_l", tys[194].clone(), None), Param::new("lag", tys[163].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(36, 25, "notify", "notify", 0, vec![Param::new("target_pid", tys[371].clone(), None), Param::new("ev_type", tys[165].clone(), None), Param::new("u_msg", tys[332].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(37, 147, "nunmount", "nunmount", 0, vec![Param::new("src_path", tys[251].clone(), None), Param::new("src_l", tys[196].clone(), None), Param::new("onto_path", tys[251].clone(), None), Param::new("onto_l", tys[194].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(38, 102, "openat", "openat", 0, vec![Param::new("fromfd", tys[369].clone(), None), Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[167].clone(), None), Param::new("mode", tys[174].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(39, 102, "openat$dev_bintime", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[333].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(40, 102, "openat$dev_caphash", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[334].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(41, 102, "openat$dev_capuse", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[335].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(42, 102, "openat$dev_config", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[336].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(43, 102, "openat$dev_cputime", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[337].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(44, 102, "openat$dev_drivers", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[338].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(45, 102, "openat$dev_empty", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[339].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(46, 102, "openat$dev_hostdomain", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[340].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(47, 102, "openat$dev_hostowner", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[341].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(48, 102, "openat$dev_killkid", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[342].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(49, 102, "openat$dev_klog", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[343].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(50, 102, "openat$dev_kmesg", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[344].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(51, 102, "openat$dev_kprint", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[345].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(52, 102, "openat$dev_null", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[346].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(53, 102, "openat$dev_osversion", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[347].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(54, 102, "openat$dev_pgrpid", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[348].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(55, 102, "openat$dev_pid", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[349].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(56, 102, "openat$dev_ppid", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[350].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(57, 102, "openat$dev_random", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[351].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(58, 102, "openat$dev_sdctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[352].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(59, 102, "openat$dev_stderr", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[353].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(60, 102, "openat$dev_stdin", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[354].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(61, 102, "openat$dev_stdout", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[199].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(62, 102, "openat$dev_swap", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[200].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(63, 102, "openat$dev_sysctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[201].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_1(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(64, 102, "openat$dev_sysname", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[202].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(65, 102, "openat$dev_sysstat", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[203].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(66, 102, "openat$dev_time", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[205].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(67, 102, "openat$dev_urandom", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[206].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(68, 102, "openat$dev_user", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[207].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(69, 102, "openat$dev_zero", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[208].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(70, 102, "openat$net_arp", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[209].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(71, 102, "openat$net_cs", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[210].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(72, 102, "openat$net_empty", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[211].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(73, 102, "openat$net_ether0_0_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[212].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(74, 102, "openat$net_ether0_0_data", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[213].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(75, 102, "openat$net_ether0_0_ifstats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[214].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(76, 102, "openat$net_ether0_0_stats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[215].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(77, 102, "openat$net_ether0_0_type", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[216].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(78, 102, "openat$net_ether0_1_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[217].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(79, 102, "openat$net_ether0_1_data", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[218].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(80, 102, "openat$net_ether0_1_ifstats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[219].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(81, 102, "openat$net_ether0_1_stats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[221].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(82, 102, "openat$net_ether0_1_type", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[222].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(83, 102, "openat$net_ether0_2_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[223].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(84, 102, "openat$net_ether0_2_data", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[224].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(85, 102, "openat$net_ether0_2_ifstats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[225].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(86, 102, "openat$net_ether0_2_stats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[226].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(87, 102, "openat$net_ether0_2_type", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[227].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(88, 102, "openat$net_ether0_addr", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[228].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(89, 102, "openat$net_ether0_clone", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[229].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(90, 102, "openat$net_ether0_ifstats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[230].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(91, 102, "openat$net_ether0_stats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[231].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(92, 102, "openat$net_icmp_clone", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[232].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(93, 102, "openat$net_icmp_stats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[233].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(94, 102, "openat$net_icmpv6_clone", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[234].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(95, 102, "openat$net_icmpv6_stats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[235].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(96, 102, "openat$net_ipifc_0_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[236].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(97, 102, "openat$net_ipifc_0_data", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[237].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(98, 102, "openat$net_ipifc_0_err", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[238].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(99, 102, "openat$net_ipifc_0_listen", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[239].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(100, 102, "openat$net_ipifc_0_local", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[240].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(101, 102, "openat$net_ipifc_0_remote", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[241].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(102, 102, "openat$net_ipifc_0_snoop", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[242].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(103, 102, "openat$net_ipifc_0_status", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[243].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(104, 102, "openat$net_ipifc_1_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[244].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(105, 102, "openat$net_ipifc_1_data", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[245].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(106, 102, "openat$net_ipifc_1_err", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[246].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(107, 102, "openat$net_ipifc_1_listen", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[247].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(108, 102, "openat$net_ipifc_1_local", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[248].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(109, 102, "openat$net_ipifc_1_remote", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[249].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(110, 102, "openat$net_ipifc_1_snoop", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[250].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(111, 102, "openat$net_ipifc_1_status", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[252].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(112, 102, "openat$net_ipifc_clone", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[253].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(113, 102, "openat$net_ipifc_stats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[254].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(114, 102, "openat$net_iproute", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[255].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(115, 102, "openat$net_iprouter", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[256].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(116, 102, "openat$net_ipselftab", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[257].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(117, 102, "openat$net_log", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[258].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(118, 102, "openat$net_ndb", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[259].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(119, 102, "openat$net_tcp_0_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[260].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(120, 102, "openat$net_tcp_0_data", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[261].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(121, 102, "openat$net_tcp_0_err", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[262].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(122, 102, "openat$net_tcp_0_listen", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[263].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(123, 102, "openat$net_tcp_0_local", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[264].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(124, 102, "openat$net_tcp_0_remote", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[265].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(125, 102, "openat$net_tcp_0_status", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[266].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(126, 102, "openat$net_tcp_1_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[267].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(127, 102, "openat$net_tcp_1_data", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[268].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_2(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(128, 102, "openat$net_tcp_1_err", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[269].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(129, 102, "openat$net_tcp_1_listen", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[270].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(130, 102, "openat$net_tcp_1_local", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[271].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(131, 102, "openat$net_tcp_1_remote", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[272].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(132, 102, "openat$net_tcp_1_status", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[273].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(133, 102, "openat$net_tcp_2_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[274].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(134, 102, "openat$net_tcp_2_data", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[275].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(135, 102, "openat$net_tcp_2_err", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[276].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(136, 102, "openat$net_tcp_2_listen", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[277].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(137, 102, "openat$net_tcp_2_local", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[278].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(138, 102, "openat$net_tcp_2_remote", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[279].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(139, 102, "openat$net_tcp_2_status", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[280].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(140, 102, "openat$net_tcp_clone", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[281].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(141, 102, "openat$net_tcp_stats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[283].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(142, 102, "openat$net_udp_0_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[284].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(143, 102, "openat$net_udp_0_data", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[285].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(144, 102, "openat$net_udp_0_err", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[286].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(145, 102, "openat$net_udp_0_listen", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[287].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(146, 102, "openat$net_udp_0_local", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[288].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(147, 102, "openat$net_udp_0_remote", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[289].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(148, 102, "openat$net_udp_0_status", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[290].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(149, 102, "openat$net_udp_clone", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[291].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(150, 102, "openat$net_udp_stats", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[292].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(151, 102, "openat$proc_self_args", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[293].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(152, 102, "openat$proc_self_core", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[294].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(153, 102, "openat$proc_self_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[295].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(154, 102, "openat$proc_self_fd", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[296].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(155, 102, "openat$proc_self_fpregs", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[297].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(156, 102, "openat$proc_self_maps", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[298].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(157, 102, "openat$proc_self_mem", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[299].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(158, 102, "openat$proc_self_note", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[300].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(159, 102, "openat$proc_self_noteid", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[301].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(160, 102, "openat$proc_self_notepg", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[302].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(161, 102, "openat$proc_self_ns", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[303].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(162, 102, "openat$proc_self_proc", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[304].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(163, 102, "openat$proc_self_profile", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[305].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(164, 102, "openat$proc_self_segment", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[306].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(165, 102, "openat$proc_self_status", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[307].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(166, 102, "openat$proc_self_strace", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[308].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(167, 102, "openat$proc_self_strace_traceset", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[309].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(168, 102, "openat$proc_self_syscall", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[310].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(169, 102, "openat$proc_self_text", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[311].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(170, 102, "openat$proc_self_user", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[312].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(171, 102, "openat$proc_self_vmstatus", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[313].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(172, 102, "openat$proc_self_wait", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[314].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[156].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(173, 102, "openat$prof_empty", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[315].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(174, 102, "openat$prof_kpctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[316].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(175, 102, "openat$prof_kpdata", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[317].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(176, 102, "openat$prof_kprintx", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[318].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(177, 102, "openat$prof_kptrace", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[319].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(178, 102, "openat$prof_kptrace_ctl", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[320].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(179, 102, "openat$prof_mpstat", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[321].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(180, 102, "openat$prof_mpstat_raw", "openat", 0, vec![Param::new("fromfd", tys[155].clone(), None), Param::new("path", tys[322].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("oflag", tys[158].clone(), None), Param::new("mode", tys[160].clone(), None), ], Some(tys[370].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(181, 30, "poke_ksched", "poke_ksched", 0, vec![Param::new("target_pid", tys[371].clone(), None), Param::new("res_type", tys[160].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(182, 37, "pop_ctx", "pop_ctx", 0, vec![Param::new("ctx", tys[323].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(183, 32, "populate_va", "populate_va", 0, vec![Param::new("va", tys[373].clone(), None), Param::new("nr_pgs", tys[184].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(184, 10, "proc_create", "proc_create", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("argenv", tys[220].clone(), None), Param::new("argenv_l", tys[187].clone(), None), Param::new("flags", tys[183].clone(), None), ], Some(tys[372].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(185, 12, "proc_destroy", "proc_destroy", 0, vec![Param::new("pid", tys[371].clone(), None), Param::new("exitcode", tys[180].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(186, 11, "proc_run", "proc_run", 0, vec![Param::new("pid", tys[371].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(187, 13, "proc_yield", "proc_yield", 0, vec![Param::new("being_nice", tys[179].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(188, 24, "provision", "provision", 0, vec![Param::new("target_pid", tys[371].clone(), None), Param::new("res_type", tys[160].clone(), None), Param::new("res_val", tys[184].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(189, 100, "read", "read", 0, vec![Param::new("fd", tys[370].clone(), None), Param::new("buf", tys[357].clone(), None), Param::new("count", tys[188].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(190, 115, "readlink", "readlink", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("buf", tys[357].clone(), None), Param::new("siz", tys[188].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(191, 123, "rename", "rename", 0, vec![Param::new("old_path", tys[251].clone(), None), Param::new("old_path_l", tys[193].clone(), None), Param::new("new_path", tys[251].clone(), None), Param::new("new_path_l", tys[191].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_3(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(192, 119, "rmdir", "rmdir", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(193, 26, "self_notify", "self_notify", 0, vec![Param::new("vcoreid", tys[180].clone(), None), Param::new("ev_type", tys[165].clone(), None), Param::new("u_msg", tys[332].clone(), None), Param::new("priv", tys[179].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(194, 39, "send_event", "send_event", 0, vec![Param::new("ev_q", tys[325].clone(), None), Param::new("u_msg", tys[332].clone(), None), Param::new("vcoreid", tys[180].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(195, 105, "stat", "stat", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("statbuf", tys[358].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(196, 114, "symlink", "symlink", 0, vec![Param::new("old", tys[251].clone(), None), Param::new("old_l", tys[192].clone(), None), Param::new("new", tys[251].clone(), None), Param::new("new_l", tys[190].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(197, 0, "syz_builtin0", "syz_builtin0", 0, vec![Param::new("a", tys[327].clone(), None), ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(198, 0, "syz_builtin1", "syz_builtin1", 0, vec![Param::new("a", tys[360].clone(), None), ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(199, 0, "syz_execute_func", "syz_execute_func", 0, vec![Param::new("text", tys[328].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(200, 126, "tap_fds", "tap_fds", 0, vec![Param::new("tap_reqs", tys[329].clone(), None), Param::new("nr_reqs", tys[197].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(201, 141, "tcgetattr", "tcgetattr", 0, vec![Param::new("fd", tys[370].clone(), None), Param::new("termios_p", tys[361].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(202, 109, "umask", "umask", 0, vec![Param::new("mask", tys[180].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(203, 113, "unlink", "unlink", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(204, 35, "vc_entry", "vc_entry", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(205, 34, "vmm_add_gpcs", "vmm_add_gpcs", 0, vec![Param::new("nr_more_gpcs", tys[184].clone(), None), Param::new("gpcis", tys[330].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(206, 40, "vmm_ctl$VMM_CTL_GET_EXITS", "vmm_ctl", 1, vec![Param::new("cmd", tys[156].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(207, 40, "vmm_ctl$VMM_CTL_GET_FLAGS", "vmm_ctl", 1, vec![Param::new("cmd", tys[158].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(208, 40, "vmm_ctl$VMM_CTL_SET_EXITS", "vmm_ctl", 0, vec![Param::new("cmd", tys[157].clone(), None), Param::new("arg", tys[175].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(209, 40, "vmm_ctl$VMM_CTL_SET_FLAGS", "vmm_ctl", 0, vec![Param::new("cmd", tys[159].clone(), None), Param::new("arg", tys[176].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(210, 38, "vmm_poke_guest", "vmm_poke_guest", 0, vec![Param::new("guest_pcoreid", tys[180].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(211, 17, "waitpid", "waitpid", 0, vec![Param::new("pid", tys[372].clone(), None), Param::new("status", tys[362].clone(), None), Param::new("options", tys[177].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(212, 101, "write", "write", 0, vec![Param::new("fd", tys[370].clone(), None), Param::new("buf", tys[282].clone(), None), Param::new("count", tys[188].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(213, 121, "wstat", "wstat", 0, vec![Param::new("path", tys[251].clone(), None), Param::new("path_l", tys[195].clone(), None), Param::new("stat_m", tys[357].clone(), None), Param::new("stat_sz", tys[185].clone(), None), Param::new("flags", tys[160].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
pub fn syscalls() -> (Vec<Syscall>, Vec<Rc<Type>>){
	let tys = types();
	let mut calls = Vec::new();
	syscalls_0(&mut calls, &tys[..]);
	syscalls_1(&mut calls, &tys[..]);
	syscalls_2(&mut calls, &tys[..]);
	syscalls_3(&mut calls, &tys[..]);
	(calls, tys)
}

fn types_0(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(0, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(376), range:None})));
	tys.push(Rc::new(Type::new(1, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(375), range:None})));
	tys.push(Rc::new(Type::new(2, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(379), range:None})));
	tys.push(Rc::new(Type::new(3, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRand, ""))));
	tys.push(Rc::new(Type::new(4, "array", 120, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(120, 120), ""))));
	tys.push(Rc::new(Type::new(5, "array", 216, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(216, 216), ""))));
	tys.push(Rc::new(Type::new(6, "array", 60, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(60, 60), ""))));
	tys.push(Rc::new(Type::new(7, "array", 80, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(80, 80), ""))));
	tys.push(Rc::new(Type::new(8, "filename", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))));
	tys.push(Rc::new(Type::new(9, "string", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_str(vec![], false), ""))));
	tys.push(Rc::new(Type::new(10, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/klog\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(11, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/null\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(12, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/ppid\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(13, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/swap\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(14, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/time\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(15, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/user\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(16, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/zero\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(17, "string", 11, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/kmesg\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(18, "string", 11, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/sdctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(19, "string", 11, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/stdin\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(20, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/.empty\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(21, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/capuse\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(22, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/config\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(23, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/kprint\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(24, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/pgrpid\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(25, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/random\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(26, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/stderr\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(27, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/stdout\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(28, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/sysctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(29, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/.empty\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(30, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/prof/kpctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(31, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/bintime\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(32, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/caphash\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(33, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/cputime\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(34, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/drivers\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(35, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/killkid\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(36, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/sysname\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(37, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/sysstat\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(38, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/urandom\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(39, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/iproute\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(40, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/prof/.empty\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(41, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/prof/kpdata\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(42, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/prof/mpstat\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(43, "string", 14, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/iprouter\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(44, "string", 14, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/fd\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(45, "string", 14, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/ns\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(46, "string", 14, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/prof/kprintx\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(47, "string", 14, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/prof/kptrace\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(48, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/hostowner\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(49, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/osversion\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(50, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipselftab\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(51, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/0/ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(52, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/0/err\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(53, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/1/ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(54, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/1/err\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(55, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/2/ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(56, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/2/err\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(57, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/clone\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(58, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/stats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(59, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/udp/0/ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(60, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/udp/0/err\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(61, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/udp/clone\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(62, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/udp/stats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(63, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/ctl\x00"##, ], false), ""))));
}
fn types_1(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(64, "string", 15, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/mem\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(65, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/hostdomain\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(66, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/icmp/clone\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(67, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/icmp/stats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(68, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/0/data\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(69, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/1/data\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(70, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/2/data\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(71, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/udp/0/data\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(72, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/args\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(73, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/core\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(74, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/maps\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(75, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/note\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(76, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/proc\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(77, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/text\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(78, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/user\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(79, "string", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/wait\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(80, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/addr\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(81, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/0/ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(82, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/0/err\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(83, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/1/ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(84, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/1/err\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(85, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/clone\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(86, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/stats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(87, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/0/local\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(88, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/1/local\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(89, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/2/local\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(90, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/udp/0/local\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(91, "string", 17, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/prof/mpstat-raw\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(92, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/0/ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(93, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/1/ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(94, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/2/ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(95, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/clone\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(96, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/stats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(97, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/icmpv6/clone\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(98, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/icmpv6/stats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(99, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/0/data\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(100, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/1/data\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(101, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/0/listen\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(102, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/0/remote\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(103, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/0/status\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(104, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/1/listen\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(105, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/1/remote\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(106, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/1/status\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(107, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/2/listen\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(108, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/2/remote\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(109, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/tcp/2/status\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(110, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/udp/0/listen\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(111, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/udp/0/remote\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(112, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/udp/0/status\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(113, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/fpregs\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(114, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/noteid\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(115, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/notepg\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(116, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/status\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(117, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/strace\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(118, "string", 18, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/prof/kptrace_ctl\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(119, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/0/data\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(120, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/0/type\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(121, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/1/data\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(122, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/1/type\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(123, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/2/data\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(124, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/2/type\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(125, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/0/local\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(126, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/0/snoop\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(127, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/1/local\x00"##, ], false), ""))));
}
fn types_2(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(128, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/1/snoop\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(129, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/profile\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(130, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/segment\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(131, "string", 19, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/syscall\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(132, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/0/stats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(133, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/1/stats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(134, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/2/stats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(135, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/ifstats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(136, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/0/listen\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(137, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/0/remote\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(138, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/0/status\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(139, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/1/listen\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(140, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/1/remote\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(141, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ipifc/1/status\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(142, "string", 20, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/vmstatus\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(143, "string", 22, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/0/ifstats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(144, "string", 22, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/1/ifstats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(145, "string", 22, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ether0/2/ifstats\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(146, "string", 27, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/proc/self/strace_traceset\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(147, "string", 8, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/cs\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(148, "string", 9, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/pid\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(149, "string", 9, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/arp\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(150, "string", 9, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/log\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(151, "string", 9, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/net/ndb\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(152, "text", 0, 1, false, true, TypeKind::new_buffer(BufferKind::Text(TextKind::Target),""))));
	tys.push(Rc::new(Type::new(153, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(154, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 101, pad: false})));
	tys.push(Rc::new(Type::new(155, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 18446744073709551516, pad: false})));
	tys.push(Rc::new(Type::new(156, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(157, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})));
	tys.push(Rc::new(Type::new(158, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3, pad: false})));
	tys.push(Rc::new(Type::new(159, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4, pad: false})));
	tys.push(Rc::new(Type::new(160, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(161, "pad", 3, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(162, "pad", 4, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(163, "bind_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, 16, ], false))));
	tys.push(Rc::new(Type::new(164, "event_type", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 50, ], false))));
	tys.push(Rc::new(Type::new(165, "event_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 50, ], false))));
	tys.push(Rc::new(Type::new(166, "fdtap_commands", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(167, "open_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 64, 128, 256, 512, 1024, 2048, 4096, 32768, 65536, 131072, 524288, 1048576, ], false))));
	tys.push(Rc::new(Type::new(168, "seek_whence", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(169, "fcntl_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(170, "fcntl_status", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1024, 2048, 32768, 524288, 1048576, ], true))));
	tys.push(Rc::new(Type::new(171, "fdtap_filters", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, ], true))));
	tys.push(Rc::new(Type::new(172, "mmap_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 16, 32, 256, 2048, 4096, 8192, 16384, 32768, 65536, 131072, ], true))));
	tys.push(Rc::new(Type::new(173, "mmap_prot", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 16777216, 33554432, ], true))));
	tys.push(Rc::new(Type::new(174, "open_mode", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, ], true))));
	tys.push(Rc::new(Type::new(175, "vmm_exits", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(176, "vmm_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, ], true))));
	tys.push(Rc::new(Type::new(177, "wait_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(178, "int16", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(179, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((0, 1)), align: 0})));
	tys.push(Rc::new(Type::new(180, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(181, "int64", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(182, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((0, 1)), align: 0})));
	tys.push(Rc::new(Type::new(183, "intptr", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((0, 1)), align: 0})));
	tys.push(Rc::new(Type::new(184, "intptr", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(185, "bytesize", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["stat_m", ]))));
	tys.push(Rc::new(Type::new(186, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["addr", ]))));
	tys.push(Rc::new(Type::new(187, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["argenv", ]))));
	tys.push(Rc::new(Type::new(188, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["buf", ]))));
	tys.push(Rc::new(Type::new(189, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["map", ]))));
	tys.push(Rc::new(Type::new(190, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["new", ]))));
	tys.push(Rc::new(Type::new(191, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["new_path", ]))));
}
fn types_3(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(192, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["old", ]))));
	tys.push(Rc::new(Type::new(193, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["old_path", ]))));
	tys.push(Rc::new(Type::new(194, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["onto_path", ]))));
	tys.push(Rc::new(Type::new(195, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["path", ]))));
	tys.push(Rc::new(Type::new(196, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["src_path", ]))));
	tys.push(Rc::new(Type::new(197, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["tap_reqs", ]))));
	tys.push(Rc::new(Type::new(198, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["u_buf", ]))));
	tys.push(Rc::new(Type::new(199, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(27)})));
	tys.push(Rc::new(Type::new(200, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(13)})));
	tys.push(Rc::new(Type::new(201, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(28)})));
	tys.push(Rc::new(Type::new(202, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(36)})));
	tys.push(Rc::new(Type::new(203, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(37)})));
	tys.push(Rc::new(Type::new(204, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(0)})));
	tys.push(Rc::new(Type::new(205, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(14)})));
	tys.push(Rc::new(Type::new(206, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(38)})));
	tys.push(Rc::new(Type::new(207, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(15)})));
	tys.push(Rc::new(Type::new(208, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(16)})));
	tys.push(Rc::new(Type::new(209, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(149)})));
	tys.push(Rc::new(Type::new(210, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(147)})));
	tys.push(Rc::new(Type::new(211, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(29)})));
	tys.push(Rc::new(Type::new(212, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(92)})));
	tys.push(Rc::new(Type::new(213, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(119)})));
	tys.push(Rc::new(Type::new(214, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(143)})));
	tys.push(Rc::new(Type::new(215, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(132)})));
	tys.push(Rc::new(Type::new(216, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(120)})));
	tys.push(Rc::new(Type::new(217, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(93)})));
	tys.push(Rc::new(Type::new(218, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(121)})));
	tys.push(Rc::new(Type::new(219, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(144)})));
	tys.push(Rc::new(Type::new(220, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(9)})));
	tys.push(Rc::new(Type::new(221, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(133)})));
	tys.push(Rc::new(Type::new(222, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(122)})));
	tys.push(Rc::new(Type::new(223, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(94)})));
	tys.push(Rc::new(Type::new(224, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(123)})));
	tys.push(Rc::new(Type::new(225, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(145)})));
	tys.push(Rc::new(Type::new(226, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(134)})));
	tys.push(Rc::new(Type::new(227, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(124)})));
	tys.push(Rc::new(Type::new(228, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(80)})));
	tys.push(Rc::new(Type::new(229, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(95)})));
	tys.push(Rc::new(Type::new(230, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(135)})));
	tys.push(Rc::new(Type::new(231, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(96)})));
	tys.push(Rc::new(Type::new(232, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(66)})));
	tys.push(Rc::new(Type::new(233, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(67)})));
	tys.push(Rc::new(Type::new(234, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(97)})));
	tys.push(Rc::new(Type::new(235, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(98)})));
	tys.push(Rc::new(Type::new(236, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(81)})));
	tys.push(Rc::new(Type::new(237, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(99)})));
	tys.push(Rc::new(Type::new(238, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(82)})));
	tys.push(Rc::new(Type::new(239, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(136)})));
	tys.push(Rc::new(Type::new(240, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(125)})));
	tys.push(Rc::new(Type::new(241, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(137)})));
	tys.push(Rc::new(Type::new(242, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(126)})));
	tys.push(Rc::new(Type::new(243, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(138)})));
	tys.push(Rc::new(Type::new(244, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(83)})));
	tys.push(Rc::new(Type::new(245, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(100)})));
	tys.push(Rc::new(Type::new(246, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(84)})));
	tys.push(Rc::new(Type::new(247, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(139)})));
	tys.push(Rc::new(Type::new(248, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(127)})));
	tys.push(Rc::new(Type::new(249, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(140)})));
	tys.push(Rc::new(Type::new(250, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(128)})));
	tys.push(Rc::new(Type::new(251, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(8)})));
	tys.push(Rc::new(Type::new(252, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(141)})));
	tys.push(Rc::new(Type::new(253, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(85)})));
	tys.push(Rc::new(Type::new(254, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(86)})));
	tys.push(Rc::new(Type::new(255, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(39)})));
}
fn types_4(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(256, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(43)})));
	tys.push(Rc::new(Type::new(257, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(50)})));
	tys.push(Rc::new(Type::new(258, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(150)})));
	tys.push(Rc::new(Type::new(259, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(151)})));
	tys.push(Rc::new(Type::new(260, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(51)})));
	tys.push(Rc::new(Type::new(261, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(68)})));
	tys.push(Rc::new(Type::new(262, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(52)})));
	tys.push(Rc::new(Type::new(263, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(101)})));
	tys.push(Rc::new(Type::new(264, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(87)})));
	tys.push(Rc::new(Type::new(265, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(102)})));
	tys.push(Rc::new(Type::new(266, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(103)})));
	tys.push(Rc::new(Type::new(267, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(53)})));
	tys.push(Rc::new(Type::new(268, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(69)})));
	tys.push(Rc::new(Type::new(269, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(54)})));
	tys.push(Rc::new(Type::new(270, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(104)})));
	tys.push(Rc::new(Type::new(271, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(88)})));
	tys.push(Rc::new(Type::new(272, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(105)})));
	tys.push(Rc::new(Type::new(273, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(106)})));
	tys.push(Rc::new(Type::new(274, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(55)})));
	tys.push(Rc::new(Type::new(275, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(70)})));
	tys.push(Rc::new(Type::new(276, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(56)})));
	tys.push(Rc::new(Type::new(277, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(107)})));
	tys.push(Rc::new(Type::new(278, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(89)})));
	tys.push(Rc::new(Type::new(279, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(108)})));
	tys.push(Rc::new(Type::new(280, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(109)})));
	tys.push(Rc::new(Type::new(281, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(57)})));
	tys.push(Rc::new(Type::new(282, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(3)})));
	tys.push(Rc::new(Type::new(283, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(58)})));
	tys.push(Rc::new(Type::new(284, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(59)})));
	tys.push(Rc::new(Type::new(285, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(71)})));
	tys.push(Rc::new(Type::new(286, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(60)})));
	tys.push(Rc::new(Type::new(287, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(110)})));
	tys.push(Rc::new(Type::new(288, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(90)})));
	tys.push(Rc::new(Type::new(289, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(111)})));
	tys.push(Rc::new(Type::new(290, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(112)})));
	tys.push(Rc::new(Type::new(291, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(61)})));
	tys.push(Rc::new(Type::new(292, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(62)})));
	tys.push(Rc::new(Type::new(293, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(72)})));
	tys.push(Rc::new(Type::new(294, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(73)})));
	tys.push(Rc::new(Type::new(295, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(63)})));
	tys.push(Rc::new(Type::new(296, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(44)})));
	tys.push(Rc::new(Type::new(297, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(113)})));
	tys.push(Rc::new(Type::new(298, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(74)})));
	tys.push(Rc::new(Type::new(299, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(64)})));
	tys.push(Rc::new(Type::new(300, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(75)})));
	tys.push(Rc::new(Type::new(301, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(114)})));
	tys.push(Rc::new(Type::new(302, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(115)})));
	tys.push(Rc::new(Type::new(303, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(45)})));
	tys.push(Rc::new(Type::new(304, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(76)})));
	tys.push(Rc::new(Type::new(305, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(129)})));
	tys.push(Rc::new(Type::new(306, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(130)})));
	tys.push(Rc::new(Type::new(307, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(116)})));
	tys.push(Rc::new(Type::new(308, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(117)})));
	tys.push(Rc::new(Type::new(309, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(146)})));
	tys.push(Rc::new(Type::new(310, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(131)})));
	tys.push(Rc::new(Type::new(311, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(77)})));
	tys.push(Rc::new(Type::new(312, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(78)})));
	tys.push(Rc::new(Type::new(313, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(142)})));
	tys.push(Rc::new(Type::new(314, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(79)})));
	tys.push(Rc::new(Type::new(315, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(40)})));
	tys.push(Rc::new(Type::new(316, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(30)})));
	tys.push(Rc::new(Type::new(317, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(41)})));
	tys.push(Rc::new(Type::new(318, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(46)})));
	tys.push(Rc::new(Type::new(319, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(47)})));
}
fn types_5(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(320, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(118)})));
	tys.push(Rc::new(Type::new(321, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(42)})));
	tys.push(Rc::new(Type::new(322, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(91)})));
	tys.push(Rc::new(Type::new(323, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(5)})));
	tys.push(Rc::new(Type::new(324, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(7)})));
	tys.push(Rc::new(Type::new(325, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(378)})));
	tys.push(Rc::new(Type::new(326, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1)})));
	tys.push(Rc::new(Type::new(327, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(374)})));
	tys.push(Rc::new(Type::new(328, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(152)})));
	tys.push(Rc::new(Type::new(329, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(2)})));
	tys.push(Rc::new(Type::new(330, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(381)})));
	tys.push(Rc::new(Type::new(331, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(380)})));
	tys.push(Rc::new(Type::new(332, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(377)})));
	tys.push(Rc::new(Type::new(333, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(31)})));
	tys.push(Rc::new(Type::new(334, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(32)})));
	tys.push(Rc::new(Type::new(335, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(21)})));
	tys.push(Rc::new(Type::new(336, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(22)})));
	tys.push(Rc::new(Type::new(337, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(33)})));
	tys.push(Rc::new(Type::new(338, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(34)})));
	tys.push(Rc::new(Type::new(339, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(20)})));
	tys.push(Rc::new(Type::new(340, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(65)})));
	tys.push(Rc::new(Type::new(341, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(48)})));
	tys.push(Rc::new(Type::new(342, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(35)})));
	tys.push(Rc::new(Type::new(343, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(10)})));
	tys.push(Rc::new(Type::new(344, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(17)})));
	tys.push(Rc::new(Type::new(345, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(23)})));
	tys.push(Rc::new(Type::new(346, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(11)})));
	tys.push(Rc::new(Type::new(347, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(49)})));
	tys.push(Rc::new(Type::new(348, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(24)})));
	tys.push(Rc::new(Type::new(349, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(148)})));
	tys.push(Rc::new(Type::new(350, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(12)})));
	tys.push(Rc::new(Type::new(351, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(25)})));
	tys.push(Rc::new(Type::new(352, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(18)})));
	tys.push(Rc::new(Type::new(353, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(26)})));
	tys.push(Rc::new(Type::new(354, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(19)})));
	tys.push(Rc::new(Type::new(355, "ptr64", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(1)})));
	tys.push(Rc::new(Type::new(356, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(380)})));
	tys.push(Rc::new(Type::new(357, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(3)})));
	tys.push(Rc::new(Type::new(358, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(4)})));
	tys.push(Rc::new(Type::new(359, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(181)})));
	tys.push(Rc::new(Type::new(360, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(375)})));
	tys.push(Rc::new(Type::new(361, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(6)})));
	tys.push(Rc::new(Type::new(362, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(180)})));
	tys.push(Rc::new(Type::new(363, "ANYRES16", 2, 2, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES16", vec!["ANYRES16", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(364, "ANYRES32", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES32", vec!["ANYRES32", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(365, "ANYRES64", 18, 1, false, false, TypeKind::Res{fmt: BinFmt::StrHex, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(366, "ANYRES64", 20, 1, false, false, TypeKind::Res{fmt: BinFmt::StrDec, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(367, "ANYRES64", 23, 1, false, false, TypeKind::Res{fmt: BinFmt::StrOct, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(368, "ANYRES64", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(369, "fd", 4, 4, true, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd", vec!["fd", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(370, "fd", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd", vec!["fd", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(371, "pid", 4, 4, true, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("pid", vec!["pid", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(372, "pid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("pid", vec!["pid", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(373, "vma", 8, 8, false, false, TypeKind::Vma{begin: 0, end: 0})));
	tys.push(Rc::new(Type::new(374, "ANYPTRS", 8, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYPTR".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("ANYPTR64".to_string()), ty: TypeRef::Id(355), dir: None }, ]))));
	tys.push(Rc::new(Type::new(375, "ANYUNION", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYBLOB".to_string()), ty: TypeRef::Id(3), dir: None }, Field{ name: String::into_boxed_str("ANYRES16".to_string()), ty: TypeRef::Id(363), dir: None }, Field{ name: String::into_boxed_str("ANYRES32".to_string()), ty: TypeRef::Id(364), dir: None }, Field{ name: String::into_boxed_str("ANYRES64".to_string()), ty: TypeRef::Id(368), dir: None }, Field{ name: String::into_boxed_str("ANYRESDEC".to_string()), ty: TypeRef::Id(366), dir: None }, Field{ name: String::into_boxed_str("ANYRESHEX".to_string()), ty: TypeRef::Id(365), dir: None }, Field{ name: String::into_boxed_str("ANYRESOCT".to_string()), ty: TypeRef::Id(367), dir: None }, ]))));
	tys.push(Rc::new(Type::new(376, "childfdmap", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("parentfd".to_string()), ty: TypeRef::Id(370), dir: None }, Field{ name: String::into_boxed_str("childfd".to_string()), ty: TypeRef::Id(153), dir: None }, Field{ name: String::into_boxed_str("ok".to_string()), ty: TypeRef::Id(153), dir: None }, ]))));
	tys.push(Rc::new(Type::new(377, "event_msg", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ev_type".to_string()), ty: TypeRef::Id(164), dir: None }, Field{ name: String::into_boxed_str("ev_arg1".to_string()), ty: TypeRef::Id(178), dir: None }, Field{ name: String::into_boxed_str("ev_arg2".to_string()), ty: TypeRef::Id(180), dir: None }, Field{ name: String::into_boxed_str("ev_arg3".to_string()), ty: TypeRef::Id(282), dir: None }, Field{ name: String::into_boxed_str("ev_arg4".to_string()), ty: TypeRef::Id(181), dir: None }, ]))));
	tys.push(Rc::new(Type::new(378, "event_queue", 40, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ev_mbox".to_string()), ty: TypeRef::Id(324), dir: None }, Field{ name: String::into_boxed_str("ev_flags".to_string()), ty: TypeRef::Id(180), dir: None }, Field{ name: String::into_boxed_str("ev_alert_pending".to_string()), ty: TypeRef::Id(182), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(161), dir: None }, Field{ name: String::into_boxed_str("ev_vcore".to_string()), ty: TypeRef::Id(180), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(162), dir: None }, Field{ name: String::into_boxed_str("ev_handler".to_string()), ty: TypeRef::Id(184), dir: None }, Field{ name: String::into_boxed_str("ev_udata".to_string()), ty: TypeRef::Id(184), dir: None }, ]))));
	tys.push(Rc::new(Type::new(379, "fd_tap_req", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fd".to_string()), ty: TypeRef::Id(370), dir: None }, Field{ name: String::into_boxed_str("cmd".to_string()), ty: TypeRef::Id(166), dir: None }, Field{ name: String::into_boxed_str("filter".to_string()), ty: TypeRef::Id(171), dir: None }, Field{ name: String::into_boxed_str("ev_id".to_string()), ty: TypeRef::Id(180), dir: None }, Field{ name: String::into_boxed_str("ev_q".to_string()), ty: TypeRef::Id(325), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(160), dir: None }, ]))));
	tys.push(Rc::new(Type::new(380, "timespec", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sec".to_string()), ty: TypeRef::Id(184), dir: None }, Field{ name: String::into_boxed_str("nsec".to_string()), ty: TypeRef::Id(184), dir: None }, ]))));
	tys.push(Rc::new(Type::new(381, "vmm_gpcore_init", 40, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("posted_irq_desc".to_string()), ty: TypeRef::Id(282), dir: None }, Field{ name: String::into_boxed_str("vapic_addr".to_string()), ty: TypeRef::Id(282), dir: None }, Field{ name: String::into_boxed_str("apic_addr".to_string()), ty: TypeRef::Id(282), dir: None }, Field{ name: String::into_boxed_str("fsbase".to_string()), ty: TypeRef::Id(282), dir: None }, Field{ name: String::into_boxed_str("gsbase".to_string()), ty: TypeRef::Id(282), dir: None }, ]))));
}
fn types() -> Vec<Rc<Type>>{
	let mut tys = Vec::new();
	types_0(&mut tys);
	types_1(&mut tys);
	types_2(&mut tys);
	types_3(&mut tys);
	types_4(&mut tys);
	types_5(&mut tys);
	tys
}

pub static REVISION : &str = "27eb3a8381b5f12d0a73645b3784337a237e9f6e";
