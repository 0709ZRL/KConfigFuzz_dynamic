//! System call information of windows/amd64
//! AUTOGENERATED FILE. DO NOT EDIT.
use std::rc::Rc;
use hlang::ast::*;


const OS: &str = "windows";
const ARCH: &str = "amd64";
const PTR_SIZE: usize = 8;
const PARGE_SIZE: usize = 4096;
const NUM_PARGS: usize = 4096;
const DATA_OFFSET: usize = 536870912;
const LITTLE_ENDIAN: bool = true;

fn syscalls_0(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(0, 0, "AbortDoc", "AbortDoc", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1, 0, "AbortPath", "AbortPath", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2, 0, "AbortPrinter", "AbortPrinter", 0, vec![Param::new("hPrinter", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(3, 0, "AbortSystemShutdownA", "AbortSystemShutdownA", 0, vec![Param::new("lpMachineName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(4, 0, "AcceptEx", "AcceptEx", 0, vec![Param::new("sListenSocket", tys[14].clone(), None), Param::new("sAcceptSocket", tys[14].clone(), None), Param::new("lpOutputBuffer", tys[37].clone(), None), Param::new("dwReceiveDataLength", tys[13].clone(), None), Param::new("dwLocalAddressLength", tys[13].clone(), None), Param::new("dwRemoteAddressLength", tys[13].clone(), None), Param::new("lpdwBytesReceived", tys[39].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(5, 0, "AccessCheck", "AccessCheck", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("ClientToken", tys[47].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), Param::new("PrivilegeSet", tys[26].clone(), None), Param::new("PrivilegeSetLength", tys[39].clone(), None), Param::new("GrantedAccess", tys[39].clone(), None), Param::new("AccessStatus", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(6, 0, "AccessCheckAndAuditAlarmA", "AccessCheckAndAuditAlarmA", 0, vec![Param::new("SubsystemName", tys[33].clone(), None), Param::new("HandleId", tys[37].clone(), None), Param::new("ObjectTypeName", tys[33].clone(), None), Param::new("ObjectName", tys[33].clone(), None), Param::new("SecurityDescriptor", tys[37].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), Param::new("ObjectCreation", tys[13].clone(), None), Param::new("GrantedAccess", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(7, 0, "AccessCheckByType", "AccessCheckByType", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("PrincipalSelfSid", tys[37].clone(), None), Param::new("ClientToken", tys[47].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("ObjectTypeList", tys[26].clone(), None), Param::new("ObjectTypeListLength", tys[13].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), Param::new("PrivilegeSet", tys[26].clone(), None), Param::new("PrivilegeSetLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(8, 0, "AccessCheckByTypeAndAuditAlarmA", "AccessCheckByTypeAndAuditAlarmA", 0, vec![Param::new("SubsystemName", tys[33].clone(), None), Param::new("HandleId", tys[37].clone(), None), Param::new("ObjectTypeName", tys[33].clone(), None), Param::new("ObjectName", tys[33].clone(), None), Param::new("SecurityDescriptor", tys[37].clone(), None), Param::new("PrincipalSelfSid", tys[37].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("AuditType", tys[13].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(9, 0, "AccessCheckByTypeResultList", "AccessCheckByTypeResultList", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("PrincipalSelfSid", tys[37].clone(), None), Param::new("ClientToken", tys[47].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("ObjectTypeList", tys[26].clone(), None), Param::new("ObjectTypeListLength", tys[13].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), Param::new("PrivilegeSet", tys[26].clone(), None), Param::new("PrivilegeSetLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(10, 0, "AccessCheckByTypeResultListAndAuditAlarmA", "AccessCheckByTypeResultListAndAuditAlarmA", 0, vec![Param::new("SubsystemName", tys[33].clone(), None), Param::new("HandleId", tys[37].clone(), None), Param::new("ObjectTypeName", tys[33].clone(), None), Param::new("ObjectName", tys[33].clone(), None), Param::new("SecurityDescriptor", tys[37].clone(), None), Param::new("PrincipalSelfSid", tys[37].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("AuditType", tys[13].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(11, 0, "AccessCheckByTypeResultListAndAuditAlarmByHandleA", "AccessCheckByTypeResultListAndAuditAlarmByHandleA", 0, vec![Param::new("SubsystemName", tys[33].clone(), None), Param::new("HandleId", tys[37].clone(), None), Param::new("ClientToken", tys[47].clone(), None), Param::new("ObjectTypeName", tys[33].clone(), None), Param::new("ObjectName", tys[33].clone(), None), Param::new("SecurityDescriptor", tys[37].clone(), None), Param::new("PrincipalSelfSid", tys[37].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("AuditType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(12, 0, "AcquireSRWLockExclusive", "AcquireSRWLockExclusive", 0, vec![Param::new("SRWLock", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(13, 0, "AcquireSRWLockShared", "AcquireSRWLockShared", 0, vec![Param::new("SRWLock", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(14, 0, "ActivateActCtx", "ActivateActCtx", 0, vec![Param::new("hActCtx", tys[47].clone(), None), Param::new("lpCookie", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(15, 0, "ActivateKeyboardLayout", "ActivateKeyboardLayout", 0, vec![Param::new("hkl", tys[26].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(16, 0, "AddAccessAllowedAce", "AddAccessAllowedAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(17, 0, "AddAccessAllowedAceEx", "AddAccessAllowedAceEx", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(18, 0, "AddAccessAllowedObjectAce", "AddAccessAllowedObjectAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("ObjectTypeGuid", tys[26].clone(), None), Param::new("InheritedObjectTypeGuid", tys[26].clone(), None), Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(19, 0, "AddAccessDeniedAce", "AddAccessDeniedAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(20, 0, "AddAccessDeniedAceEx", "AddAccessDeniedAceEx", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(21, 0, "AddAccessDeniedObjectAce", "AddAccessDeniedObjectAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("ObjectTypeGuid", tys[26].clone(), None), Param::new("InheritedObjectTypeGuid", tys[26].clone(), None), Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(22, 0, "AddAce", "AddAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("dwStartingAceIndex", tys[13].clone(), None), Param::new("pAceList", tys[37].clone(), None), Param::new("nAceListLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(23, 0, "AddAtomA", "AddAtomA", 0, vec![Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(24, 0, "AddAuditAccessAce", "AddAuditAccessAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("dwAccessMask", tys[13].clone(), None), Param::new("pSid", tys[37].clone(), None), Param::new("bAuditSuccess", tys[13].clone(), None), Param::new("bAuditFailure", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(25, 0, "AddAuditAccessAceEx", "AddAuditAccessAceEx", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("dwAccessMask", tys[13].clone(), None), Param::new("pSid", tys[37].clone(), None), Param::new("bAuditSuccess", tys[13].clone(), None), Param::new("bAuditFailure", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(26, 0, "AddAuditAccessObjectAce", "AddAuditAccessObjectAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("ObjectTypeGuid", tys[26].clone(), None), Param::new("InheritedObjectTypeGuid", tys[26].clone(), None), Param::new("pSid", tys[37].clone(), None), Param::new("bAuditSuccess", tys[13].clone(), None), Param::new("bAuditFailure", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(27, 0, "AddClipboardFormatListener", "AddClipboardFormatListener", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(28, 0, "AddConditionalAce", "AddConditionalAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("AceType", tys[15].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("pSid", tys[37].clone(), None), Param::new("ConditionStr", tys[28].clone(), None), Param::new("ReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(29, 0, "AddConsoleAliasA", "AddConsoleAliasA", 0, vec![Param::new("Source", tys[33].clone(), None), Param::new("Target", tys[33].clone(), None), Param::new("ExeName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(30, 0, "AddDllDirectory", "AddDllDirectory", 0, vec![Param::new("NewDirectory", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(31, 0, "AddFontMemResourceEx", "AddFontMemResourceEx", 0, vec![Param::new("pFileView", tys[37].clone(), None), Param::new("cjSize", tys[13].clone(), None), Param::new("pvResrved", tys[37].clone(), None), Param::new("pNumFonts", tys[39].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(32, 0, "AddFontResourceA", "AddFontResourceA", 0, vec![Param::new("arg0", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(33, 0, "AddFontResourceExA", "AddFontResourceExA", 0, vec![Param::new("name", tys[33].clone(), None), Param::new("fl", tys[13].clone(), None), Param::new("res", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(34, 0, "AddFormA", "AddFormA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pForm", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(35, 0, "AddIntegrityLabelToBoundaryDescriptor", "AddIntegrityLabelToBoundaryDescriptor", 0, vec![Param::new("BoundaryDescriptor", tys[32].clone(), None), Param::new("IntegrityLabel", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(36, 0, "AddJobA", "AddJobA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pData", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(37, 0, "AddMandatoryAce", "AddMandatoryAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("MandatoryPolicy", tys[13].clone(), None), Param::new("pLabelSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(38, 0, "AddMonitorA", "AddMonitorA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pMonitors", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(39, 0, "AddPortA", "AddPortA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("pMonitorName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(40, 0, "AddPrintProcessorA", "AddPrintProcessorA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("pPathName", tys[33].clone(), None), Param::new("pPrintProcessorName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(41, 0, "AddPrintProvidorA", "AddPrintProvidorA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pProvidorInfo", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(42, 0, "AddPrinterA", "AddPrinterA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pPrinter", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(43, 0, "AddPrinterConnection2A", "AddPrinterConnection2A", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("pszName", tys[33].clone(), None), Param::new("dwLevel", tys[13].clone(), None), Param::new("pConnectionInfo", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(44, 0, "AddPrinterConnectionA", "AddPrinterConnectionA", 0, vec![Param::new("pName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(45, 0, "AddPrinterDriverA", "AddPrinterDriverA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pDriverInfo", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(46, 0, "AddPrinterDriverExA", "AddPrinterDriverExA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("lpbDriverInfo", tys[33].clone(), None), Param::new("dwFileCopyFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(47, 0, "AddRefActCtx", "AddRefActCtx", 0, vec![Param::new("hActCtx", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(48, 0, "AddResourceAttributeAce", "AddResourceAttributeAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("pSid", tys[37].clone(), None), Param::new("pAttributeInfo", tys[26].clone(), None), Param::new("pReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(49, 0, "AddSIDToBoundaryDescriptor", "AddSIDToBoundaryDescriptor", 0, vec![Param::new("BoundaryDescriptor", tys[32].clone(), None), Param::new("RequiredSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(50, 0, "AddScopedPolicyIDAce", "AddScopedPolicyIDAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceRevision", tys[13].clone(), None), Param::new("AceFlags", tys[13].clone(), None), Param::new("AccessMask", tys[13].clone(), None), Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(51, 0, "AddSecureMemoryCacheCallback", "AddSecureMemoryCacheCallback", 0, vec![Param::new("pfnCallBack", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(52, 0, "AddUsersToEncryptedFile", "AddUsersToEncryptedFile", 0, vec![Param::new("lpFileName", tys[28].clone(), None), Param::new("pEncryptionCertificates", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(53, 0, "AddVectoredContinueHandler", "AddVectoredContinueHandler", 0, vec![Param::new("First", tys[13].clone(), None), Param::new("Handler", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(54, 0, "AddVectoredExceptionHandler", "AddVectoredExceptionHandler", 0, vec![Param::new("First", tys[13].clone(), None), Param::new("Handler", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(55, 0, "AdjustTokenGroups", "AdjustTokenGroups", 0, vec![Param::new("TokenHandle", tys[47].clone(), None), Param::new("ResetToDefault", tys[13].clone(), None), Param::new("NewState", tys[26].clone(), None), Param::new("BufferLength", tys[13].clone(), None), Param::new("PreviousState", tys[26].clone(), None), Param::new("ReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(56, 0, "AdjustTokenPrivileges", "AdjustTokenPrivileges", 0, vec![Param::new("TokenHandle", tys[47].clone(), None), Param::new("DisableAllPrivileges", tys[13].clone(), None), Param::new("NewState", tys[26].clone(), None), Param::new("BufferLength", tys[13].clone(), None), Param::new("PreviousState", tys[26].clone(), None), Param::new("ReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(57, 0, "AdjustWindowRect", "AdjustWindowRect", 0, vec![Param::new("lpRect", tys[26].clone(), None), Param::new("dwStyle", tys[13].clone(), None), Param::new("bMenu", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(58, 0, "AdjustWindowRectEx", "AdjustWindowRectEx", 0, vec![Param::new("lpRect", tys[26].clone(), None), Param::new("dwStyle", tys[13].clone(), None), Param::new("bMenu", tys[13].clone(), None), Param::new("dwExStyle", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(59, 0, "AdjustWindowRectExForDpi", "AdjustWindowRectExForDpi", 0, vec![Param::new("lpRect", tys[26].clone(), None), Param::new("dwStyle", tys[13].clone(), None), Param::new("bMenu", tys[13].clone(), None), Param::new("dwExStyle", tys[13].clone(), None), Param::new("dpi", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(60, 0, "AdvancedDocumentPropertiesA", "AdvancedDocumentPropertiesA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hPrinter", tys[47].clone(), None), Param::new("pDeviceName", tys[33].clone(), None), Param::new("pDevModeOutput", tys[26].clone(), None), Param::new("pDevModeInput", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(61, 0, "AllocConsole", "AllocConsole", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(62, 0, "AllocateAndInitializeSid", "AllocateAndInitializeSid", 0, vec![Param::new("pIdentifierAuthority", tys[26].clone(), None), Param::new("nSubAuthorityCount", tys[15].clone(), None), Param::new("nSubAuthority0", tys[13].clone(), None), Param::new("nSubAuthority1", tys[13].clone(), None), Param::new("nSubAuthority2", tys[13].clone(), None), Param::new("nSubAuthority3", tys[13].clone(), None), Param::new("nSubAuthority4", tys[13].clone(), None), Param::new("nSubAuthority5", tys[13].clone(), None), Param::new("nSubAuthority6", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(63, 0, "AllocateLocallyUniqueId", "AllocateLocallyUniqueId", 0, vec![Param::new("Luid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_1(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(64, 0, "AllocateUserPhysicalPages", "AllocateUserPhysicalPages", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("NumberOfPages", tys[36].clone(), None), Param::new("PageArray", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(65, 0, "AllocateUserPhysicalPagesNuma", "AllocateUserPhysicalPagesNuma", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("NumberOfPages", tys[36].clone(), None), Param::new("PageArray", tys[36].clone(), None), Param::new("nndPreferred", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(66, 0, "AllowSetForegroundWindow", "AllowSetForegroundWindow", 0, vec![Param::new("dwProcessId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(67, 0, "AlphaBlend", "AlphaBlend", 0, vec![Param::new("hdcDest", tys[26].clone(), None), Param::new("xoriginDest", tys[13].clone(), None), Param::new("yoriginDest", tys[13].clone(), None), Param::new("wDest", tys[13].clone(), None), Param::new("hDest", tys[13].clone(), None), Param::new("hdcSrc", tys[26].clone(), None), Param::new("xoriginSrc", tys[13].clone(), None), Param::new("yoriginSrc", tys[13].clone(), None), Param::new("wSrc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(68, 0, "AngleArc", "AngleArc", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("r", tys[13].clone(), None), Param::new("StartAngle", tys[16].clone(), None), Param::new("SweepAngle", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(69, 0, "AnimatePalette", "AnimatePalette", 0, vec![Param::new("hPal", tys[26].clone(), None), Param::new("iStartIndex", tys[13].clone(), None), Param::new("cEntries", tys[13].clone(), None), Param::new("ppe", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(70, 0, "AnimateWindow", "AnimateWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("dwTime", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(71, 0, "AnyPopup", "AnyPopup", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(72, 0, "AppendMenuA", "AppendMenuA", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uFlags", tys[13].clone(), None), Param::new("uIDNewItem", tys[14].clone(), None), Param::new("lpNewItem", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(73, 0, "ApplicationRecoveryFinished", "ApplicationRecoveryFinished", 0, vec![Param::new("bSuccess", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(74, 0, "ApplicationRecoveryInProgress", "ApplicationRecoveryInProgress", 0, vec![Param::new("pbCancelled", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(75, 0, "Arc", "Arc", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x1", tys[13].clone(), None), Param::new("y1", tys[13].clone(), None), Param::new("x2", tys[13].clone(), None), Param::new("y2", tys[13].clone(), None), Param::new("x3", tys[13].clone(), None), Param::new("y3", tys[13].clone(), None), Param::new("x4", tys[13].clone(), None), Param::new("y4", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(76, 0, "ArcTo", "ArcTo", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("left", tys[13].clone(), None), Param::new("top", tys[13].clone(), None), Param::new("right", tys[13].clone(), None), Param::new("bottom", tys[13].clone(), None), Param::new("xr1", tys[13].clone(), None), Param::new("yr1", tys[13].clone(), None), Param::new("xr2", tys[13].clone(), None), Param::new("yr2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(77, 0, "AreAllAccessesGranted", "AreAllAccessesGranted", 0, vec![Param::new("GrantedAccess", tys[13].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(78, 0, "AreAnyAccessesGranted", "AreAnyAccessesGranted", 0, vec![Param::new("GrantedAccess", tys[13].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(79, 0, "AreDpiAwarenessContextsEqual", "AreDpiAwarenessContextsEqual", 0, vec![Param::new("dpiContextA", tys[26].clone(), None), Param::new("dpiContextB", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(80, 0, "AreFileApisANSI", "AreFileApisANSI", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(81, 0, "ArrangeIconicWindows", "ArrangeIconicWindows", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(82, 0, "AssignProcessToJobObject", "AssignProcessToJobObject", 0, vec![Param::new("hJob", tys[47].clone(), None), Param::new("hProcess", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(83, 0, "AssocCreateForClasses", "AssocCreateForClasses", 0, vec![Param::new("rgClasses", tys[26].clone(), None), Param::new("cClasses", tys[13].clone(), None), Param::new("riid", tys[26].clone(), None), Param::new("ppv", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(84, 0, "AttachConsole", "AttachConsole", 0, vec![Param::new("dwProcessId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(85, 0, "AttachThreadInput", "AttachThreadInput", 0, vec![Param::new("idAttach", tys[13].clone(), None), Param::new("idAttachTo", tys[13].clone(), None), Param::new("fAttach", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(86, 0, "BCryptFreeBuffer", "BCryptFreeBuffer", 0, vec![Param::new("pvBuffer", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(87, 0, "BSTR_UserFree", "BSTR_UserFree", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(88, 0, "BSTR_UserFree64", "BSTR_UserFree64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(89, 0, "BSTR_UserMarshal", "BSTR_UserMarshal", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(90, 0, "BSTR_UserMarshal64", "BSTR_UserMarshal64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(91, 0, "BSTR_UserSize", "BSTR_UserSize", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(92, 0, "BSTR_UserSize64", "BSTR_UserSize64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(93, 0, "BSTR_UserUnmarshal", "BSTR_UserUnmarshal", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(94, 0, "BSTR_UserUnmarshal64", "BSTR_UserUnmarshal64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(95, 0, "BackupEventLogA", "BackupEventLogA", 0, vec![Param::new("hEventLog", tys[47].clone(), None), Param::new("lpBackupFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(96, 0, "BackupRead", "BackupRead", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("nNumberOfBytesToRead", tys[13].clone(), None), Param::new("lpNumberOfBytesRead", tys[39].clone(), None), Param::new("bAbort", tys[13].clone(), None), Param::new("bProcessSecurity", tys[13].clone(), None), Param::new("lpContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(97, 0, "BackupSeek", "BackupSeek", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("dwLowBytesToSeek", tys[13].clone(), None), Param::new("dwHighBytesToSeek", tys[13].clone(), None), Param::new("lpdwLowByteSeeked", tys[39].clone(), None), Param::new("lpdwHighByteSeeked", tys[39].clone(), None), Param::new("lpContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(98, 0, "BackupWrite", "BackupWrite", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("nNumberOfBytesToWrite", tys[13].clone(), None), Param::new("lpNumberOfBytesWritten", tys[39].clone(), None), Param::new("bAbort", tys[13].clone(), None), Param::new("bProcessSecurity", tys[13].clone(), None), Param::new("lpContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(99, 0, "Beep", "Beep", 0, vec![Param::new("dwFreq", tys[13].clone(), None), Param::new("dwDuration", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(100, 0, "BeginDeferWindowPos", "BeginDeferWindowPos", 0, vec![Param::new("nNumWindows", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(101, 0, "BeginPaint", "BeginPaint", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpPaint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(102, 0, "BeginPath", "BeginPath", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(103, 0, "BeginUpdateResourceA", "BeginUpdateResourceA", 0, vec![Param::new("pFileName", tys[33].clone(), None), Param::new("bDeleteExistingResources", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(104, 0, "BindIoCompletionCallback", "BindIoCompletionCallback", 0, vec![Param::new("FileHandle", tys[47].clone(), None), Param::new("Function", tys[26].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(105, 0, "BitBlt", "BitBlt", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("cx", tys[13].clone(), None), Param::new("cy", tys[13].clone(), None), Param::new("hdcSrc", tys[26].clone(), None), Param::new("x1", tys[13].clone(), None), Param::new("y1", tys[13].clone(), None), Param::new("rop", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(106, 0, "BlockInput", "BlockInput", 0, vec![Param::new("fBlockIt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(107, 0, "BringWindowToTop", "BringWindowToTop", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(108, 0, "BroadcastSystemMessageA", "BroadcastSystemMessageA", 0, vec![Param::new("flags", tys[13].clone(), None), Param::new("lpInfo", tys[39].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(109, 0, "BroadcastSystemMessageExA", "BroadcastSystemMessageExA", 0, vec![Param::new("flags", tys[13].clone(), None), Param::new("lpInfo", tys[39].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), Param::new("pbsmInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(110, 0, "BuildCommDCBA", "BuildCommDCBA", 0, vec![Param::new("lpDef", tys[33].clone(), None), Param::new("lpDCB", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(111, 0, "BuildCommDCBAndTimeoutsA", "BuildCommDCBAndTimeoutsA", 0, vec![Param::new("lpDef", tys[33].clone(), None), Param::new("lpDCB", tys[26].clone(), None), Param::new("lpCommTimeouts", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(112, 0, "CalculatePopupWindowPosition", "CalculatePopupWindowPosition", 0, vec![Param::new("anchorPoint", tys[26].clone(), None), Param::new("windowSize", tys[26].clone(), None), Param::new("flags", tys[13].clone(), None), Param::new("excludeRect", tys[26].clone(), None), Param::new("popupWindowPosition", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(113, 0, "CallMsgFilterA", "CallMsgFilterA", 0, vec![Param::new("lpMsg", tys[26].clone(), None), Param::new("nCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(114, 0, "CallNamedPipeA", "CallNamedPipeA", 0, vec![Param::new("lpNamedPipeName", tys[33].clone(), None), Param::new("lpInBuffer", tys[37].clone(), None), Param::new("nInBufferSize", tys[13].clone(), None), Param::new("lpOutBuffer", tys[37].clone(), None), Param::new("nOutBufferSize", tys[13].clone(), None), Param::new("lpBytesRead", tys[39].clone(), None), Param::new("nTimeOut", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(115, 0, "CallNextHookEx", "CallNextHookEx", 0, vec![Param::new("hhk", tys[26].clone(), None), Param::new("nCode", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(116, 0, "CallWindowProcA", "CallWindowProcA", 0, vec![Param::new("lpPrevWndFunc", tys[26].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(117, 0, "CallbackMayRunLong", "CallbackMayRunLong", 0, vec![Param::new("pci", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(118, 0, "CancelDC", "CancelDC", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(119, 0, "CancelDeviceWakeupRequest", "CancelDeviceWakeupRequest", 0, vec![Param::new("hDevice", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(120, 0, "CancelIo", "CancelIo", 0, vec![Param::new("hFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(121, 0, "CancelIoEx", "CancelIoEx", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(122, 0, "CancelShutdown", "CancelShutdown", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(123, 0, "CancelSynchronousIo", "CancelSynchronousIo", 0, vec![Param::new("hThread", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(124, 0, "CancelThreadpoolIo", "CancelThreadpoolIo", 0, vec![Param::new("pio", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(125, 0, "CancelTimerQueueTimer", "CancelTimerQueueTimer", 0, vec![Param::new("TimerQueue", tys[47].clone(), None), Param::new("Timer", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(126, 0, "CancelWaitableTimer", "CancelWaitableTimer", 0, vec![Param::new("hTimer", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(127, 0, "CascadeWindows", "CascadeWindows", 0, vec![Param::new("hwndParent", tys[26].clone(), None), Param::new("wHow", tys[13].clone(), None), Param::new("lpRect", tys[26].clone(), None), Param::new("cKids", tys[13].clone(), None), Param::new("lpKids", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_2(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(128, 0, "CertAddCRLContextToStore", "CertAddCRLContextToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pCrlContext", tys[26].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("ppStoreContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(129, 0, "CertAddCRLLinkToStore", "CertAddCRLLinkToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pCrlContext", tys[26].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("ppStoreContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(130, 0, "CertAddCTLContextToStore", "CertAddCTLContextToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pCtlContext", tys[26].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("ppStoreContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(131, 0, "CertAddCTLLinkToStore", "CertAddCTLLinkToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pCtlContext", tys[26].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("ppStoreContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(132, 0, "CertAddCertificateContextToStore", "CertAddCertificateContextToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pCertContext", tys[26].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("ppStoreContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(133, 0, "CertAddCertificateLinkToStore", "CertAddCertificateLinkToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pCertContext", tys[26].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("ppStoreContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(134, 0, "CertAddEncodedCRLToStore", "CertAddEncodedCRLToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pbCrlEncoded", tys[33].clone(), None), Param::new("cbCrlEncoded", tys[13].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("ppCrlContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(135, 0, "CertAddEncodedCTLToStore", "CertAddEncodedCTLToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwMsgAndCertEncodingType", tys[13].clone(), None), Param::new("pbCtlEncoded", tys[33].clone(), None), Param::new("cbCtlEncoded", tys[13].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("ppCtlContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(136, 0, "CertAddEncodedCertificateToStore", "CertAddEncodedCertificateToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pbCertEncoded", tys[33].clone(), None), Param::new("cbCertEncoded", tys[13].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("ppCertContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(137, 0, "CertAddEncodedCertificateToSystemStoreA", "CertAddEncodedCertificateToSystemStoreA", 0, vec![Param::new("szCertStoreName", tys[33].clone(), None), Param::new("pbCertEncoded", tys[33].clone(), None), Param::new("cbCertEncoded", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(138, 0, "CertAddEnhancedKeyUsageIdentifier", "CertAddEnhancedKeyUsageIdentifier", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("pszUsageIdentifier", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(139, 0, "CertAddRefServerOcspResponse", "CertAddRefServerOcspResponse", 0, vec![Param::new("hServerOcspResponse", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(140, 0, "CertAddRefServerOcspResponseContext", "CertAddRefServerOcspResponseContext", 0, vec![Param::new("pServerOcspResponseContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(141, 0, "CertAddSerializedElementToStore", "CertAddSerializedElementToStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pbElement", tys[33].clone(), None), Param::new("cbElement", tys[13].clone(), None), Param::new("dwAddDisposition", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwContextTypeFlags", tys[13].clone(), None), Param::new("pdwContextType", tys[39].clone(), None), Param::new("ppvContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(142, 0, "CertAddStoreToCollection", "CertAddStoreToCollection", 0, vec![Param::new("hCollectionStore", tys[37].clone(), None), Param::new("hSiblingStore", tys[37].clone(), None), Param::new("dwUpdateFlags", tys[13].clone(), None), Param::new("dwPriority", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(143, 0, "CertAlgIdToOID", "CertAlgIdToOID", 0, vec![Param::new("dwAlgId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(144, 0, "CertCloseServerOcspResponse", "CertCloseServerOcspResponse", 0, vec![Param::new("hServerOcspResponse", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(145, 0, "CertCloseStore", "CertCloseStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(146, 0, "CertCompareCertificate", "CertCompareCertificate", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pCertId1", tys[26].clone(), None), Param::new("pCertId2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(147, 0, "CertCompareCertificateName", "CertCompareCertificateName", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pCertName1", tys[26].clone(), None), Param::new("pCertName2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(148, 0, "CertCompareIntegerBlob", "CertCompareIntegerBlob", 0, vec![Param::new("pInt1", tys[26].clone(), None), Param::new("pInt2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(149, 0, "CertComparePublicKeyInfo", "CertComparePublicKeyInfo", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pPublicKey1", tys[26].clone(), None), Param::new("pPublicKey2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(150, 0, "CertControlStore", "CertControlStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwCtrlType", tys[13].clone(), None), Param::new("pvCtrlPara", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(151, 0, "CertCreateCRLContext", "CertCreateCRLContext", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pbCrlEncoded", tys[33].clone(), None), Param::new("cbCrlEncoded", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(152, 0, "CertCreateCTLContext", "CertCreateCTLContext", 0, vec![Param::new("dwMsgAndCertEncodingType", tys[13].clone(), None), Param::new("pbCtlEncoded", tys[33].clone(), None), Param::new("cbCtlEncoded", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(153, 0, "CertCreateCTLEntryFromCertificateContextProperties", "CertCreateCTLEntryFromCertificateContextProperties", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("cOptAttr", tys[13].clone(), None), Param::new("rgOptAttr", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pCtlEntry", tys[26].clone(), None), Param::new("pcbCtlEntry", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(154, 0, "CertCreateCertificateChainEngine", "CertCreateCertificateChainEngine", 0, vec![Param::new("pConfig", tys[26].clone(), None), Param::new("phChainEngine", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(155, 0, "CertCreateCertificateContext", "CertCreateCertificateContext", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pbCertEncoded", tys[33].clone(), None), Param::new("cbCertEncoded", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(156, 0, "CertCreateContext", "CertCreateContext", 0, vec![Param::new("dwContextType", tys[13].clone(), None), Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("cbEncoded", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pCreatePara", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(157, 0, "CertCreateSelfSignCertificate", "CertCreateSelfSignCertificate", 0, vec![Param::new("hCryptProvOrNCryptKey", tys[14].clone(), None), Param::new("pSubjectIssuerBlob", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pKeyProvInfo", tys[26].clone(), None), Param::new("pSignatureAlgorithm", tys[26].clone(), None), Param::new("pStartTime", tys[26].clone(), None), Param::new("pEndTime", tys[26].clone(), None), Param::new("pExtensions", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(158, 0, "CertDeleteCRLFromStore", "CertDeleteCRLFromStore", 0, vec![Param::new("pCrlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(159, 0, "CertDeleteCTLFromStore", "CertDeleteCTLFromStore", 0, vec![Param::new("pCtlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(160, 0, "CertDeleteCertificateFromStore", "CertDeleteCertificateFromStore", 0, vec![Param::new("pCertContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(161, 0, "CertDuplicateCRLContext", "CertDuplicateCRLContext", 0, vec![Param::new("pCrlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(162, 0, "CertDuplicateCTLContext", "CertDuplicateCTLContext", 0, vec![Param::new("pCtlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(163, 0, "CertDuplicateCertificateChain", "CertDuplicateCertificateChain", 0, vec![Param::new("pChainContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(164, 0, "CertDuplicateCertificateContext", "CertDuplicateCertificateContext", 0, vec![Param::new("pCertContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(165, 0, "CertDuplicateStore", "CertDuplicateStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(166, 0, "CertEnumCRLContextProperties", "CertEnumCRLContextProperties", 0, vec![Param::new("pCrlContext", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(167, 0, "CertEnumCRLsInStore", "CertEnumCRLsInStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pPrevCrlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(168, 0, "CertEnumCTLContextProperties", "CertEnumCTLContextProperties", 0, vec![Param::new("pCtlContext", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(169, 0, "CertEnumCTLsInStore", "CertEnumCTLsInStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pPrevCtlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(170, 0, "CertEnumCertificateContextProperties", "CertEnumCertificateContextProperties", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(171, 0, "CertEnumCertificatesInStore", "CertEnumCertificatesInStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pPrevCertContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(172, 0, "CertEnumPhysicalStore", "CertEnumPhysicalStore", 0, vec![Param::new("pvSystemStore", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvArg", tys[37].clone(), None), Param::new("pfnEnum", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(173, 0, "CertEnumSubjectInSortedCTL", "CertEnumSubjectInSortedCTL", 0, vec![Param::new("pCtlContext", tys[26].clone(), None), Param::new("ppvNextSubject", tys[38].clone(), None), Param::new("pSubjectIdentifier", tys[26].clone(), None), Param::new("pEncodedAttributes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(174, 0, "CertEnumSystemStore", "CertEnumSystemStore", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pvSystemStoreLocationPara", tys[37].clone(), None), Param::new("pvArg", tys[37].clone(), None), Param::new("pfnEnum", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(175, 0, "CertEnumSystemStoreLocation", "CertEnumSystemStoreLocation", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pvArg", tys[37].clone(), None), Param::new("pfnEnum", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(176, 0, "CertFindAttribute", "CertFindAttribute", 0, vec![Param::new("pszObjId", tys[33].clone(), None), Param::new("cAttr", tys[13].clone(), None), Param::new("rgAttr", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(177, 0, "CertFindCRLInStore", "CertFindCRLInStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("dwFindFlags", tys[13].clone(), None), Param::new("dwFindType", tys[13].clone(), None), Param::new("pvFindPara", tys[37].clone(), None), Param::new("pPrevCrlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(178, 0, "CertFindCTLInStore", "CertFindCTLInStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwMsgAndCertEncodingType", tys[13].clone(), None), Param::new("dwFindFlags", tys[13].clone(), None), Param::new("dwFindType", tys[13].clone(), None), Param::new("pvFindPara", tys[37].clone(), None), Param::new("pPrevCtlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(179, 0, "CertFindCertificateInCRL", "CertFindCertificateInCRL", 0, vec![Param::new("pCert", tys[26].clone(), None), Param::new("pCrlContext", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("ppCrlEntry", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(180, 0, "CertFindCertificateInStore", "CertFindCertificateInStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("dwFindFlags", tys[13].clone(), None), Param::new("dwFindType", tys[13].clone(), None), Param::new("pvFindPara", tys[37].clone(), None), Param::new("pPrevCertContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(181, 0, "CertFindChainInStore", "CertFindChainInStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("dwFindFlags", tys[13].clone(), None), Param::new("dwFindType", tys[13].clone(), None), Param::new("pvFindPara", tys[37].clone(), None), Param::new("pPrevChainContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(182, 0, "CertFindExtension", "CertFindExtension", 0, vec![Param::new("pszObjId", tys[33].clone(), None), Param::new("cExtensions", tys[13].clone(), None), Param::new("rgExtensions", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(183, 0, "CertFindRDNAttr", "CertFindRDNAttr", 0, vec![Param::new("pszObjId", tys[33].clone(), None), Param::new("pName", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(184, 0, "CertFindSubjectInCTL", "CertFindSubjectInCTL", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("dwSubjectType", tys[13].clone(), None), Param::new("pvSubject", tys[37].clone(), None), Param::new("pCtlContext", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(185, 0, "CertFindSubjectInSortedCTL", "CertFindSubjectInSortedCTL", 0, vec![Param::new("pSubjectIdentifier", tys[26].clone(), None), Param::new("pCtlContext", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pEncodedAttributes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(186, 0, "CertFreeCRLContext", "CertFreeCRLContext", 0, vec![Param::new("pCrlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(187, 0, "CertFreeCTLContext", "CertFreeCTLContext", 0, vec![Param::new("pCtlContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(188, 0, "CertFreeCertificateChain", "CertFreeCertificateChain", 0, vec![Param::new("pChainContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(189, 0, "CertFreeCertificateChainEngine", "CertFreeCertificateChainEngine", 0, vec![Param::new("hChainEngine", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(190, 0, "CertFreeCertificateChainList", "CertFreeCertificateChainList", 0, vec![Param::new("prgpSelection", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(191, 0, "CertFreeCertificateContext", "CertFreeCertificateContext", 0, vec![Param::new("pCertContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_3(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(192, 0, "CertFreeServerOcspResponseContext", "CertFreeServerOcspResponseContext", 0, vec![Param::new("pServerOcspResponseContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(193, 0, "CertGetCRLContextProperty", "CertGetCRLContextProperty", 0, vec![Param::new("pCrlContext", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("pvData", tys[37].clone(), None), Param::new("pcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(194, 0, "CertGetCRLFromStore", "CertGetCRLFromStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pIssuerContext", tys[26].clone(), None), Param::new("pPrevCrlContext", tys[26].clone(), None), Param::new("pdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(195, 0, "CertGetCTLContextProperty", "CertGetCTLContextProperty", 0, vec![Param::new("pCtlContext", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("pvData", tys[37].clone(), None), Param::new("pcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(196, 0, "CertGetCertificateChain", "CertGetCertificateChain", 0, vec![Param::new("hChainEngine", tys[37].clone(), None), Param::new("pCertContext", tys[26].clone(), None), Param::new("pTime", tys[26].clone(), None), Param::new("hAdditionalStore", tys[37].clone(), None), Param::new("pChainPara", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("ppChainContext", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(197, 0, "CertGetCertificateContextProperty", "CertGetCertificateContextProperty", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("pvData", tys[37].clone(), None), Param::new("pcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(198, 0, "CertGetEnhancedKeyUsage", "CertGetEnhancedKeyUsage", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pUsage", tys[26].clone(), None), Param::new("pcbUsage", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(199, 0, "CertGetIntendedKeyUsage", "CertGetIntendedKeyUsage", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pCertInfo", tys[26].clone(), None), Param::new("pbKeyUsage", tys[33].clone(), None), Param::new("cbKeyUsage", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(200, 0, "CertGetIssuerCertificateFromStore", "CertGetIssuerCertificateFromStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("pSubjectContext", tys[26].clone(), None), Param::new("pPrevIssuerContext", tys[26].clone(), None), Param::new("pdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(201, 0, "CertGetNameStringA", "CertGetNameStringA", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("dwType", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvTypePara", tys[37].clone(), None), Param::new("pszNameString", tys[33].clone(), None), Param::new("cchNameString", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(202, 0, "CertGetPublicKeyLength", "CertGetPublicKeyLength", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pPublicKey", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(203, 0, "CertGetServerOcspResponseContext", "CertGetServerOcspResponseContext", 0, vec![Param::new("hServerOcspResponse", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(204, 0, "CertGetStoreProperty", "CertGetStoreProperty", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("pvData", tys[37].clone(), None), Param::new("pcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(205, 0, "CertGetSubjectCertificateFromStore", "CertGetSubjectCertificateFromStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pCertId", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(206, 0, "CertGetValidUsages", "CertGetValidUsages", 0, vec![Param::new("cCerts", tys[13].clone(), None), Param::new("rghCerts", tys[27].clone(), None), Param::new("cNumOIDs", tys[39].clone(), None), Param::new("rghOIDs", tys[34].clone(), None), Param::new("pcbOIDs", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(207, 0, "CertIsRDNAttrsInCertificateName", "CertIsRDNAttrsInCertificateName", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pCertName", tys[26].clone(), None), Param::new("pRDN", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(208, 0, "CertIsStrongHashToSign", "CertIsStrongHashToSign", 0, vec![Param::new("pStrongSignPara", tys[26].clone(), None), Param::new("pwszCNGHashAlgid", tys[28].clone(), None), Param::new("pSigningCert", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(209, 0, "CertIsValidCRLForCertificate", "CertIsValidCRLForCertificate", 0, vec![Param::new("pCert", tys[26].clone(), None), Param::new("pCrl", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(210, 0, "CertIsWeakHash", "CertIsWeakHash", 0, vec![Param::new("dwHashUseType", tys[13].clone(), None), Param::new("pwszCNGHashAlgid", tys[28].clone(), None), Param::new("dwChainFlags", tys[13].clone(), None), Param::new("pSignerChainContext", tys[26].clone(), None), Param::new("pTimeStamp", tys[26].clone(), None), Param::new("pwszFileName", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(211, 0, "CertNameToStrA", "CertNameToStrA", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pName", tys[26].clone(), None), Param::new("dwStrType", tys[13].clone(), None), Param::new("psz", tys[33].clone(), None), Param::new("csz", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(212, 0, "CertOIDToAlgId", "CertOIDToAlgId", 0, vec![Param::new("pszObjId", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(213, 0, "CertOpenServerOcspResponse", "CertOpenServerOcspResponse", 0, vec![Param::new("pChainContext", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pOpenPara", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(214, 0, "CertOpenStore", "CertOpenStore", 0, vec![Param::new("lpszStoreProvider", tys[33].clone(), None), Param::new("dwEncodingType", tys[13].clone(), None), Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvPara", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(215, 0, "CertOpenSystemStoreA", "CertOpenSystemStoreA", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("szSubsystemProtocol", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(216, 0, "CertRDNValueToStrA", "CertRDNValueToStrA", 0, vec![Param::new("dwValueType", tys[13].clone(), None), Param::new("pValue", tys[26].clone(), None), Param::new("psz", tys[33].clone(), None), Param::new("csz", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(217, 0, "CertRegisterPhysicalStore", "CertRegisterPhysicalStore", 0, vec![Param::new("pvSystemStore", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pwszStoreName", tys[28].clone(), None), Param::new("pStoreInfo", tys[26].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(218, 0, "CertRegisterSystemStore", "CertRegisterSystemStore", 0, vec![Param::new("pvSystemStore", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pStoreInfo", tys[26].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(219, 0, "CertRemoveEnhancedKeyUsageIdentifier", "CertRemoveEnhancedKeyUsageIdentifier", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("pszUsageIdentifier", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(220, 0, "CertRemoveStoreFromCollection", "CertRemoveStoreFromCollection", 0, vec![Param::new("hCollectionStore", tys[37].clone(), None), Param::new("hSiblingStore", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(221, 0, "CertResyncCertificateChainEngine", "CertResyncCertificateChainEngine", 0, vec![Param::new("hChainEngine", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(222, 0, "CertRetrieveLogoOrBiometricInfo", "CertRetrieveLogoOrBiometricInfo", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("lpszLogoOrBiometricType", tys[33].clone(), None), Param::new("dwRetrievalFlags", tys[13].clone(), None), Param::new("dwTimeout", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("ppbData", tys[34].clone(), None), Param::new("pcbData", tys[39].clone(), None), Param::new("ppwszMimeType", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(223, 0, "CertSaveStore", "CertSaveStore", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwEncodingType", tys[13].clone(), None), Param::new("dwSaveAs", tys[13].clone(), None), Param::new("dwSaveTo", tys[13].clone(), None), Param::new("pvSaveToPara", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(224, 0, "CertSelectCertificateChains", "CertSelectCertificateChains", 0, vec![Param::new("pSelectionContext", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pChainParameters", tys[26].clone(), None), Param::new("cCriteria", tys[13].clone(), None), Param::new("rgpCriteria", tys[26].clone(), None), Param::new("hStore", tys[37].clone(), None), Param::new("pcSelection", tys[39].clone(), None), Param::new("pprgpSelection", tys[31].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(225, 0, "CertSerializeCRLStoreElement", "CertSerializeCRLStoreElement", 0, vec![Param::new("pCrlContext", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbElement", tys[33].clone(), None), Param::new("pcbElement", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(226, 0, "CertSerializeCTLStoreElement", "CertSerializeCTLStoreElement", 0, vec![Param::new("pCtlContext", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbElement", tys[33].clone(), None), Param::new("pcbElement", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(227, 0, "CertSerializeCertificateStoreElement", "CertSerializeCertificateStoreElement", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbElement", tys[33].clone(), None), Param::new("pcbElement", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(228, 0, "CertSetCRLContextProperty", "CertSetCRLContextProperty", 0, vec![Param::new("pCrlContext", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(229, 0, "CertSetCTLContextProperty", "CertSetCTLContextProperty", 0, vec![Param::new("pCtlContext", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(230, 0, "CertSetCertificateContextPropertiesFromCTLEntry", "CertSetCertificateContextPropertiesFromCTLEntry", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("pCtlEntry", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(231, 0, "CertSetCertificateContextProperty", "CertSetCertificateContextProperty", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(232, 0, "CertSetEnhancedKeyUsage", "CertSetEnhancedKeyUsage", 0, vec![Param::new("pCertContext", tys[26].clone(), None), Param::new("pUsage", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(233, 0, "CertSetStoreProperty", "CertSetStoreProperty", 0, vec![Param::new("hCertStore", tys[37].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(234, 0, "CertStrToNameA", "CertStrToNameA", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pszX500", tys[33].clone(), None), Param::new("dwStrType", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("pcbEncoded", tys[39].clone(), None), Param::new("ppszError", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(235, 0, "CertUnregisterPhysicalStore", "CertUnregisterPhysicalStore", 0, vec![Param::new("pvSystemStore", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pwszStoreName", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(236, 0, "CertUnregisterSystemStore", "CertUnregisterSystemStore", 0, vec![Param::new("pvSystemStore", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(237, 0, "CertVerifyCRLRevocation", "CertVerifyCRLRevocation", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pCertId", tys[26].clone(), None), Param::new("cCrlInfo", tys[13].clone(), None), Param::new("rgpCrlInfo", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(238, 0, "CertVerifyCRLTimeValidity", "CertVerifyCRLTimeValidity", 0, vec![Param::new("pTimeToVerify", tys[26].clone(), None), Param::new("pCrlInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(239, 0, "CertVerifyCTLUsage", "CertVerifyCTLUsage", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("dwSubjectType", tys[13].clone(), None), Param::new("pvSubject", tys[37].clone(), None), Param::new("pSubjectUsage", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pVerifyUsagePara", tys[26].clone(), None), Param::new("pVerifyUsageStatus", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(240, 0, "CertVerifyCertificateChainPolicy", "CertVerifyCertificateChainPolicy", 0, vec![Param::new("pszPolicyOID", tys[33].clone(), None), Param::new("pChainContext", tys[26].clone(), None), Param::new("pPolicyPara", tys[26].clone(), None), Param::new("pPolicyStatus", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(241, 0, "CertVerifyRevocation", "CertVerifyRevocation", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("dwRevType", tys[13].clone(), None), Param::new("cContext", tys[13].clone(), None), Param::new("rgpvContext", tys[38].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pRevPara", tys[26].clone(), None), Param::new("pRevStatus", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(242, 0, "CertVerifySubjectCertificateContext", "CertVerifySubjectCertificateContext", 0, vec![Param::new("pSubject", tys[26].clone(), None), Param::new("pIssuer", tys[26].clone(), None), Param::new("pdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(243, 0, "CertVerifyTimeValidity", "CertVerifyTimeValidity", 0, vec![Param::new("pTimeToVerify", tys[26].clone(), None), Param::new("pCertInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(244, 0, "CertVerifyValidityNesting", "CertVerifyValidityNesting", 0, vec![Param::new("pSubjectInfo", tys[26].clone(), None), Param::new("pIssuerInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(245, 0, "ChangeClipboardChain", "ChangeClipboardChain", 0, vec![Param::new("hWndRemove", tys[26].clone(), None), Param::new("hWndNewNext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(246, 0, "ChangeDisplaySettingsA", "ChangeDisplaySettingsA", 0, vec![Param::new("lpDevMode", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(247, 0, "ChangeDisplaySettingsExA", "ChangeDisplaySettingsExA", 0, vec![Param::new("lpszDeviceName", tys[33].clone(), None), Param::new("lpDevMode", tys[26].clone(), None), Param::new("hwnd", tys[26].clone(), None), Param::new("dwflags", tys[13].clone(), None), Param::new("lParam", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(248, 0, "ChangeMenuA", "ChangeMenuA", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("cmd", tys[13].clone(), None), Param::new("lpszNewItem", tys[33].clone(), None), Param::new("cmdInsert", tys[13].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(249, 0, "ChangeServiceConfig2A", "ChangeServiceConfig2A", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwInfoLevel", tys[13].clone(), None), Param::new("lpInfo", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(250, 0, "ChangeServiceConfigA", "ChangeServiceConfigA", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwServiceType", tys[13].clone(), None), Param::new("dwStartType", tys[13].clone(), None), Param::new("dwErrorControl", tys[13].clone(), None), Param::new("lpBinaryPathName", tys[33].clone(), None), Param::new("lpLoadOrderGroup", tys[33].clone(), None), Param::new("lpdwTagId", tys[39].clone(), None), Param::new("lpDependencies", tys[33].clone(), None), Param::new("lpServiceStartName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(251, 0, "ChangeTimerQueueTimer", "ChangeTimerQueueTimer", 0, vec![Param::new("TimerQueue", tys[47].clone(), None), Param::new("Timer", tys[47].clone(), None), Param::new("DueTime", tys[13].clone(), None), Param::new("Period", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(252, 0, "ChangeWindowMessageFilter", "ChangeWindowMessageFilter", 0, vec![Param::new("message", tys[13].clone(), None), Param::new("dwFlag", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(253, 0, "ChangeWindowMessageFilterEx", "ChangeWindowMessageFilterEx", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("message", tys[13].clone(), None), Param::new("action", tys[13].clone(), None), Param::new("pChangeFilterStruct", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(254, 0, "CharLowerA", "CharLowerA", 0, vec![Param::new("lpsz", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(255, 0, "CharLowerBuffA", "CharLowerBuffA", 0, vec![Param::new("lpsz", tys[33].clone(), None), Param::new("cchLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_4(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(256, 0, "CharNextA", "CharNextA", 0, vec![Param::new("lpsz", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(257, 0, "CharNextExA", "CharNextExA", 0, vec![Param::new("CodePage", tys[11].clone(), None), Param::new("lpCurrentChar", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(258, 0, "CharPrevA", "CharPrevA", 0, vec![Param::new("lpszStart", tys[33].clone(), None), Param::new("lpszCurrent", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(259, 0, "CharPrevExA", "CharPrevExA", 0, vec![Param::new("CodePage", tys[11].clone(), None), Param::new("lpStart", tys[33].clone(), None), Param::new("lpCurrentChar", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(260, 0, "CharToOemA", "CharToOemA", 0, vec![Param::new("pSrc", tys[33].clone(), None), Param::new("pDst", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(261, 0, "CharToOemBuffA", "CharToOemBuffA", 0, vec![Param::new("lpszSrc", tys[33].clone(), None), Param::new("lpszDst", tys[33].clone(), None), Param::new("cchDstLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(262, 0, "CharUpperA", "CharUpperA", 0, vec![Param::new("lpsz", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(263, 0, "CharUpperBuffA", "CharUpperBuffA", 0, vec![Param::new("lpsz", tys[33].clone(), None), Param::new("cchLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(264, 0, "CheckColorsInGamut", "CheckColorsInGamut", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpRGBTriple", tys[26].clone(), None), Param::new("dlpBuffer", tys[37].clone(), None), Param::new("nCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(265, 0, "CheckDlgButton", "CheckDlgButton", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nIDButton", tys[13].clone(), None), Param::new("uCheck", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(266, 0, "CheckForHiberboot", "CheckForHiberboot", 0, vec![Param::new("pHiberboot", tys[33].clone(), None), Param::new("bClearFlag", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(267, 0, "CheckMenuItem", "CheckMenuItem", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uIDCheckItem", tys[13].clone(), None), Param::new("uCheck", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(268, 0, "CheckMenuRadioItem", "CheckMenuRadioItem", 0, vec![Param::new("hmenu", tys[26].clone(), None), Param::new("first", tys[13].clone(), None), Param::new("last", tys[13].clone(), None), Param::new("check", tys[13].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(269, 0, "CheckNameLegalDOS8Dot3A", "CheckNameLegalDOS8Dot3A", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("lpOemName", tys[33].clone(), None), Param::new("OemNameSize", tys[13].clone(), None), Param::new("pbNameContainsSpaces", tys[39].clone(), None), Param::new("pbNameLegal", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(270, 0, "CheckRadioButton", "CheckRadioButton", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nIDFirstButton", tys[13].clone(), None), Param::new("nIDLastButton", tys[13].clone(), None), Param::new("nIDCheckButton", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(271, 0, "CheckRemoteDebuggerPresent", "CheckRemoteDebuggerPresent", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("pbDebuggerPresent", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(272, 0, "CheckTokenCapability", "CheckTokenCapability", 0, vec![Param::new("TokenHandle", tys[47].clone(), None), Param::new("CapabilitySidToCheck", tys[37].clone(), None), Param::new("HasCapability", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(273, 0, "CheckTokenMembership", "CheckTokenMembership", 0, vec![Param::new("TokenHandle", tys[47].clone(), None), Param::new("SidToCheck", tys[37].clone(), None), Param::new("IsMember", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(274, 0, "CheckTokenMembershipEx", "CheckTokenMembershipEx", 0, vec![Param::new("TokenHandle", tys[47].clone(), None), Param::new("SidToCheck", tys[37].clone(), None), Param::new("Flags", tys[13].clone(), None), Param::new("IsMember", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(275, 0, "ChildWindowFromPoint", "ChildWindowFromPoint", 0, vec![Param::new("hWndParent", tys[26].clone(), None), Param::new("Point", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(276, 0, "ChildWindowFromPointEx", "ChildWindowFromPointEx", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pt", tys[16].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(277, 0, "ChooseColorA", "ChooseColorA", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(278, 0, "ChooseFontA", "ChooseFontA", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(279, 0, "ChoosePixelFormat", "ChoosePixelFormat", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("ppfd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(280, 0, "Chord", "Chord", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x1", tys[13].clone(), None), Param::new("y1", tys[13].clone(), None), Param::new("x2", tys[13].clone(), None), Param::new("y2", tys[13].clone(), None), Param::new("x3", tys[13].clone(), None), Param::new("y3", tys[13].clone(), None), Param::new("x4", tys[13].clone(), None), Param::new("y4", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(281, 0, "ClearCommBreak", "ClearCommBreak", 0, vec![Param::new("hFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(282, 0, "ClearCommError", "ClearCommError", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpErrors", tys[39].clone(), None), Param::new("lpStat", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(283, 0, "ClearEventLogA", "ClearEventLogA", 0, vec![Param::new("hEventLog", tys[47].clone(), None), Param::new("lpBackupFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(284, 0, "ClientToScreen", "ClientToScreen", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpPoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(285, 0, "ClipCursor", "ClipCursor", 0, vec![Param::new("lpRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(286, 0, "CloseClipboard", "CloseClipboard", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(287, 0, "CloseDesktop", "CloseDesktop", 0, vec![Param::new("hDesktop", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(288, 0, "CloseDriver", "CloseDriver", 0, vec![Param::new("hDriver", tys[26].clone(), None), Param::new("lParam1", tys[14].clone(), None), Param::new("lParam2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(289, 0, "CloseEncryptedFileRaw", "CloseEncryptedFileRaw", 0, vec![Param::new("pvContext", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(290, 0, "CloseEnhMetaFile", "CloseEnhMetaFile", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(291, 0, "CloseEventLog", "CloseEventLog", 0, vec![Param::new("hEventLog", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(292, 0, "CloseFigure", "CloseFigure", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(293, 0, "CloseGestureInfoHandle", "CloseGestureInfoHandle", 0, vec![Param::new("hGestureInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(294, 0, "CloseHandle", "CloseHandle", 0, vec![Param::new("hObject", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(295, 0, "CloseMetaFile", "CloseMetaFile", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(296, 0, "ClosePrinter", "ClosePrinter", 0, vec![Param::new("hPrinter", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(297, 0, "ClosePrivateNamespace", "ClosePrivateNamespace", 0, vec![Param::new("Handle", tys[47].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(298, 0, "CloseServiceHandle", "CloseServiceHandle", 0, vec![Param::new("hSCObject", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(299, 0, "CloseSpoolFileHandle", "CloseSpoolFileHandle", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("hSpoolFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(300, 0, "CloseThreadpool", "CloseThreadpool", 0, vec![Param::new("ptpp", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(301, 0, "CloseThreadpoolCleanupGroup", "CloseThreadpoolCleanupGroup", 0, vec![Param::new("ptpcg", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(302, 0, "CloseThreadpoolCleanupGroupMembers", "CloseThreadpoolCleanupGroupMembers", 0, vec![Param::new("ptpcg", tys[26].clone(), None), Param::new("fCancelPendingCallbacks", tys[13].clone(), None), Param::new("pvCleanupContext", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(303, 0, "CloseThreadpoolIo", "CloseThreadpoolIo", 0, vec![Param::new("pio", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(304, 0, "CloseThreadpoolTimer", "CloseThreadpoolTimer", 0, vec![Param::new("pti", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(305, 0, "CloseThreadpoolWait", "CloseThreadpoolWait", 0, vec![Param::new("pwa", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(306, 0, "CloseThreadpoolWork", "CloseThreadpoolWork", 0, vec![Param::new("pwk", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(307, 0, "CloseTouchInputHandle", "CloseTouchInputHandle", 0, vec![Param::new("hTouchInput", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(308, 0, "CloseWindow", "CloseWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(309, 0, "CloseWindowStation", "CloseWindowStation", 0, vec![Param::new("hWinSta", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(310, 0, "ColorCorrectPalette", "ColorCorrectPalette", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hPal", tys[26].clone(), None), Param::new("deFirst", tys[13].clone(), None), Param::new("num", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(311, 0, "ColorMatchToTarget", "ColorMatchToTarget", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hdcTarget", tys[26].clone(), None), Param::new("action", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(312, 0, "CombineRgn", "CombineRgn", 0, vec![Param::new("hrgnDst", tys[26].clone(), None), Param::new("hrgnSrc1", tys[26].clone(), None), Param::new("hrgnSrc2", tys[26].clone(), None), Param::new("iMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(313, 0, "CombineTransform", "CombineTransform", 0, vec![Param::new("lpxfOut", tys[26].clone(), None), Param::new("lpxf1", tys[26].clone(), None), Param::new("lpxf2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(314, 0, "CommConfigDialogA", "CommConfigDialogA", 0, vec![Param::new("lpszName", tys[33].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("lpCC", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(315, 0, "CommDlgExtendedError", "CommDlgExtendedError", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(316, 0, "CommitSpoolData", "CommitSpoolData", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("hSpoolFile", tys[47].clone(), None), Param::new("cbCommit", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(317, 0, "CompareFileTime", "CompareFileTime", 0, vec![Param::new("lpFileTime1", tys[26].clone(), None), Param::new("lpFileTime2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(318, 0, "CompareObjectHandles", "CompareObjectHandles", 0, vec![Param::new("hFirstObjectHandle", tys[47].clone(), None), Param::new("hSecondObjectHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(319, 0, "CompareStringA", "CompareStringA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwCmpFlags", tys[13].clone(), None), Param::new("lpString1", tys[33].clone(), None), Param::new("cchCount1", tys[13].clone(), None), Param::new("lpString2", tys[33].clone(), None), Param::new("cchCount2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_5(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(320, 0, "CompareStringEx", "CompareStringEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwCmpFlags", tys[13].clone(), None), Param::new("lpString1", tys[28].clone(), None), Param::new("cchCount1", tys[13].clone(), None), Param::new("lpString2", tys[28].clone(), None), Param::new("cchCount2", tys[13].clone(), None), Param::new("lpVersionInformation", tys[26].clone(), None), Param::new("lpReserved", tys[37].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(321, 0, "CompareStringOrdinal", "CompareStringOrdinal", 0, vec![Param::new("lpString1", tys[28].clone(), None), Param::new("cchCount1", tys[13].clone(), None), Param::new("lpString2", tys[28].clone(), None), Param::new("cchCount2", tys[13].clone(), None), Param::new("bIgnoreCase", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(322, 0, "ConfigurePortA", "ConfigurePortA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("pPortName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(323, 0, "ConnectNamedPipe", "ConnectNamedPipe", 0, vec![Param::new("hNamedPipe", tys[47].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(324, 0, "ConnectToPrinterDlg", "ConnectToPrinterDlg", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("Flags", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(325, 0, "ContinueDebugEvent", "ContinueDebugEvent", 0, vec![Param::new("dwProcessId", tys[13].clone(), None), Param::new("dwThreadId", tys[13].clone(), None), Param::new("dwContinueStatus", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(326, 0, "ControlService", "ControlService", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwControl", tys[13].clone(), None), Param::new("lpServiceStatus", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(327, 0, "ControlServiceExA", "ControlServiceExA", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwControl", tys[13].clone(), None), Param::new("dwInfoLevel", tys[13].clone(), None), Param::new("pControlParams", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(328, 0, "ConvertDefaultLocale", "ConvertDefaultLocale", 0, vec![Param::new("Locale", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(329, 0, "ConvertFiberToThread", "ConvertFiberToThread", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(330, 0, "ConvertThreadToFiber", "ConvertThreadToFiber", 0, vec![Param::new("lpParameter", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(331, 0, "ConvertThreadToFiberEx", "ConvertThreadToFiberEx", 0, vec![Param::new("lpParameter", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(332, 0, "ConvertToAutoInheritPrivateObjectSecurity", "ConvertToAutoInheritPrivateObjectSecurity", 0, vec![Param::new("ParentDescriptor", tys[37].clone(), None), Param::new("CurrentSecurityDescriptor", tys[37].clone(), None), Param::new("NewSecurityDescriptor", tys[38].clone(), None), Param::new("ObjectType", tys[26].clone(), None), Param::new("IsDirectoryObject", tys[15].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(333, 0, "CopyAcceleratorTableA", "CopyAcceleratorTableA", 0, vec![Param::new("hAccelSrc", tys[26].clone(), None), Param::new("lpAccelDst", tys[26].clone(), None), Param::new("cAccelEntries", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(334, 0, "CopyContext", "CopyContext", 0, vec![Param::new("Destination", tys[26].clone(), None), Param::new("ContextFlags", tys[13].clone(), None), Param::new("Source", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(335, 0, "CopyEnhMetaFileA", "CopyEnhMetaFileA", 0, vec![Param::new("hEnh", tys[26].clone(), None), Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(336, 0, "CopyFile2", "CopyFile2", 0, vec![Param::new("pwszExistingFileName", tys[28].clone(), None), Param::new("pwszNewFileName", tys[28].clone(), None), Param::new("pExtendedParameters", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(337, 0, "CopyFileA", "CopyFileA", 0, vec![Param::new("lpExistingFileName", tys[33].clone(), None), Param::new("lpNewFileName", tys[33].clone(), None), Param::new("bFailIfExists", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(338, 0, "CopyFileExA", "CopyFileExA", 0, vec![Param::new("lpExistingFileName", tys[33].clone(), None), Param::new("lpNewFileName", tys[33].clone(), None), Param::new("lpProgressRoutine", tys[26].clone(), None), Param::new("lpData", tys[37].clone(), None), Param::new("pbCancel", tys[39].clone(), None), Param::new("dwCopyFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(339, 0, "CopyFileTransactedA", "CopyFileTransactedA", 0, vec![Param::new("lpExistingFileName", tys[33].clone(), None), Param::new("lpNewFileName", tys[33].clone(), None), Param::new("lpProgressRoutine", tys[26].clone(), None), Param::new("lpData", tys[37].clone(), None), Param::new("pbCancel", tys[39].clone(), None), Param::new("dwCopyFlags", tys[13].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(340, 0, "CopyIcon", "CopyIcon", 0, vec![Param::new("hIcon", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(341, 0, "CopyImage", "CopyImage", 0, vec![Param::new("h", tys[47].clone(), None), Param::new("type", tys[13].clone(), None), Param::new("cx", tys[13].clone(), None), Param::new("cy", tys[13].clone(), None), Param::new("flags", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(342, 0, "CopyLZFile", "CopyLZFile", 0, vec![Param::new("hfSource", tys[13].clone(), None), Param::new("hfDest", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(343, 0, "CopyMetaFileA", "CopyMetaFileA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(344, 0, "CopyRect", "CopyRect", 0, vec![Param::new("lprcDst", tys[26].clone(), None), Param::new("lprcSrc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(345, 0, "CopySid", "CopySid", 0, vec![Param::new("nDestinationSidLength", tys[13].clone(), None), Param::new("pDestinationSid", tys[37].clone(), None), Param::new("pSourceSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(346, 0, "CorePrinterDriverInstalledA", "CorePrinterDriverInstalledA", 0, vec![Param::new("pszServer", tys[33].clone(), None), Param::new("pszEnvironment", tys[33].clone(), None), Param::new("CoreDriverGUID", tys[16].clone(), None), Param::new("ftDriverDate", tys[16].clone(), None), Param::new("dwlDriverVersion", tys[14].clone(), None), Param::new("pbDriverInstalled", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(347, 0, "CountClipboardFormats", "CountClipboardFormats", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(348, 0, "CreateAcceleratorTableA", "CreateAcceleratorTableA", 0, vec![Param::new("paccel", tys[26].clone(), None), Param::new("cAccel", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(349, 0, "CreateActCtxA", "CreateActCtxA", 0, vec![Param::new("pActCtx", tys[26].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(350, 0, "CreateBitmap", "CreateBitmap", 0, vec![Param::new("nWidth", tys[13].clone(), None), Param::new("nHeight", tys[13].clone(), None), Param::new("nPlanes", tys[13].clone(), None), Param::new("nBitCount", tys[13].clone(), None), Param::new("lpBits", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(351, 0, "CreateBitmapIndirect", "CreateBitmapIndirect", 0, vec![Param::new("pbm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(352, 0, "CreateBoundaryDescriptorA", "CreateBoundaryDescriptorA", 0, vec![Param::new("Name", tys[33].clone(), None), Param::new("Flags", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(353, 0, "CreateBrushIndirect", "CreateBrushIndirect", 0, vec![Param::new("plbrush", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(354, 0, "CreateCaret", "CreateCaret", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hBitmap", tys[26].clone(), None), Param::new("nWidth", tys[13].clone(), None), Param::new("nHeight", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(355, 0, "CreateColorSpaceA", "CreateColorSpaceA", 0, vec![Param::new("lplcs", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(356, 0, "CreateCompatibleBitmap", "CreateCompatibleBitmap", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("cx", tys[13].clone(), None), Param::new("cy", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(357, 0, "CreateCompatibleDC", "CreateCompatibleDC", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(358, 0, "CreateConsoleScreenBuffer", "CreateConsoleScreenBuffer", 0, vec![Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("dwShareMode", tys[13].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpScreenBufferData", tys[37].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(359, 0, "CreateCursor", "CreateCursor", 0, vec![Param::new("hInst", tys[26].clone(), None), Param::new("xHotSpot", tys[13].clone(), None), Param::new("yHotSpot", tys[13].clone(), None), Param::new("nWidth", tys[13].clone(), None), Param::new("nHeight", tys[13].clone(), None), Param::new("pvANDPlane", tys[37].clone(), None), Param::new("pvXORPlane", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(360, 0, "CreateDCA", "CreateDCA", 0, vec![Param::new("pwszDriver", tys[33].clone(), None), Param::new("pwszDevice", tys[33].clone(), None), Param::new("pszPort", tys[33].clone(), None), Param::new("pdm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(361, 0, "CreateDIBPatternBrush", "CreateDIBPatternBrush", 0, vec![Param::new("h", tys[37].clone(), None), Param::new("iUsage", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(362, 0, "CreateDIBPatternBrushPt", "CreateDIBPatternBrushPt", 0, vec![Param::new("lpPackedDIB", tys[37].clone(), None), Param::new("iUsage", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(363, 0, "CreateDIBSection", "CreateDIBSection", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("pbmi", tys[26].clone(), None), Param::new("usage", tys[13].clone(), None), Param::new("ppvBits", tys[38].clone(), None), Param::new("hSection", tys[47].clone(), None), Param::new("offset", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(364, 0, "CreateDIBitmap", "CreateDIBitmap", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("pbmih", tys[26].clone(), None), Param::new("flInit", tys[13].clone(), None), Param::new("pjBits", tys[37].clone(), None), Param::new("pbmi", tys[26].clone(), None), Param::new("iUsage", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(365, 0, "CreateDesktopA", "CreateDesktopA", 0, vec![Param::new("lpszDesktop", tys[33].clone(), None), Param::new("lpszDevice", tys[33].clone(), None), Param::new("pDevmode", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("lpsa", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(366, 0, "CreateDesktopExA", "CreateDesktopExA", 0, vec![Param::new("lpszDesktop", tys[33].clone(), None), Param::new("lpszDevice", tys[33].clone(), None), Param::new("pDevmode", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("lpsa", tys[26].clone(), None), Param::new("ulHeapSize", tys[13].clone(), None), Param::new("pvoid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(367, 0, "CreateDialogIndirectParamA", "CreateDialogIndirectParamA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpTemplate", tys[26].clone(), None), Param::new("hWndParent", tys[26].clone(), None), Param::new("lpDialogFunc", tys[26].clone(), None), Param::new("dwInitParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(368, 0, "CreateDialogParamA", "CreateDialogParamA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpTemplateName", tys[33].clone(), None), Param::new("hWndParent", tys[26].clone(), None), Param::new("lpDialogFunc", tys[26].clone(), None), Param::new("dwInitParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(369, 0, "CreateDirectoryA", "CreateDirectoryA", 0, vec![Param::new("lpPathName", tys[33].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(370, 0, "CreateDirectoryExA", "CreateDirectoryExA", 0, vec![Param::new("lpTemplateDirectory", tys[33].clone(), None), Param::new("lpNewDirectory", tys[33].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(371, 0, "CreateDirectoryTransactedA", "CreateDirectoryTransactedA", 0, vec![Param::new("lpTemplateDirectory", tys[33].clone(), None), Param::new("lpNewDirectory", tys[33].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(372, 0, "CreateDiscardableBitmap", "CreateDiscardableBitmap", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("cx", tys[13].clone(), None), Param::new("cy", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(373, 0, "CreateEllipticRgn", "CreateEllipticRgn", 0, vec![Param::new("x1", tys[13].clone(), None), Param::new("y1", tys[13].clone(), None), Param::new("x2", tys[13].clone(), None), Param::new("y2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(374, 0, "CreateEllipticRgnIndirect", "CreateEllipticRgnIndirect", 0, vec![Param::new("lprect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(375, 0, "CreateEnclave", "CreateEnclave", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), Param::new("dwInitialCommitment", tys[14].clone(), None), Param::new("flEnclaveType", tys[13].clone(), None), Param::new("lpEnclaveInformation", tys[37].clone(), None), Param::new("dwInfoLength", tys[13].clone(), None), Param::new("lpEnclaveError", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(376, 0, "CreateEnhMetaFileA", "CreateEnhMetaFileA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpFilename", tys[33].clone(), None), Param::new("lprc", tys[26].clone(), None), Param::new("lpDesc", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(377, 0, "CreateEventA", "CreateEventA", 0, vec![Param::new("lpEventAttributes", tys[26].clone(), None), Param::new("bManualReset", tys[13].clone(), None), Param::new("bInitialState", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(378, 0, "CreateEventExA", "CreateEventExA", 0, vec![Param::new("lpEventAttributes", tys[26].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(379, 0, "CreateFiber", "CreateFiber", 0, vec![Param::new("dwStackSize", tys[14].clone(), None), Param::new("lpStartAddress", tys[26].clone(), None), Param::new("lpParameter", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(380, 0, "CreateFiberEx", "CreateFiberEx", 0, vec![Param::new("dwStackCommitSize", tys[14].clone(), None), Param::new("dwStackReserveSize", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpStartAddress", tys[26].clone(), None), Param::new("lpParameter", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(381, 0, "CreateFile2", "CreateFile2", 0, vec![Param::new("lpFileName", tys[28].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("dwShareMode", tys[13].clone(), None), Param::new("dwCreationDisposition", tys[13].clone(), None), Param::new("pCreateExParams", tys[26].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(382, 0, "CreateFileA", "CreateFileA", 0, vec![Param::new("lpFileName", tys[21].clone(), None), Param::new("dwDesiredAccess", tys[5].clone(), None), Param::new("dwShareMode", tys[10].clone(), None), Param::new("lpSecurityAttributes", tys[20].clone(), None), Param::new("dwCreationDisposition", tys[7].clone(), None), Param::new("dwFlagsAndAttributes", tys[6].clone(), None), Param::new("hTemplateFile", tys[46].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(383, 0, "CreateFileMappingA", "CreateFileMappingA", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpFileMappingAttributes", tys[26].clone(), None), Param::new("flProtect", tys[13].clone(), None), Param::new("dwMaximumSizeHigh", tys[13].clone(), None), Param::new("dwMaximumSizeLow", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_6(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(384, 0, "CreateFileMappingFromApp", "CreateFileMappingFromApp", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("SecurityAttributes", tys[26].clone(), None), Param::new("PageProtection", tys[13].clone(), None), Param::new("MaximumSize", tys[14].clone(), None), Param::new("Name", tys[28].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(385, 0, "CreateFileMappingNumaA", "CreateFileMappingNumaA", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpFileMappingAttributes", tys[26].clone(), None), Param::new("flProtect", tys[13].clone(), None), Param::new("dwMaximumSizeHigh", tys[13].clone(), None), Param::new("dwMaximumSizeLow", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("nndPreferred", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(386, 0, "CreateFileTransactedA", "CreateFileTransactedA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("dwShareMode", tys[13].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), Param::new("dwCreationDisposition", tys[13].clone(), None), Param::new("dwFlagsAndAttributes", tys[13].clone(), None), Param::new("hTemplateFile", tys[47].clone(), None), Param::new("hTransaction", tys[47].clone(), None), Param::new("pusMiniVersion", tys[28].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(387, 0, "CreateFontA", "CreateFontA", 0, vec![Param::new("cHeight", tys[13].clone(), None), Param::new("cWidth", tys[13].clone(), None), Param::new("cEscapement", tys[13].clone(), None), Param::new("cOrientation", tys[13].clone(), None), Param::new("cWeight", tys[13].clone(), None), Param::new("bItalic", tys[13].clone(), None), Param::new("bUnderline", tys[13].clone(), None), Param::new("bStrikeOut", tys[13].clone(), None), Param::new("iCharSet", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(388, 0, "CreateFontIndirectA", "CreateFontIndirectA", 0, vec![Param::new("lplf", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(389, 0, "CreateFontIndirectExA", "CreateFontIndirectExA", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(390, 0, "CreateHalftonePalette", "CreateHalftonePalette", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(391, 0, "CreateHardLinkA", "CreateHardLinkA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("lpExistingFileName", tys[33].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(392, 0, "CreateHardLinkTransactedA", "CreateHardLinkTransactedA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("lpExistingFileName", tys[33].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(393, 0, "CreateHatchBrush", "CreateHatchBrush", 0, vec![Param::new("iHatch", tys[13].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(394, 0, "CreateICA", "CreateICA", 0, vec![Param::new("pszDriver", tys[33].clone(), None), Param::new("pszDevice", tys[33].clone(), None), Param::new("pszPort", tys[33].clone(), None), Param::new("pdm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(395, 0, "CreateILockBytesOnHGlobal", "CreateILockBytesOnHGlobal", 0, vec![Param::new("hGlobal", tys[37].clone(), None), Param::new("fDeleteOnRelease", tys[13].clone(), None), Param::new("pplkbyt", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(396, 0, "CreateIcon", "CreateIcon", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("nWidth", tys[13].clone(), None), Param::new("nHeight", tys[13].clone(), None), Param::new("cPlanes", tys[15].clone(), None), Param::new("cBitsPixel", tys[15].clone(), None), Param::new("lpbANDbits", tys[33].clone(), None), Param::new("lpbXORbits", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(397, 0, "CreateIconFromResource", "CreateIconFromResource", 0, vec![Param::new("presbits", tys[33].clone(), None), Param::new("dwResSize", tys[13].clone(), None), Param::new("fIcon", tys[13].clone(), None), Param::new("dwVer", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(398, 0, "CreateIconFromResourceEx", "CreateIconFromResourceEx", 0, vec![Param::new("presbits", tys[33].clone(), None), Param::new("dwResSize", tys[13].clone(), None), Param::new("fIcon", tys[13].clone(), None), Param::new("dwVer", tys[13].clone(), None), Param::new("cxDesired", tys[13].clone(), None), Param::new("cyDesired", tys[13].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(399, 0, "CreateIconIndirect", "CreateIconIndirect", 0, vec![Param::new("piconinfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(400, 0, "CreateIoCompletionPort", "CreateIoCompletionPort", 0, vec![Param::new("FileHandle", tys[47].clone(), None), Param::new("ExistingCompletionPort", tys[47].clone(), None), Param::new("CompletionKey", tys[14].clone(), None), Param::new("NumberOfConcurrentThreads", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(401, 0, "CreateJobObjectA", "CreateJobObjectA", 0, vec![Param::new("lpJobAttributes", tys[26].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(402, 0, "CreateJobSet", "CreateJobSet", 0, vec![Param::new("NumJob", tys[13].clone(), None), Param::new("UserJobSet", tys[26].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(403, 0, "CreateMDIWindowA", "CreateMDIWindowA", 0, vec![Param::new("lpClassName", tys[33].clone(), None), Param::new("lpWindowName", tys[33].clone(), None), Param::new("dwStyle", tys[13].clone(), None), Param::new("X", tys[13].clone(), None), Param::new("Y", tys[13].clone(), None), Param::new("nWidth", tys[13].clone(), None), Param::new("nHeight", tys[13].clone(), None), Param::new("hWndParent", tys[26].clone(), None), Param::new("hInstance", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(404, 0, "CreateMailslotA", "CreateMailslotA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("nMaxMessageSize", tys[13].clone(), None), Param::new("lReadTimeout", tys[13].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(405, 0, "CreateMemoryResourceNotification", "CreateMemoryResourceNotification", 0, vec![Param::new("NotificationType", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(406, 0, "CreateMenu", "CreateMenu", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(407, 0, "CreateMetaFileA", "CreateMetaFileA", 0, vec![Param::new("pszFile", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(408, 0, "CreateMutexA", "CreateMutexA", 0, vec![Param::new("lpMutexAttributes", tys[26].clone(), None), Param::new("bInitialOwner", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(409, 0, "CreateMutexExA", "CreateMutexExA", 0, vec![Param::new("lpMutexAttributes", tys[26].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(410, 0, "CreateNamedPipeA", "CreateNamedPipeA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("dwOpenMode", tys[13].clone(), None), Param::new("dwPipeMode", tys[13].clone(), None), Param::new("nMaxInstances", tys[13].clone(), None), Param::new("nOutBufferSize", tys[13].clone(), None), Param::new("nInBufferSize", tys[13].clone(), None), Param::new("nDefaultTimeOut", tys[13].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(411, 0, "CreatePalette", "CreatePalette", 0, vec![Param::new("plpal", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(412, 0, "CreatePatternBrush", "CreatePatternBrush", 0, vec![Param::new("hbm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(413, 0, "CreatePen", "CreatePen", 0, vec![Param::new("iStyle", tys[13].clone(), None), Param::new("cWidth", tys[13].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(414, 0, "CreatePenIndirect", "CreatePenIndirect", 0, vec![Param::new("plpen", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(415, 0, "CreatePipe", "CreatePipe", 0, vec![Param::new("hReadPipe", tys[32].clone(), None), Param::new("hWritePipe", tys[32].clone(), None), Param::new("lpPipeAttributes", tys[26].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(416, 0, "CreatePolyPolygonRgn", "CreatePolyPolygonRgn", 0, vec![Param::new("pptl", tys[26].clone(), None), Param::new("pc", tys[39].clone(), None), Param::new("cPoly", tys[13].clone(), None), Param::new("iMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(417, 0, "CreatePolygonRgn", "CreatePolygonRgn", 0, vec![Param::new("pptl", tys[26].clone(), None), Param::new("cPoint", tys[13].clone(), None), Param::new("iMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(418, 0, "CreatePopupMenu", "CreatePopupMenu", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(419, 0, "CreatePrivateNamespaceA", "CreatePrivateNamespaceA", 0, vec![Param::new("lpPrivateNamespaceAttributes", tys[26].clone(), None), Param::new("lpBoundaryDescriptor", tys[37].clone(), None), Param::new("lpAliasPrefix", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(420, 0, "CreatePrivateObjectSecurity", "CreatePrivateObjectSecurity", 0, vec![Param::new("ParentDescriptor", tys[37].clone(), None), Param::new("CreatorDescriptor", tys[37].clone(), None), Param::new("NewDescriptor", tys[38].clone(), None), Param::new("IsDirectoryObject", tys[13].clone(), None), Param::new("Token", tys[47].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(421, 0, "CreatePrivateObjectSecurityEx", "CreatePrivateObjectSecurityEx", 0, vec![Param::new("ParentDescriptor", tys[37].clone(), None), Param::new("CreatorDescriptor", tys[37].clone(), None), Param::new("NewDescriptor", tys[38].clone(), None), Param::new("ObjectType", tys[26].clone(), None), Param::new("IsContainerObject", tys[13].clone(), None), Param::new("AutoInheritFlags", tys[13].clone(), None), Param::new("Token", tys[47].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(422, 0, "CreatePrivateObjectSecurityWithMultipleInheritance", "CreatePrivateObjectSecurityWithMultipleInheritance", 0, vec![Param::new("ParentDescriptor", tys[37].clone(), None), Param::new("CreatorDescriptor", tys[37].clone(), None), Param::new("NewDescriptor", tys[38].clone(), None), Param::new("ObjectTypes", tys[27].clone(), None), Param::new("GuidCount", tys[13].clone(), None), Param::new("IsContainerObject", tys[13].clone(), None), Param::new("AutoInheritFlags", tys[13].clone(), None), Param::new("Token", tys[47].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(423, 0, "CreateProcessA", "CreateProcessA", 0, vec![Param::new("lpApplicationName", tys[33].clone(), None), Param::new("lpCommandLine", tys[33].clone(), None), Param::new("lpProcessAttributes", tys[26].clone(), None), Param::new("lpThreadAttributes", tys[26].clone(), None), Param::new("bInheritHandles", tys[13].clone(), None), Param::new("dwCreationFlags", tys[13].clone(), None), Param::new("lpEnvironment", tys[37].clone(), None), Param::new("lpCurrentDirectory", tys[33].clone(), None), Param::new("lpStartupInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(424, 0, "CreateProcessAsUserA", "CreateProcessAsUserA", 0, vec![Param::new("hToken", tys[47].clone(), None), Param::new("lpApplicationName", tys[33].clone(), None), Param::new("lpCommandLine", tys[33].clone(), None), Param::new("lpProcessAttributes", tys[26].clone(), None), Param::new("lpThreadAttributes", tys[26].clone(), None), Param::new("bInheritHandles", tys[13].clone(), None), Param::new("dwCreationFlags", tys[13].clone(), None), Param::new("lpEnvironment", tys[37].clone(), None), Param::new("lpCurrentDirectory", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(425, 0, "CreateRectRgn", "CreateRectRgn", 0, vec![Param::new("x1", tys[13].clone(), None), Param::new("y1", tys[13].clone(), None), Param::new("x2", tys[13].clone(), None), Param::new("y2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(426, 0, "CreateRectRgnIndirect", "CreateRectRgnIndirect", 0, vec![Param::new("lprect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(427, 0, "CreateRemoteThread", "CreateRemoteThread", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpThreadAttributes", tys[26].clone(), None), Param::new("dwStackSize", tys[14].clone(), None), Param::new("lpStartAddress", tys[26].clone(), None), Param::new("lpParameter", tys[37].clone(), None), Param::new("dwCreationFlags", tys[13].clone(), None), Param::new("lpThreadId", tys[39].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(428, 0, "CreateRemoteThreadEx", "CreateRemoteThreadEx", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpThreadAttributes", tys[26].clone(), None), Param::new("dwStackSize", tys[14].clone(), None), Param::new("lpStartAddress", tys[26].clone(), None), Param::new("lpParameter", tys[37].clone(), None), Param::new("dwCreationFlags", tys[13].clone(), None), Param::new("lpAttributeList", tys[26].clone(), None), Param::new("lpThreadId", tys[39].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(429, 0, "CreateRestrictedToken", "CreateRestrictedToken", 0, vec![Param::new("ExistingTokenHandle", tys[47].clone(), None), Param::new("Flags", tys[13].clone(), None), Param::new("DisableSidCount", tys[13].clone(), None), Param::new("SidsToDisable", tys[26].clone(), None), Param::new("DeletePrivilegeCount", tys[13].clone(), None), Param::new("PrivilegesToDelete", tys[26].clone(), None), Param::new("RestrictedSidCount", tys[13].clone(), None), Param::new("SidsToRestrict", tys[26].clone(), None), Param::new("NewTokenHandle", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(430, 0, "CreateRoundRectRgn", "CreateRoundRectRgn", 0, vec![Param::new("x1", tys[13].clone(), None), Param::new("y1", tys[13].clone(), None), Param::new("x2", tys[13].clone(), None), Param::new("y2", tys[13].clone(), None), Param::new("w", tys[13].clone(), None), Param::new("h", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(431, 0, "CreateScalableFontResourceA", "CreateScalableFontResourceA", 0, vec![Param::new("fdwHidden", tys[13].clone(), None), Param::new("lpszFont", tys[33].clone(), None), Param::new("lpszFile", tys[33].clone(), None), Param::new("lpszPath", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(432, 0, "CreateSemaphoreA", "CreateSemaphoreA", 0, vec![Param::new("lpSemaphoreAttributes", tys[26].clone(), None), Param::new("lInitialCount", tys[13].clone(), None), Param::new("lMaximumCount", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(433, 0, "CreateSemaphoreExA", "CreateSemaphoreExA", 0, vec![Param::new("lpSemaphoreAttributes", tys[26].clone(), None), Param::new("lInitialCount", tys[13].clone(), None), Param::new("lMaximumCount", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(434, 0, "CreateServiceA", "CreateServiceA", 0, vec![Param::new("hSCManager", tys[26].clone(), None), Param::new("lpServiceName", tys[33].clone(), None), Param::new("lpDisplayName", tys[33].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("dwServiceType", tys[13].clone(), None), Param::new("dwStartType", tys[13].clone(), None), Param::new("dwErrorControl", tys[13].clone(), None), Param::new("lpBinaryPathName", tys[33].clone(), None), Param::new("lpLoadOrderGroup", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(435, 0, "CreateSolidBrush", "CreateSolidBrush", 0, vec![Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(436, 0, "CreateSymbolicLinkA", "CreateSymbolicLinkA", 0, vec![Param::new("lpSymlinkFileName", tys[33].clone(), None), Param::new("lpTargetFileName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(437, 0, "CreateSymbolicLinkTransactedA", "CreateSymbolicLinkTransactedA", 0, vec![Param::new("lpSymlinkFileName", tys[33].clone(), None), Param::new("lpTargetFileName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(438, 0, "CreateTapePartition", "CreateTapePartition", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("dwPartitionMethod", tys[13].clone(), None), Param::new("dwCount", tys[13].clone(), None), Param::new("dwSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(439, 0, "CreateThread", "CreateThread", 0, vec![Param::new("lpThreadAttributes", tys[26].clone(), None), Param::new("dwStackSize", tys[14].clone(), None), Param::new("lpStartAddress", tys[26].clone(), None), Param::new("lpParameter", tys[37].clone(), None), Param::new("dwCreationFlags", tys[13].clone(), None), Param::new("lpThreadId", tys[39].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(440, 0, "CreateThreadpool", "CreateThreadpool", 0, vec![Param::new("reserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(441, 0, "CreateThreadpoolCleanupGroup", "CreateThreadpoolCleanupGroup", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(442, 0, "CreateThreadpoolIo", "CreateThreadpoolIo", 0, vec![Param::new("fl", tys[47].clone(), None), Param::new("pfnio", tys[26].clone(), None), Param::new("pv", tys[37].clone(), None), Param::new("pcbe", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(443, 0, "CreateThreadpoolTimer", "CreateThreadpoolTimer", 0, vec![Param::new("pfnti", tys[26].clone(), None), Param::new("pv", tys[37].clone(), None), Param::new("pcbe", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(444, 0, "CreateThreadpoolWait", "CreateThreadpoolWait", 0, vec![Param::new("pfnwa", tys[26].clone(), None), Param::new("pv", tys[37].clone(), None), Param::new("pcbe", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(445, 0, "CreateThreadpoolWork", "CreateThreadpoolWork", 0, vec![Param::new("pfnwk", tys[26].clone(), None), Param::new("pv", tys[37].clone(), None), Param::new("pcbe", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(446, 0, "CreateTimerQueue", "CreateTimerQueue", 0, vec![], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(447, 0, "CreateTimerQueueTimer", "CreateTimerQueueTimer", 0, vec![Param::new("phNewTimer", tys[32].clone(), None), Param::new("TimerQueue", tys[47].clone(), None), Param::new("Callback", tys[26].clone(), None), Param::new("Parameter", tys[37].clone(), None), Param::new("DueTime", tys[13].clone(), None), Param::new("Period", tys[13].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_7(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(448, 0, "CreateUmsCompletionList", "CreateUmsCompletionList", 0, vec![Param::new("UmsCompletionList", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(449, 0, "CreateUmsThreadContext", "CreateUmsThreadContext", 0, vec![Param::new("lpUmsThread", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(450, 0, "CreateWaitableTimerA", "CreateWaitableTimerA", 0, vec![Param::new("lpTimerAttributes", tys[26].clone(), None), Param::new("bManualReset", tys[13].clone(), None), Param::new("lpTimerName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(451, 0, "CreateWaitableTimerExA", "CreateWaitableTimerExA", 0, vec![Param::new("lpTimerAttributes", tys[26].clone(), None), Param::new("lpTimerName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(452, 0, "CreateWellKnownSid", "CreateWellKnownSid", 0, vec![Param::new("WellKnownSidType", tys[13].clone(), None), Param::new("DomainSid", tys[37].clone(), None), Param::new("pSid", tys[37].clone(), None), Param::new("cbSid", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(453, 0, "CreateWindowExA", "CreateWindowExA", 0, vec![Param::new("dwExStyle", tys[13].clone(), None), Param::new("lpClassName", tys[33].clone(), None), Param::new("lpWindowName", tys[33].clone(), None), Param::new("dwStyle", tys[13].clone(), None), Param::new("X", tys[13].clone(), None), Param::new("Y", tys[13].clone(), None), Param::new("nWidth", tys[13].clone(), None), Param::new("nHeight", tys[13].clone(), None), Param::new("hWndParent", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(454, 0, "CreateWindowStationA", "CreateWindowStationA", 0, vec![Param::new("lpwinsta", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("lpsa", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(455, 0, "CryptAcquireCertificatePrivateKey", "CryptAcquireCertificatePrivateKey", 0, vec![Param::new("pCert", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvParameters", tys[37].clone(), None), Param::new("phCryptProvOrNCryptKey", tys[36].clone(), None), Param::new("pdwKeySpec", tys[39].clone(), None), Param::new("pfCallerFreeProvOrNCryptKey", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(456, 0, "CryptAcquireContextA", "CryptAcquireContextA", 0, vec![Param::new("phProv", tys[36].clone(), None), Param::new("szContainer", tys[33].clone(), None), Param::new("szProvider", tys[33].clone(), None), Param::new("dwProvType", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(457, 0, "CryptBinaryToStringA", "CryptBinaryToStringA", 0, vec![Param::new("pbBinary", tys[33].clone(), None), Param::new("cbBinary", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pszString", tys[33].clone(), None), Param::new("pcchString", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(458, 0, "CryptCloseAsyncHandle", "CryptCloseAsyncHandle", 0, vec![Param::new("hAsync", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(459, 0, "CryptContextAddRef", "CryptContextAddRef", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("pdwReserved", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(460, 0, "CryptCreateAsyncHandle", "CryptCreateAsyncHandle", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("phAsync", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(461, 0, "CryptCreateHash", "CryptCreateHash", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("Algid", tys[13].clone(), None), Param::new("hKey", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("phHash", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(462, 0, "CryptCreateKeyIdentifierFromCSP", "CryptCreateKeyIdentifierFromCSP", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pszPubKeyOID", tys[33].clone(), None), Param::new("pPubKeyStruc", tys[26].clone(), None), Param::new("cbPubKeyStruc", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pbHash", tys[33].clone(), None), Param::new("pcbHash", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(463, 0, "CryptDecodeMessage", "CryptDecodeMessage", 0, vec![Param::new("dwMsgTypeFlags", tys[13].clone(), None), Param::new("pDecryptPara", tys[26].clone(), None), Param::new("pVerifyPara", tys[26].clone(), None), Param::new("dwSignerIndex", tys[13].clone(), None), Param::new("pbEncodedBlob", tys[33].clone(), None), Param::new("cbEncodedBlob", tys[13].clone(), None), Param::new("dwPrevInnerContentType", tys[13].clone(), None), Param::new("pdwMsgType", tys[39].clone(), None), Param::new("pdwInnerContentType", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(464, 0, "CryptDecodeObject", "CryptDecodeObject", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("lpszStructType", tys[33].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("cbEncoded", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvStructInfo", tys[37].clone(), None), Param::new("pcbStructInfo", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(465, 0, "CryptDecodeObjectEx", "CryptDecodeObjectEx", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("lpszStructType", tys[33].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("cbEncoded", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pDecodePara", tys[26].clone(), None), Param::new("pvStructInfo", tys[37].clone(), None), Param::new("pcbStructInfo", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(466, 0, "CryptDecrypt", "CryptDecrypt", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("hHash", tys[14].clone(), None), Param::new("Final", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("pdwDataLen", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(467, 0, "CryptDecryptAndVerifyMessageSignature", "CryptDecryptAndVerifyMessageSignature", 0, vec![Param::new("pDecryptPara", tys[26].clone(), None), Param::new("pVerifyPara", tys[26].clone(), None), Param::new("dwSignerIndex", tys[13].clone(), None), Param::new("pbEncryptedBlob", tys[33].clone(), None), Param::new("cbEncryptedBlob", tys[13].clone(), None), Param::new("pbDecrypted", tys[33].clone(), None), Param::new("pcbDecrypted", tys[39].clone(), None), Param::new("ppXchgCert", tys[27].clone(), None), Param::new("ppSignerCert", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(468, 0, "CryptDecryptMessage", "CryptDecryptMessage", 0, vec![Param::new("pDecryptPara", tys[26].clone(), None), Param::new("pbEncryptedBlob", tys[33].clone(), None), Param::new("cbEncryptedBlob", tys[13].clone(), None), Param::new("pbDecrypted", tys[33].clone(), None), Param::new("pcbDecrypted", tys[39].clone(), None), Param::new("ppXchgCert", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(469, 0, "CryptDeriveKey", "CryptDeriveKey", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("Algid", tys[13].clone(), None), Param::new("hBaseData", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("phKey", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(470, 0, "CryptDestroyHash", "CryptDestroyHash", 0, vec![Param::new("hHash", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(471, 0, "CryptDestroyKey", "CryptDestroyKey", 0, vec![Param::new("hKey", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(472, 0, "CryptDuplicateHash", "CryptDuplicateHash", 0, vec![Param::new("hHash", tys[14].clone(), None), Param::new("pdwReserved", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("phHash", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(473, 0, "CryptDuplicateKey", "CryptDuplicateKey", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("pdwReserved", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("phKey", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(474, 0, "CryptEncodeObject", "CryptEncodeObject", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("lpszStructType", tys[33].clone(), None), Param::new("pvStructInfo", tys[37].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("pcbEncoded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(475, 0, "CryptEncodeObjectEx", "CryptEncodeObjectEx", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("lpszStructType", tys[33].clone(), None), Param::new("pvStructInfo", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pEncodePara", tys[26].clone(), None), Param::new("pvEncoded", tys[37].clone(), None), Param::new("pcbEncoded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(476, 0, "CryptEncrypt", "CryptEncrypt", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("hHash", tys[14].clone(), None), Param::new("Final", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("pdwDataLen", tys[39].clone(), None), Param::new("dwBufLen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(477, 0, "CryptEncryptMessage", "CryptEncryptMessage", 0, vec![Param::new("pEncryptPara", tys[26].clone(), None), Param::new("cRecipientCert", tys[13].clone(), None), Param::new("rgpRecipientCert", tys[27].clone(), None), Param::new("pbToBeEncrypted", tys[33].clone(), None), Param::new("cbToBeEncrypted", tys[13].clone(), None), Param::new("pbEncryptedBlob", tys[33].clone(), None), Param::new("pcbEncryptedBlob", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(478, 0, "CryptEnumKeyIdentifierProperties", "CryptEnumKeyIdentifierProperties", 0, vec![Param::new("pKeyIdentifier", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pwszComputerName", tys[28].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pvArg", tys[37].clone(), None), Param::new("pfnEnum", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(479, 0, "CryptEnumOIDFunction", "CryptEnumOIDFunction", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pszFuncName", tys[33].clone(), None), Param::new("pszOID", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvArg", tys[37].clone(), None), Param::new("pfnEnumOIDFunc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(480, 0, "CryptEnumOIDInfo", "CryptEnumOIDInfo", 0, vec![Param::new("dwGroupId", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvArg", tys[37].clone(), None), Param::new("pfnEnumOIDInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(481, 0, "CryptEnumProviderTypesA", "CryptEnumProviderTypesA", 0, vec![Param::new("dwIndex", tys[13].clone(), None), Param::new("pdwReserved", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pdwProvType", tys[39].clone(), None), Param::new("szTypeName", tys[33].clone(), None), Param::new("pcbTypeName", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(482, 0, "CryptEnumProvidersA", "CryptEnumProvidersA", 0, vec![Param::new("dwIndex", tys[13].clone(), None), Param::new("pdwReserved", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pdwProvType", tys[39].clone(), None), Param::new("szProvName", tys[33].clone(), None), Param::new("pcbProvName", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(483, 0, "CryptExportKey", "CryptExportKey", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("hExpKey", tys[14].clone(), None), Param::new("dwBlobType", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("pdwDataLen", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(484, 0, "CryptExportPKCS8", "CryptExportPKCS8", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwKeySpec", tys[13].clone(), None), Param::new("pszPrivateKeyObjId", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvAuxInfo", tys[37].clone(), None), Param::new("pbPrivateKeyBlob", tys[33].clone(), None), Param::new("pcbPrivateKeyBlob", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(485, 0, "CryptExportPublicKeyInfo", "CryptExportPublicKeyInfo", 0, vec![Param::new("hCryptProvOrNCryptKey", tys[14].clone(), None), Param::new("dwKeySpec", tys[13].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pInfo", tys[26].clone(), None), Param::new("pcbInfo", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(486, 0, "CryptExportPublicKeyInfoEx", "CryptExportPublicKeyInfoEx", 0, vec![Param::new("hCryptProvOrNCryptKey", tys[14].clone(), None), Param::new("dwKeySpec", tys[13].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pszPublicKeyObjId", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvAuxInfo", tys[37].clone(), None), Param::new("pInfo", tys[26].clone(), None), Param::new("pcbInfo", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(487, 0, "CryptExportPublicKeyInfoFromBCryptKeyHandle", "CryptExportPublicKeyInfoFromBCryptKeyHandle", 0, vec![Param::new("hBCryptKey", tys[37].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pszPublicKeyObjId", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvAuxInfo", tys[37].clone(), None), Param::new("pInfo", tys[26].clone(), None), Param::new("pcbInfo", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(488, 0, "CryptFindCertificateKeyProvInfo", "CryptFindCertificateKeyProvInfo", 0, vec![Param::new("pCert", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(489, 0, "CryptFindLocalizedName", "CryptFindLocalizedName", 0, vec![Param::new("pwszCryptName", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(490, 0, "CryptFindOIDInfo", "CryptFindOIDInfo", 0, vec![Param::new("dwKeyType", tys[13].clone(), None), Param::new("pvKey", tys[37].clone(), None), Param::new("dwGroupId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(491, 0, "CryptFormatObject", "CryptFormatObject", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("dwFormatType", tys[13].clone(), None), Param::new("dwFormatStrType", tys[13].clone(), None), Param::new("pFormatStruct", tys[37].clone(), None), Param::new("lpszStructType", tys[33].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("cbEncoded", tys[13].clone(), None), Param::new("pbFormat", tys[37].clone(), None), Param::new("pcbFormat", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(492, 0, "CryptFreeOIDFunctionAddress", "CryptFreeOIDFunctionAddress", 0, vec![Param::new("hFuncAddr", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(493, 0, "CryptGenKey", "CryptGenKey", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("Algid", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("phKey", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(494, 0, "CryptGenRandom", "CryptGenRandom", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("dwLen", tys[13].clone(), None), Param::new("pbBuffer", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(495, 0, "CryptGetAsyncParam", "CryptGetAsyncParam", 0, vec![Param::new("hAsync", tys[37].clone(), None), Param::new("pszParamOid", tys[33].clone(), None), Param::new("ppvParam", tys[38].clone(), None), Param::new("ppfnFree", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(496, 0, "CryptGetDefaultOIDDllList", "CryptGetDefaultOIDDllList", 0, vec![Param::new("hFuncSet", tys[37].clone(), None), Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pwszDllList", tys[28].clone(), None), Param::new("pcchDllList", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(497, 0, "CryptGetDefaultOIDFunctionAddress", "CryptGetDefaultOIDFunctionAddress", 0, vec![Param::new("hFuncSet", tys[37].clone(), None), Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pwszDll", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("ppvFuncAddr", tys[38].clone(), None), Param::new("phFuncAddr", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(498, 0, "CryptGetDefaultProviderA", "CryptGetDefaultProviderA", 0, vec![Param::new("dwProvType", tys[13].clone(), None), Param::new("pdwReserved", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pszProvName", tys[33].clone(), None), Param::new("pcbProvName", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(499, 0, "CryptGetHashParam", "CryptGetHashParam", 0, vec![Param::new("hHash", tys[14].clone(), None), Param::new("dwParam", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("pdwDataLen", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(500, 0, "CryptGetKeyIdentifierProperty", "CryptGetKeyIdentifierProperty", 0, vec![Param::new("pKeyIdentifier", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pwszComputerName", tys[28].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pvData", tys[37].clone(), None), Param::new("pcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(501, 0, "CryptGetKeyParam", "CryptGetKeyParam", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("dwParam", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("pdwDataLen", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(502, 0, "CryptGetMessageCertificates", "CryptGetMessageCertificates", 0, vec![Param::new("dwMsgAndCertEncodingType", tys[13].clone(), None), Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbSignedBlob", tys[33].clone(), None), Param::new("cbSignedBlob", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(503, 0, "CryptGetMessageSignerCount", "CryptGetMessageSignerCount", 0, vec![Param::new("dwMsgEncodingType", tys[13].clone(), None), Param::new("pbSignedBlob", tys[33].clone(), None), Param::new("cbSignedBlob", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(504, 0, "CryptGetOIDFunctionAddress", "CryptGetOIDFunctionAddress", 0, vec![Param::new("hFuncSet", tys[37].clone(), None), Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pszOID", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("ppvFuncAddr", tys[38].clone(), None), Param::new("phFuncAddr", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(505, 0, "CryptGetOIDFunctionValue", "CryptGetOIDFunctionValue", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pszFuncName", tys[33].clone(), None), Param::new("pszOID", tys[33].clone(), None), Param::new("pwszValueName", tys[28].clone(), None), Param::new("pdwValueType", tys[39].clone(), None), Param::new("pbValueData", tys[33].clone(), None), Param::new("pcbValueData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(506, 0, "CryptGetObjectUrl", "CryptGetObjectUrl", 0, vec![Param::new("pszUrlOid", tys[33].clone(), None), Param::new("pvPara", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pUrlArray", tys[26].clone(), None), Param::new("pcbUrlArray", tys[39].clone(), None), Param::new("pUrlInfo", tys[26].clone(), None), Param::new("pcbUrlInfo", tys[39].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(507, 0, "CryptGetProvParam", "CryptGetProvParam", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("dwParam", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("pdwDataLen", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(508, 0, "CryptGetUserKey", "CryptGetUserKey", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("dwKeySpec", tys[13].clone(), None), Param::new("phUserKey", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(509, 0, "CryptHashCertificate", "CryptHashCertificate", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("Algid", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("cbEncoded", tys[13].clone(), None), Param::new("pbComputedHash", tys[33].clone(), None), Param::new("pcbComputedHash", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(510, 0, "CryptHashCertificate2", "CryptHashCertificate2", 0, vec![Param::new("pwszCNGHashAlgid", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("cbEncoded", tys[13].clone(), None), Param::new("pbComputedHash", tys[33].clone(), None), Param::new("pcbComputedHash", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(511, 0, "CryptHashData", "CryptHashData", 0, vec![Param::new("hHash", tys[14].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("dwDataLen", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_8(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(512, 0, "CryptHashMessage", "CryptHashMessage", 0, vec![Param::new("pHashPara", tys[26].clone(), None), Param::new("fDetachedHash", tys[13].clone(), None), Param::new("cToBeHashed", tys[13].clone(), None), Param::new("rgpbToBeHashed", tys[34].clone(), None), Param::new("rgcbToBeHashed", tys[39].clone(), None), Param::new("pbHashedBlob", tys[33].clone(), None), Param::new("pcbHashedBlob", tys[39].clone(), None), Param::new("pbComputedHash", tys[33].clone(), None), Param::new("pcbComputedHash", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(513, 0, "CryptHashPublicKeyInfo", "CryptHashPublicKeyInfo", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("Algid", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pInfo", tys[26].clone(), None), Param::new("pbComputedHash", tys[33].clone(), None), Param::new("pcbComputedHash", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(514, 0, "CryptHashSessionKey", "CryptHashSessionKey", 0, vec![Param::new("hHash", tys[14].clone(), None), Param::new("hKey", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(515, 0, "CryptHashToBeSigned", "CryptHashToBeSigned", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("cbEncoded", tys[13].clone(), None), Param::new("pbComputedHash", tys[33].clone(), None), Param::new("pcbComputedHash", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(516, 0, "CryptImportKey", "CryptImportKey", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("dwDataLen", tys[13].clone(), None), Param::new("hPubKey", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("phKey", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(517, 0, "CryptImportPKCS8", "CryptImportPKCS8", 0, vec![Param::new("sPrivateKeyAndParams", tys[16].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("phCryptProv", tys[36].clone(), None), Param::new("pvAuxInfo", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(518, 0, "CryptImportPublicKeyInfo", "CryptImportPublicKeyInfo", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pInfo", tys[26].clone(), None), Param::new("phKey", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(519, 0, "CryptImportPublicKeyInfoEx", "CryptImportPublicKeyInfoEx", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pInfo", tys[26].clone(), None), Param::new("aiKeyAlg", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvAuxInfo", tys[37].clone(), None), Param::new("phKey", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(520, 0, "CryptImportPublicKeyInfoEx2", "CryptImportPublicKeyInfoEx2", 0, vec![Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pInfo", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvAuxInfo", tys[37].clone(), None), Param::new("phKey", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(521, 0, "CryptInitOIDFunctionSet", "CryptInitOIDFunctionSet", 0, vec![Param::new("pszFuncName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(522, 0, "CryptInstallCancelRetrieval", "CryptInstallCancelRetrieval", 0, vec![Param::new("pfnCancel", tys[26].clone(), None), Param::new("pvArg", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(523, 0, "CryptInstallDefaultContext", "CryptInstallDefaultContext", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwDefaultType", tys[13].clone(), None), Param::new("pvDefaultPara", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("phDefaultContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(524, 0, "CryptInstallOIDFunctionAddress", "CryptInstallOIDFunctionAddress", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pszFuncName", tys[33].clone(), None), Param::new("cFuncEntry", tys[13].clone(), None), Param::new("rgFuncEntry", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(525, 0, "CryptMemAlloc", "CryptMemAlloc", 0, vec![Param::new("cbSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(526, 0, "CryptMemFree", "CryptMemFree", 0, vec![Param::new("pv", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(527, 0, "CryptMemRealloc", "CryptMemRealloc", 0, vec![Param::new("pv", tys[37].clone(), None), Param::new("cbSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(528, 0, "CryptMsgCalculateEncodedLength", "CryptMsgCalculateEncodedLength", 0, vec![Param::new("dwMsgEncodingType", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwMsgType", tys[13].clone(), None), Param::new("pvMsgEncodeInfo", tys[37].clone(), None), Param::new("pszInnerContentObjID", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(529, 0, "CryptMsgClose", "CryptMsgClose", 0, vec![Param::new("hCryptMsg", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(530, 0, "CryptMsgControl", "CryptMsgControl", 0, vec![Param::new("hCryptMsg", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwCtrlType", tys[13].clone(), None), Param::new("pvCtrlPara", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(531, 0, "CryptMsgCountersign", "CryptMsgCountersign", 0, vec![Param::new("hCryptMsg", tys[37].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("cCountersigners", tys[13].clone(), None), Param::new("rgCountersigners", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(532, 0, "CryptMsgCountersignEncoded", "CryptMsgCountersignEncoded", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pbSignerInfo", tys[33].clone(), None), Param::new("cbSignerInfo", tys[13].clone(), None), Param::new("cCountersigners", tys[13].clone(), None), Param::new("rgCountersigners", tys[26].clone(), None), Param::new("pbCountersignature", tys[33].clone(), None), Param::new("pcbCountersignature", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(533, 0, "CryptMsgDuplicate", "CryptMsgDuplicate", 0, vec![Param::new("hCryptMsg", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(534, 0, "CryptMsgEncodeAndSignCTL", "CryptMsgEncodeAndSignCTL", 0, vec![Param::new("dwMsgEncodingType", tys[13].clone(), None), Param::new("pCtlInfo", tys[26].clone(), None), Param::new("pSignInfo", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("pcbEncoded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(535, 0, "CryptMsgGetAndVerifySigner", "CryptMsgGetAndVerifySigner", 0, vec![Param::new("hCryptMsg", tys[37].clone(), None), Param::new("cSignerStore", tys[13].clone(), None), Param::new("rghSignerStore", tys[38].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("ppSigner", tys[27].clone(), None), Param::new("pdwSignerIndex", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(536, 0, "CryptMsgGetParam", "CryptMsgGetParam", 0, vec![Param::new("hCryptMsg", tys[37].clone(), None), Param::new("dwParamType", tys[13].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("pvData", tys[37].clone(), None), Param::new("pcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(537, 0, "CryptMsgOpenToDecode", "CryptMsgOpenToDecode", 0, vec![Param::new("dwMsgEncodingType", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwMsgType", tys[13].clone(), None), Param::new("hCryptProv", tys[14].clone(), None), Param::new("pRecipientInfo", tys[26].clone(), None), Param::new("pStreamInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(538, 0, "CryptMsgOpenToEncode", "CryptMsgOpenToEncode", 0, vec![Param::new("dwMsgEncodingType", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwMsgType", tys[13].clone(), None), Param::new("pvMsgEncodeInfo", tys[37].clone(), None), Param::new("pszInnerContentObjID", tys[33].clone(), None), Param::new("pStreamInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(539, 0, "CryptMsgSignCTL", "CryptMsgSignCTL", 0, vec![Param::new("dwMsgEncodingType", tys[13].clone(), None), Param::new("pbCtlContent", tys[33].clone(), None), Param::new("cbCtlContent", tys[13].clone(), None), Param::new("pSignInfo", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("pcbEncoded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(540, 0, "CryptMsgUpdate", "CryptMsgUpdate", 0, vec![Param::new("hCryptMsg", tys[37].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), Param::new("fFinal", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(541, 0, "CryptMsgVerifyCountersignatureEncoded", "CryptMsgVerifyCountersignatureEncoded", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pbSignerInfo", tys[33].clone(), None), Param::new("cbSignerInfo", tys[13].clone(), None), Param::new("pbSignerInfoCountersignature", tys[33].clone(), None), Param::new("cbSignerInfoCountersignature", tys[13].clone(), None), Param::new("pciCountersigner", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(542, 0, "CryptMsgVerifyCountersignatureEncodedEx", "CryptMsgVerifyCountersignatureEncodedEx", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pbSignerInfo", tys[33].clone(), None), Param::new("cbSignerInfo", tys[13].clone(), None), Param::new("pbSignerInfoCountersignature", tys[33].clone(), None), Param::new("cbSignerInfoCountersignature", tys[13].clone(), None), Param::new("dwSignerType", tys[13].clone(), None), Param::new("pvSigner", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(543, 0, "CryptProtectData", "CryptProtectData", 0, vec![Param::new("pDataIn", tys[26].clone(), None), Param::new("szDataDescr", tys[28].clone(), None), Param::new("pOptionalEntropy", tys[26].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pPromptStruct", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pDataOut", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(544, 0, "CryptProtectMemory", "CryptProtectMemory", 0, vec![Param::new("pDataIn", tys[37].clone(), None), Param::new("cbDataIn", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(545, 0, "CryptQueryObject", "CryptQueryObject", 0, vec![Param::new("dwObjectType", tys[13].clone(), None), Param::new("pvObject", tys[37].clone(), None), Param::new("dwExpectedContentTypeFlags", tys[13].clone(), None), Param::new("dwExpectedFormatTypeFlags", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pdwMsgAndCertEncodingType", tys[39].clone(), None), Param::new("pdwContentType", tys[39].clone(), None), Param::new("pdwFormatType", tys[39].clone(), None), Param::new("phCertStore", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(546, 0, "CryptRegisterDefaultOIDFunction", "CryptRegisterDefaultOIDFunction", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pszFuncName", tys[33].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("pwszDll", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(547, 0, "CryptRegisterOIDFunction", "CryptRegisterOIDFunction", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pszFuncName", tys[33].clone(), None), Param::new("pszOID", tys[33].clone(), None), Param::new("pwszDll", tys[28].clone(), None), Param::new("pszOverrideFuncName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(548, 0, "CryptRegisterOIDInfo", "CryptRegisterOIDInfo", 0, vec![Param::new("pInfo", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(549, 0, "CryptReleaseContext", "CryptReleaseContext", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(550, 0, "CryptRetrieveObjectByUrlA", "CryptRetrieveObjectByUrlA", 0, vec![Param::new("pszUrl", tys[33].clone(), None), Param::new("pszObjectOid", tys[33].clone(), None), Param::new("dwRetrievalFlags", tys[13].clone(), None), Param::new("dwTimeout", tys[13].clone(), None), Param::new("ppvObject", tys[38].clone(), None), Param::new("hAsyncRetrieve", tys[37].clone(), None), Param::new("pCredentials", tys[26].clone(), None), Param::new("pvVerify", tys[37].clone(), None), Param::new("pAuxInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(551, 0, "CryptRetrieveTimeStamp", "CryptRetrieveTimeStamp", 0, vec![Param::new("wszUrl", tys[28].clone(), None), Param::new("dwRetrievalFlags", tys[13].clone(), None), Param::new("dwTimeout", tys[13].clone(), None), Param::new("pszHashId", tys[33].clone(), None), Param::new("pPara", tys[26].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), Param::new("ppTsContext", tys[27].clone(), None), Param::new("ppTsSigner", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(552, 0, "CryptSetAsyncParam", "CryptSetAsyncParam", 0, vec![Param::new("hAsync", tys[37].clone(), None), Param::new("pszParamOid", tys[33].clone(), None), Param::new("pvParam", tys[37].clone(), None), Param::new("pfnFree", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(553, 0, "CryptSetHashParam", "CryptSetHashParam", 0, vec![Param::new("hHash", tys[14].clone(), None), Param::new("dwParam", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(554, 0, "CryptSetKeyIdentifierProperty", "CryptSetKeyIdentifierProperty", 0, vec![Param::new("pKeyIdentifier", tys[26].clone(), None), Param::new("dwPropId", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pwszComputerName", tys[28].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pvData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(555, 0, "CryptSetKeyParam", "CryptSetKeyParam", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("dwParam", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(556, 0, "CryptSetOIDFunctionValue", "CryptSetOIDFunctionValue", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pszFuncName", tys[33].clone(), None), Param::new("pszOID", tys[33].clone(), None), Param::new("pwszValueName", tys[28].clone(), None), Param::new("dwValueType", tys[13].clone(), None), Param::new("pbValueData", tys[33].clone(), None), Param::new("cbValueData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(557, 0, "CryptSetProvParam", "CryptSetProvParam", 0, vec![Param::new("hProv", tys[14].clone(), None), Param::new("dwParam", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(558, 0, "CryptSetProviderA", "CryptSetProviderA", 0, vec![Param::new("pszProvName", tys[33].clone(), None), Param::new("dwProvType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(559, 0, "CryptSetProviderExA", "CryptSetProviderExA", 0, vec![Param::new("pszProvName", tys[33].clone(), None), Param::new("dwProvType", tys[13].clone(), None), Param::new("pdwReserved", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(560, 0, "CryptSignAndEncodeCertificate", "CryptSignAndEncodeCertificate", 0, vec![Param::new("hCryptProvOrNCryptKey", tys[14].clone(), None), Param::new("dwKeySpec", tys[13].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("lpszStructType", tys[33].clone(), None), Param::new("pvStructInfo", tys[37].clone(), None), Param::new("pSignatureAlgorithm", tys[26].clone(), None), Param::new("pvHashAuxInfo", tys[37].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("pcbEncoded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(561, 0, "CryptSignAndEncryptMessage", "CryptSignAndEncryptMessage", 0, vec![Param::new("pSignPara", tys[26].clone(), None), Param::new("pEncryptPara", tys[26].clone(), None), Param::new("cRecipientCert", tys[13].clone(), None), Param::new("rgpRecipientCert", tys[27].clone(), None), Param::new("pbToBeSignedAndEncrypted", tys[33].clone(), None), Param::new("cbToBeSignedAndEncrypted", tys[13].clone(), None), Param::new("pbSignedAndEncryptedBlob", tys[33].clone(), None), Param::new("pcbSignedAndEncryptedBlob", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(562, 0, "CryptSignCertificate", "CryptSignCertificate", 0, vec![Param::new("hCryptProvOrNCryptKey", tys[14].clone(), None), Param::new("dwKeySpec", tys[13].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pbEncodedToBeSigned", tys[33].clone(), None), Param::new("cbEncodedToBeSigned", tys[13].clone(), None), Param::new("pSignatureAlgorithm", tys[26].clone(), None), Param::new("pvHashAuxInfo", tys[37].clone(), None), Param::new("pbSignature", tys[33].clone(), None), Param::new("pcbSignature", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(563, 0, "CryptSignHashA", "CryptSignHashA", 0, vec![Param::new("hHash", tys[14].clone(), None), Param::new("dwKeySpec", tys[13].clone(), None), Param::new("szDescription", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbSignature", tys[33].clone(), None), Param::new("pdwSigLen", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(564, 0, "CryptSignMessage", "CryptSignMessage", 0, vec![Param::new("pSignPara", tys[26].clone(), None), Param::new("fDetachedSignature", tys[13].clone(), None), Param::new("cToBeSigned", tys[13].clone(), None), Param::new("rgpbToBeSigned", tys[34].clone(), None), Param::new("rgcbToBeSigned", tys[39].clone(), None), Param::new("pbSignedBlob", tys[33].clone(), None), Param::new("pcbSignedBlob", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(565, 0, "CryptSignMessageWithKey", "CryptSignMessageWithKey", 0, vec![Param::new("pSignPara", tys[26].clone(), None), Param::new("pbToBeSigned", tys[33].clone(), None), Param::new("cbToBeSigned", tys[13].clone(), None), Param::new("pbSignedBlob", tys[33].clone(), None), Param::new("pcbSignedBlob", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(566, 0, "CryptStringToBinaryA", "CryptStringToBinaryA", 0, vec![Param::new("pszString", tys[33].clone(), None), Param::new("cchString", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pbBinary", tys[33].clone(), None), Param::new("pcbBinary", tys[39].clone(), None), Param::new("pdwSkip", tys[39].clone(), None), Param::new("pdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(567, 0, "CryptUninstallCancelRetrieval", "CryptUninstallCancelRetrieval", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(568, 0, "CryptUninstallDefaultContext", "CryptUninstallDefaultContext", 0, vec![Param::new("hDefaultContext", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(569, 0, "CryptUnprotectData", "CryptUnprotectData", 0, vec![Param::new("pDataIn", tys[26].clone(), None), Param::new("ppszDataDescr", tys[29].clone(), None), Param::new("pOptionalEntropy", tys[26].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("pPromptStruct", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pDataOut", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(570, 0, "CryptUnprotectMemory", "CryptUnprotectMemory", 0, vec![Param::new("pDataIn", tys[37].clone(), None), Param::new("cbDataIn", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(571, 0, "CryptUnregisterDefaultOIDFunction", "CryptUnregisterDefaultOIDFunction", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pszFuncName", tys[33].clone(), None), Param::new("pwszDll", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(572, 0, "CryptUnregisterOIDFunction", "CryptUnregisterOIDFunction", 0, vec![Param::new("dwEncodingType", tys[13].clone(), None), Param::new("pszFuncName", tys[33].clone(), None), Param::new("pszOID", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(573, 0, "CryptUnregisterOIDInfo", "CryptUnregisterOIDInfo", 0, vec![Param::new("pInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(574, 0, "CryptUpdateProtectedState", "CryptUpdateProtectedState", 0, vec![Param::new("pOldSid", tys[37].clone(), None), Param::new("pwszOldPassword", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pdwSuccessCount", tys[39].clone(), None), Param::new("pdwFailureCount", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(575, 0, "CryptVerifyCertificateSignature", "CryptVerifyCertificateSignature", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("pbEncoded", tys[33].clone(), None), Param::new("cbEncoded", tys[13].clone(), None), Param::new("pPublicKey", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_9(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(576, 0, "CryptVerifyCertificateSignatureEx", "CryptVerifyCertificateSignatureEx", 0, vec![Param::new("hCryptProv", tys[14].clone(), None), Param::new("dwCertEncodingType", tys[13].clone(), None), Param::new("dwSubjectType", tys[13].clone(), None), Param::new("pvSubject", tys[37].clone(), None), Param::new("dwIssuerType", tys[13].clone(), None), Param::new("pvIssuer", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvExtra", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(577, 0, "CryptVerifyDetachedMessageHash", "CryptVerifyDetachedMessageHash", 0, vec![Param::new("pHashPara", tys[26].clone(), None), Param::new("pbDetachedHashBlob", tys[33].clone(), None), Param::new("cbDetachedHashBlob", tys[13].clone(), None), Param::new("cToBeHashed", tys[13].clone(), None), Param::new("rgpbToBeHashed", tys[34].clone(), None), Param::new("rgcbToBeHashed", tys[39].clone(), None), Param::new("pbComputedHash", tys[33].clone(), None), Param::new("pcbComputedHash", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(578, 0, "CryptVerifyDetachedMessageSignature", "CryptVerifyDetachedMessageSignature", 0, vec![Param::new("pVerifyPara", tys[26].clone(), None), Param::new("dwSignerIndex", tys[13].clone(), None), Param::new("pbDetachedSignBlob", tys[33].clone(), None), Param::new("cbDetachedSignBlob", tys[13].clone(), None), Param::new("cToBeSigned", tys[13].clone(), None), Param::new("rgpbToBeSigned", tys[34].clone(), None), Param::new("rgcbToBeSigned", tys[39].clone(), None), Param::new("ppSignerCert", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(579, 0, "CryptVerifyMessageHash", "CryptVerifyMessageHash", 0, vec![Param::new("pHashPara", tys[26].clone(), None), Param::new("pbHashedBlob", tys[33].clone(), None), Param::new("cbHashedBlob", tys[13].clone(), None), Param::new("pbToBeHashed", tys[33].clone(), None), Param::new("pcbToBeHashed", tys[39].clone(), None), Param::new("pbComputedHash", tys[33].clone(), None), Param::new("pcbComputedHash", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(580, 0, "CryptVerifyMessageSignature", "CryptVerifyMessageSignature", 0, vec![Param::new("pVerifyPara", tys[26].clone(), None), Param::new("dwSignerIndex", tys[13].clone(), None), Param::new("pbSignedBlob", tys[33].clone(), None), Param::new("cbSignedBlob", tys[13].clone(), None), Param::new("pbDecoded", tys[33].clone(), None), Param::new("pcbDecoded", tys[39].clone(), None), Param::new("ppSignerCert", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(581, 0, "CryptVerifyMessageSignatureWithKey", "CryptVerifyMessageSignatureWithKey", 0, vec![Param::new("pVerifyPara", tys[26].clone(), None), Param::new("pPublicKeyInfo", tys[26].clone(), None), Param::new("pbSignedBlob", tys[33].clone(), None), Param::new("cbSignedBlob", tys[13].clone(), None), Param::new("pbDecoded", tys[33].clone(), None), Param::new("pcbDecoded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(582, 0, "CryptVerifySignatureA", "CryptVerifySignatureA", 0, vec![Param::new("hHash", tys[14].clone(), None), Param::new("pbSignature", tys[33].clone(), None), Param::new("dwSigLen", tys[13].clone(), None), Param::new("hPubKey", tys[14].clone(), None), Param::new("szDescription", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(583, 0, "CryptVerifyTimeStampSignature", "CryptVerifyTimeStampSignature", 0, vec![Param::new("pbTSContentInfo", tys[33].clone(), None), Param::new("cbTSContentInfo", tys[13].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), Param::new("hAdditionalStore", tys[37].clone(), None), Param::new("ppTsContext", tys[27].clone(), None), Param::new("ppTsSigner", tys[27].clone(), None), Param::new("phStore", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(584, 0, "CveEventWrite", "CveEventWrite", 0, vec![Param::new("CveId", tys[28].clone(), None), Param::new("AdditionalDetails", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(585, 0, "DPtoLP", "DPtoLP", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lppt", tys[26].clone(), None), Param::new("c", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(586, 0, "DceErrorInqTextA", "DceErrorInqTextA", 0, vec![Param::new("RpcStatus", tys[13].clone(), None), Param::new("ErrorText", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(587, 0, "DdeAbandonTransaction", "DdeAbandonTransaction", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("hConv", tys[26].clone(), None), Param::new("idTransaction", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(588, 0, "DdeAccessData", "DdeAccessData", 0, vec![Param::new("hData", tys[26].clone(), None), Param::new("pcbDataSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(589, 0, "DdeAddData", "DdeAddData", 0, vec![Param::new("hData", tys[26].clone(), None), Param::new("pSrc", tys[33].clone(), None), Param::new("cb", tys[13].clone(), None), Param::new("cbOff", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(590, 0, "DdeClientTransaction", "DdeClientTransaction", 0, vec![Param::new("pData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), Param::new("hConv", tys[26].clone(), None), Param::new("hszItem", tys[26].clone(), None), Param::new("wFmt", tys[13].clone(), None), Param::new("wType", tys[13].clone(), None), Param::new("dwTimeout", tys[13].clone(), None), Param::new("pdwResult", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(591, 0, "DdeCmpStringHandles", "DdeCmpStringHandles", 0, vec![Param::new("hsz1", tys[26].clone(), None), Param::new("hsz2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(592, 0, "DdeConnect", "DdeConnect", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("hszService", tys[26].clone(), None), Param::new("hszTopic", tys[26].clone(), None), Param::new("pCC", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(593, 0, "DdeConnectList", "DdeConnectList", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("hszService", tys[26].clone(), None), Param::new("hszTopic", tys[26].clone(), None), Param::new("hConvList", tys[26].clone(), None), Param::new("pCC", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(594, 0, "DdeCreateDataHandle", "DdeCreateDataHandle", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("pSrc", tys[33].clone(), None), Param::new("cb", tys[13].clone(), None), Param::new("cbOff", tys[13].clone(), None), Param::new("hszItem", tys[26].clone(), None), Param::new("wFmt", tys[13].clone(), None), Param::new("afCmd", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(595, 0, "DdeCreateStringHandleA", "DdeCreateStringHandleA", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("psz", tys[33].clone(), None), Param::new("iCodePage", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(596, 0, "DdeDisconnect", "DdeDisconnect", 0, vec![Param::new("hConv", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(597, 0, "DdeDisconnectList", "DdeDisconnectList", 0, vec![Param::new("hConvList", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(598, 0, "DdeEnableCallback", "DdeEnableCallback", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("hConv", tys[26].clone(), None), Param::new("wCmd", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(599, 0, "DdeFreeDataHandle", "DdeFreeDataHandle", 0, vec![Param::new("hData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(600, 0, "DdeFreeStringHandle", "DdeFreeStringHandle", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("hsz", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(601, 0, "DdeGetData", "DdeGetData", 0, vec![Param::new("hData", tys[26].clone(), None), Param::new("pDst", tys[33].clone(), None), Param::new("cbMax", tys[13].clone(), None), Param::new("cbOff", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(602, 0, "DdeGetLastError", "DdeGetLastError", 0, vec![Param::new("idInst", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(603, 0, "DdeImpersonateClient", "DdeImpersonateClient", 0, vec![Param::new("hConv", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(604, 0, "DdeInitializeA", "DdeInitializeA", 0, vec![Param::new("pidInst", tys[39].clone(), None), Param::new("pfnCallback", tys[26].clone(), None), Param::new("afCmd", tys[13].clone(), None), Param::new("ulRes", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(605, 0, "DdeKeepStringHandle", "DdeKeepStringHandle", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("hsz", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(606, 0, "DdeNameService", "DdeNameService", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("hsz1", tys[26].clone(), None), Param::new("hsz2", tys[26].clone(), None), Param::new("afCmd", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(607, 0, "DdePostAdvise", "DdePostAdvise", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("hszTopic", tys[26].clone(), None), Param::new("hszItem", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(608, 0, "DdeQueryConvInfo", "DdeQueryConvInfo", 0, vec![Param::new("hConv", tys[26].clone(), None), Param::new("idTransaction", tys[13].clone(), None), Param::new("pConvInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(609, 0, "DdeQueryNextServer", "DdeQueryNextServer", 0, vec![Param::new("hConvList", tys[26].clone(), None), Param::new("hConvPrev", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(610, 0, "DdeQueryStringA", "DdeQueryStringA", 0, vec![Param::new("idInst", tys[13].clone(), None), Param::new("hsz", tys[26].clone(), None), Param::new("psz", tys[33].clone(), None), Param::new("cchMax", tys[13].clone(), None), Param::new("iCodePage", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(611, 0, "DdeReconnect", "DdeReconnect", 0, vec![Param::new("hConv", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(612, 0, "DdeSetQualityOfService", "DdeSetQualityOfService", 0, vec![Param::new("hwndClient", tys[26].clone(), None), Param::new("pqosNew", tys[26].clone(), None), Param::new("pqosPrev", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(613, 0, "DdeSetUserHandle", "DdeSetUserHandle", 0, vec![Param::new("hConv", tys[26].clone(), None), Param::new("id", tys[13].clone(), None), Param::new("hUser", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(614, 0, "DdeUnaccessData", "DdeUnaccessData", 0, vec![Param::new("hData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(615, 0, "DdeUninitialize", "DdeUninitialize", 0, vec![Param::new("idInst", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(616, 0, "DeactivateActCtx", "DeactivateActCtx", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("ulCookie", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(617, 0, "DebugActiveProcess", "DebugActiveProcess", 0, vec![Param::new("dwProcessId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(618, 0, "DebugActiveProcessStop", "DebugActiveProcessStop", 0, vec![Param::new("dwProcessId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(619, 0, "DebugBreak", "DebugBreak", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(620, 0, "DebugBreakProcess", "DebugBreakProcess", 0, vec![Param::new("Process", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(621, 0, "DebugSetProcessKillOnExit", "DebugSetProcessKillOnExit", 0, vec![Param::new("KillOnExit", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(622, 0, "DecryptFileA", "DecryptFileA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("dwReserved", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(623, 0, "DefDlgProcA", "DefDlgProcA", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(624, 0, "DefDriverProc", "DefDriverProc", 0, vec![Param::new("dwDriverIdentifier", tys[14].clone(), None), Param::new("hdrvr", tys[26].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("lParam1", tys[14].clone(), None), Param::new("lParam2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(625, 0, "DefFrameProcA", "DefFrameProcA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hWndMDIClient", tys[26].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(626, 0, "DefMDIChildProcA", "DefMDIChildProcA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(627, 0, "DefRawInputProc", "DefRawInputProc", 0, vec![Param::new("paRawInput", tys[27].clone(), None), Param::new("nInput", tys[13].clone(), None), Param::new("cbSizeHeader", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(628, 0, "DefWindowProcA", "DefWindowProcA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(629, 0, "DeferWindowPos", "DeferWindowPos", 0, vec![Param::new("hWinPosInfo", tys[37].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("hWndInsertAfter", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("cx", tys[13].clone(), None), Param::new("cy", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(630, 0, "DefineDosDeviceA", "DefineDosDeviceA", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpDeviceName", tys[33].clone(), None), Param::new("lpTargetPath", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(631, 0, "DeleteAce", "DeleteAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(632, 0, "DeleteAtom", "DeleteAtom", 0, vec![Param::new("nAtom", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(633, 0, "DeleteBoundaryDescriptor", "DeleteBoundaryDescriptor", 0, vec![Param::new("BoundaryDescriptor", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(634, 0, "DeleteColorSpace", "DeleteColorSpace", 0, vec![Param::new("hcs", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(635, 0, "DeleteCriticalSection", "DeleteCriticalSection", 0, vec![Param::new("lpCriticalSection", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(636, 0, "DeleteDC", "DeleteDC", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(637, 0, "DeleteEnhMetaFile", "DeleteEnhMetaFile", 0, vec![Param::new("hmf", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(638, 0, "DeleteFiber", "DeleteFiber", 0, vec![Param::new("lpFiber", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(639, 0, "DeleteFileA", "DeleteFileA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_10(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(640, 0, "DeleteFileTransactedA", "DeleteFileTransactedA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(641, 0, "DeleteFormA", "DeleteFormA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pFormName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(642, 0, "DeleteJobNamedProperty", "DeleteJobNamedProperty", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("JobId", tys[13].clone(), None), Param::new("pszName", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(643, 0, "DeleteMenu", "DeleteMenu", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uPosition", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(644, 0, "DeleteMetaFile", "DeleteMetaFile", 0, vec![Param::new("hmf", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(645, 0, "DeleteMonitorA", "DeleteMonitorA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("pMonitorName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(646, 0, "DeleteObject", "DeleteObject", 0, vec![Param::new("ho", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(647, 0, "DeletePortA", "DeletePortA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("pPortName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(648, 0, "DeletePrintProcessorA", "DeletePrintProcessorA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("pPrintProcessorName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(649, 0, "DeletePrintProvidorA", "DeletePrintProvidorA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("pPrintProvidorName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(650, 0, "DeletePrinter", "DeletePrinter", 0, vec![Param::new("hPrinter", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(651, 0, "DeletePrinterConnectionA", "DeletePrinterConnectionA", 0, vec![Param::new("pName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(652, 0, "DeletePrinterDataA", "DeletePrinterDataA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pValueName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(653, 0, "DeletePrinterDataExA", "DeletePrinterDataExA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pKeyName", tys[33].clone(), None), Param::new("pValueName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(654, 0, "DeletePrinterDriverA", "DeletePrinterDriverA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("pDriverName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(655, 0, "DeletePrinterDriverExA", "DeletePrinterDriverExA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("pDriverName", tys[33].clone(), None), Param::new("dwDeleteFlag", tys[13].clone(), None), Param::new("dwVersionFlag", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(656, 0, "DeletePrinterDriverPackageA", "DeletePrinterDriverPackageA", 0, vec![Param::new("pszServer", tys[33].clone(), None), Param::new("pszInfPath", tys[33].clone(), None), Param::new("pszEnvironment", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(657, 0, "DeletePrinterKeyA", "DeletePrinterKeyA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pKeyName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(658, 0, "DeleteProcThreadAttributeList", "DeleteProcThreadAttributeList", 0, vec![Param::new("lpAttributeList", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(659, 0, "DeleteService", "DeleteService", 0, vec![Param::new("hService", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(660, 0, "DeleteSynchronizationBarrier", "DeleteSynchronizationBarrier", 0, vec![Param::new("lpBarrier", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(661, 0, "DeleteTimerQueue", "DeleteTimerQueue", 0, vec![Param::new("TimerQueue", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(662, 0, "DeleteTimerQueueEx", "DeleteTimerQueueEx", 0, vec![Param::new("TimerQueue", tys[47].clone(), None), Param::new("CompletionEvent", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(663, 0, "DeleteTimerQueueTimer", "DeleteTimerQueueTimer", 0, vec![Param::new("TimerQueue", tys[47].clone(), None), Param::new("Timer", tys[47].clone(), None), Param::new("CompletionEvent", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(664, 0, "DeleteUmsCompletionList", "DeleteUmsCompletionList", 0, vec![Param::new("UmsCompletionList", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(665, 0, "DeleteUmsThreadContext", "DeleteUmsThreadContext", 0, vec![Param::new("UmsThread", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(666, 0, "DeleteVolumeMountPointA", "DeleteVolumeMountPointA", 0, vec![Param::new("lpszVolumeMountPoint", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(667, 0, "DequeueUmsCompletionListItems", "DequeueUmsCompletionListItems", 0, vec![Param::new("UmsCompletionList", tys[37].clone(), None), Param::new("WaitTimeOut", tys[13].clone(), None), Param::new("UmsThreadList", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(668, 0, "DeregisterEventSource", "DeregisterEventSource", 0, vec![Param::new("hEventLog", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(669, 0, "DeregisterShellHookWindow", "DeregisterShellHookWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(670, 0, "DescribePixelFormat", "DescribePixelFormat", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iPixelFormat", tys[13].clone(), None), Param::new("nBytes", tys[13].clone(), None), Param::new("ppfd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(671, 0, "DestroyAcceleratorTable", "DestroyAcceleratorTable", 0, vec![Param::new("hAccel", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(672, 0, "DestroyCaret", "DestroyCaret", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(673, 0, "DestroyCursor", "DestroyCursor", 0, vec![Param::new("hCursor", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(674, 0, "DestroyIcon", "DestroyIcon", 0, vec![Param::new("hIcon", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(675, 0, "DestroyMenu", "DestroyMenu", 0, vec![Param::new("hMenu", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(676, 0, "DestroyPrivateObjectSecurity", "DestroyPrivateObjectSecurity", 0, vec![Param::new("ObjectDescriptor", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(677, 0, "DestroyWindow", "DestroyWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(678, 0, "DeviceCapabilitiesA", "DeviceCapabilitiesA", 0, vec![Param::new("pDevice", tys[33].clone(), None), Param::new("pPort", tys[33].clone(), None), Param::new("fwCapability", tys[11].clone(), None), Param::new("pOutput", tys[33].clone(), None), Param::new("pDevMode", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(679, 0, "DeviceIoControl", "DeviceIoControl", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("dwIoControlCode", tys[13].clone(), None), Param::new("lpInBuffer", tys[37].clone(), None), Param::new("nInBufferSize", tys[13].clone(), None), Param::new("lpOutBuffer", tys[37].clone(), None), Param::new("nOutBufferSize", tys[13].clone(), None), Param::new("lpBytesReturned", tys[39].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(680, 0, "DialogBoxIndirectParamA", "DialogBoxIndirectParamA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("hDialogTemplate", tys[26].clone(), None), Param::new("hWndParent", tys[26].clone(), None), Param::new("lpDialogFunc", tys[26].clone(), None), Param::new("dwInitParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(681, 0, "DialogBoxParamA", "DialogBoxParamA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpTemplateName", tys[33].clone(), None), Param::new("hWndParent", tys[26].clone(), None), Param::new("lpDialogFunc", tys[26].clone(), None), Param::new("dwInitParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(682, 0, "DisableProcessWindowsGhosting", "DisableProcessWindowsGhosting", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(683, 0, "DisableThreadLibraryCalls", "DisableThreadLibraryCalls", 0, vec![Param::new("hLibModule", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(684, 0, "DisableThreadProfiling", "DisableThreadProfiling", 0, vec![Param::new("PerformanceDataHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(685, 0, "DisassociateCurrentThreadFromCallback", "DisassociateCurrentThreadFromCallback", 0, vec![Param::new("pci", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(686, 0, "DiscardVirtualMemory", "DiscardVirtualMemory", 0, vec![Param::new("VirtualAddress", tys[37].clone(), None), Param::new("Size", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(687, 0, "DisconnectNamedPipe", "DisconnectNamedPipe", 0, vec![Param::new("hNamedPipe", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(688, 0, "DispatchMessageA", "DispatchMessageA", 0, vec![Param::new("lpMsg", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(689, 0, "DisplayConfigGetDeviceInfo", "DisplayConfigGetDeviceInfo", 0, vec![Param::new("requestPacket", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(690, 0, "DisplayConfigSetDeviceInfo", "DisplayConfigSetDeviceInfo", 0, vec![Param::new("setPacket", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(691, 0, "DlgDirListA", "DlgDirListA", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("lpPathSpec", tys[33].clone(), None), Param::new("nIDListBox", tys[13].clone(), None), Param::new("nIDStaticPath", tys[13].clone(), None), Param::new("uFileType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(692, 0, "DlgDirListComboBoxA", "DlgDirListComboBoxA", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("lpPathSpec", tys[33].clone(), None), Param::new("nIDComboBox", tys[13].clone(), None), Param::new("nIDStaticPath", tys[13].clone(), None), Param::new("uFiletype", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(693, 0, "DlgDirSelectComboBoxExA", "DlgDirSelectComboBoxExA", 0, vec![Param::new("hwndDlg", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("cchOut", tys[13].clone(), None), Param::new("idComboBox", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(694, 0, "DlgDirSelectExA", "DlgDirSelectExA", 0, vec![Param::new("hwndDlg", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("chCount", tys[13].clone(), None), Param::new("idListBox", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(695, 0, "DnsHostnameToComputerNameA", "DnsHostnameToComputerNameA", 0, vec![Param::new("Hostname", tys[33].clone(), None), Param::new("ComputerName", tys[33].clone(), None), Param::new("nSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(696, 0, "DoEnvironmentSubstA", "DoEnvironmentSubstA", 0, vec![Param::new("pszSrc", tys[33].clone(), None), Param::new("cchSrc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(697, 0, "DocumentPropertiesA", "DocumentPropertiesA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hPrinter", tys[47].clone(), None), Param::new("pDeviceName", tys[33].clone(), None), Param::new("pDevModeOutput", tys[26].clone(), None), Param::new("pDevModeInput", tys[26].clone(), None), Param::new("fMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(698, 0, "DosDateTimeToFileTime", "DosDateTimeToFileTime", 0, vec![Param::new("wFatDate", tys[11].clone(), None), Param::new("wFatTime", tys[11].clone(), None), Param::new("lpFileTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(699, 0, "DragAcceptFiles", "DragAcceptFiles", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("fAccept", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(700, 0, "DragDetect", "DragDetect", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pt", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(701, 0, "DragFinish", "DragFinish", 0, vec![Param::new("hDrop", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(702, 0, "DragObject", "DragObject", 0, vec![Param::new("hwndParent", tys[26].clone(), None), Param::new("hwndFrom", tys[26].clone(), None), Param::new("fmt", tys[13].clone(), None), Param::new("data", tys[14].clone(), None), Param::new("hcur", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(703, 0, "DragQueryFileA", "DragQueryFileA", 0, vec![Param::new("hDrop", tys[26].clone(), None), Param::new("iFile", tys[13].clone(), None), Param::new("lpszFile", tys[33].clone(), None), Param::new("cch", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_11(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(704, 0, "DragQueryPoint", "DragQueryPoint", 0, vec![Param::new("hDrop", tys[26].clone(), None), Param::new("ppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(705, 0, "DrawAnimatedRects", "DrawAnimatedRects", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("idAni", tys[13].clone(), None), Param::new("lprcFrom", tys[26].clone(), None), Param::new("lprcTo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(706, 0, "DrawCaption", "DrawCaption", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("hdc", tys[26].clone(), None), Param::new("lprect", tys[26].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(707, 0, "DrawEdge", "DrawEdge", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("qrc", tys[26].clone(), None), Param::new("edge", tys[13].clone(), None), Param::new("grfFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(708, 0, "DrawEscape", "DrawEscape", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iEscape", tys[13].clone(), None), Param::new("cjIn", tys[13].clone(), None), Param::new("lpIn", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(709, 0, "DrawFocusRect", "DrawFocusRect", 0, vec![Param::new("hDC", tys[26].clone(), None), Param::new("lprc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(710, 0, "DrawFrameControl", "DrawFrameControl", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("arg3", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(711, 0, "DrawIcon", "DrawIcon", 0, vec![Param::new("hDC", tys[26].clone(), None), Param::new("X", tys[13].clone(), None), Param::new("Y", tys[13].clone(), None), Param::new("hIcon", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(712, 0, "DrawIconEx", "DrawIconEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("xLeft", tys[13].clone(), None), Param::new("yTop", tys[13].clone(), None), Param::new("hIcon", tys[26].clone(), None), Param::new("cxWidth", tys[13].clone(), None), Param::new("cyWidth", tys[13].clone(), None), Param::new("istepIfAniCur", tys[13].clone(), None), Param::new("hbrFlickerFreeDraw", tys[26].clone(), None), Param::new("diFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(713, 0, "DrawMenuBar", "DrawMenuBar", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(714, 0, "DrawStateA", "DrawStateA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hbrFore", tys[26].clone(), None), Param::new("qfnCallBack", tys[26].clone(), None), Param::new("lData", tys[14].clone(), None), Param::new("wData", tys[14].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("cx", tys[13].clone(), None), Param::new("cy", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(715, 0, "DrawTextA", "DrawTextA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpchText", tys[33].clone(), None), Param::new("cchText", tys[13].clone(), None), Param::new("lprc", tys[26].clone(), None), Param::new("format", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(716, 0, "DrawTextExA", "DrawTextExA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpchText", tys[33].clone(), None), Param::new("cchText", tys[13].clone(), None), Param::new("lprc", tys[26].clone(), None), Param::new("format", tys[13].clone(), None), Param::new("lpdtp", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(717, 0, "DriverCallback", "DriverCallback", 0, vec![Param::new("dwCallback", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("hDevice", tys[26].clone(), None), Param::new("dwMsg", tys[13].clone(), None), Param::new("dwUser", tys[14].clone(), None), Param::new("dwParam1", tys[14].clone(), None), Param::new("dwParam2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(718, 0, "DrvGetModuleHandle", "DrvGetModuleHandle", 0, vec![Param::new("hDriver", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(719, 0, "DuplicateEncryptionInfoFile", "DuplicateEncryptionInfoFile", 0, vec![Param::new("SrcFileName", tys[28].clone(), None), Param::new("DstFileName", tys[28].clone(), None), Param::new("dwCreationDistribution", tys[13].clone(), None), Param::new("dwAttributes", tys[13].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(720, 0, "DuplicateHandle", "DuplicateHandle", 0, vec![Param::new("hSourceProcessHandle", tys[47].clone(), None), Param::new("hSourceHandle", tys[47].clone(), None), Param::new("hTargetProcessHandle", tys[47].clone(), None), Param::new("lpTargetHandle", tys[32].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("bInheritHandle", tys[13].clone(), None), Param::new("dwOptions", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(721, 0, "DuplicateIcon", "DuplicateIcon", 0, vec![Param::new("hInst", tys[26].clone(), None), Param::new("hIcon", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(722, 0, "DuplicateToken", "DuplicateToken", 0, vec![Param::new("ExistingTokenHandle", tys[47].clone(), None), Param::new("ImpersonationLevel", tys[13].clone(), None), Param::new("DuplicateTokenHandle", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(723, 0, "DuplicateTokenEx", "DuplicateTokenEx", 0, vec![Param::new("hExistingToken", tys[47].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("lpTokenAttributes", tys[26].clone(), None), Param::new("ImpersonationLevel", tys[13].clone(), None), Param::new("TokenType", tys[13].clone(), None), Param::new("phNewToken", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(724, 0, "Ellipse", "Ellipse", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("left", tys[13].clone(), None), Param::new("top", tys[13].clone(), None), Param::new("right", tys[13].clone(), None), Param::new("bottom", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(725, 0, "EmptyClipboard", "EmptyClipboard", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(726, 0, "EnableMenuItem", "EnableMenuItem", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uIDEnableItem", tys[13].clone(), None), Param::new("uEnable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(727, 0, "EnableMouseInPointer", "EnableMouseInPointer", 0, vec![Param::new("fEnable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(728, 0, "EnableNonClientDpiScaling", "EnableNonClientDpiScaling", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(729, 0, "EnableScrollBar", "EnableScrollBar", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("wSBflags", tys[13].clone(), None), Param::new("wArrows", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(730, 0, "EnableThreadProfiling", "EnableThreadProfiling", 0, vec![Param::new("ThreadHandle", tys[47].clone(), None), Param::new("Flags", tys[13].clone(), None), Param::new("HardwareCounters", tys[14].clone(), None), Param::new("PerformanceDataHandle", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(731, 0, "EnableWindow", "EnableWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("bEnable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(732, 0, "EncryptFileA", "EncryptFileA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(733, 0, "EncryptionDisable", "EncryptionDisable", 0, vec![Param::new("DirPath", tys[28].clone(), None), Param::new("Disable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(734, 0, "EndDeferWindowPos", "EndDeferWindowPos", 0, vec![Param::new("hWinPosInfo", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(735, 0, "EndDialog", "EndDialog", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nResult", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(736, 0, "EndDoc", "EndDoc", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(737, 0, "EndDocPrinter", "EndDocPrinter", 0, vec![Param::new("hPrinter", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(738, 0, "EndMenu", "EndMenu", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(739, 0, "EndPage", "EndPage", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(740, 0, "EndPagePrinter", "EndPagePrinter", 0, vec![Param::new("hPrinter", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(741, 0, "EndPaint", "EndPaint", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpPaint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(742, 0, "EndPath", "EndPath", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(743, 0, "EndUpdateResourceA", "EndUpdateResourceA", 0, vec![Param::new("hUpdate", tys[47].clone(), None), Param::new("fDiscard", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(744, 0, "EnterCriticalSection", "EnterCriticalSection", 0, vec![Param::new("lpCriticalSection", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(745, 0, "EnterSynchronizationBarrier", "EnterSynchronizationBarrier", 0, vec![Param::new("lpBarrier", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(746, 0, "EnterUmsSchedulingMode", "EnterUmsSchedulingMode", 0, vec![Param::new("SchedulerStartupInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(747, 0, "EnumCalendarInfoA", "EnumCalendarInfoA", 0, vec![Param::new("lpCalInfoEnumProc", tys[26].clone(), None), Param::new("Locale", tys[13].clone(), None), Param::new("Calendar", tys[13].clone(), None), Param::new("CalType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(748, 0, "EnumCalendarInfoExA", "EnumCalendarInfoExA", 0, vec![Param::new("lpCalInfoEnumProcEx", tys[26].clone(), None), Param::new("Locale", tys[13].clone(), None), Param::new("Calendar", tys[13].clone(), None), Param::new("CalType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(749, 0, "EnumCalendarInfoExEx", "EnumCalendarInfoExEx", 0, vec![Param::new("pCalInfoEnumProcExEx", tys[26].clone(), None), Param::new("lpLocaleName", tys[28].clone(), None), Param::new("Calendar", tys[13].clone(), None), Param::new("lpReserved", tys[28].clone(), None), Param::new("CalType", tys[13].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(750, 0, "EnumChildWindows", "EnumChildWindows", 0, vec![Param::new("hWndParent", tys[26].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(751, 0, "EnumClipboardFormats", "EnumClipboardFormats", 0, vec![Param::new("format", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(752, 0, "EnumDateFormatsA", "EnumDateFormatsA", 0, vec![Param::new("lpDateFmtEnumProc", tys[26].clone(), None), Param::new("Locale", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(753, 0, "EnumDateFormatsExA", "EnumDateFormatsExA", 0, vec![Param::new("lpDateFmtEnumProcEx", tys[26].clone(), None), Param::new("Locale", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(754, 0, "EnumDateFormatsExEx", "EnumDateFormatsExEx", 0, vec![Param::new("lpDateFmtEnumProcExEx", tys[26].clone(), None), Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(755, 0, "EnumDependentServicesA", "EnumDependentServicesA", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwServiceState", tys[13].clone(), None), Param::new("lpServices", tys[26].clone(), None), Param::new("cbBufSize", tys[13].clone(), None), Param::new("pcbBytesNeeded", tys[39].clone(), None), Param::new("lpServicesReturned", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(756, 0, "EnumDesktopWindows", "EnumDesktopWindows", 0, vec![Param::new("hDesktop", tys[26].clone(), None), Param::new("lpfn", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(757, 0, "EnumDesktopsA", "EnumDesktopsA", 0, vec![Param::new("hwinsta", tys[26].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(758, 0, "EnumDisplayDevicesA", "EnumDisplayDevicesA", 0, vec![Param::new("lpDevice", tys[33].clone(), None), Param::new("iDevNum", tys[13].clone(), None), Param::new("lpDisplayDevice", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(759, 0, "EnumDisplayMonitors", "EnumDisplayMonitors", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lprcClip", tys[26].clone(), None), Param::new("lpfnEnum", tys[26].clone(), None), Param::new("dwData", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(760, 0, "EnumDisplaySettingsA", "EnumDisplaySettingsA", 0, vec![Param::new("lpszDeviceName", tys[33].clone(), None), Param::new("iModeNum", tys[13].clone(), None), Param::new("lpDevMode", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(761, 0, "EnumDisplaySettingsExA", "EnumDisplaySettingsExA", 0, vec![Param::new("lpszDeviceName", tys[33].clone(), None), Param::new("iModeNum", tys[13].clone(), None), Param::new("lpDevMode", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(762, 0, "EnumDynamicTimeZoneInformation", "EnumDynamicTimeZoneInformation", 0, vec![Param::new("dwIndex", tys[13].clone(), None), Param::new("lpTimeZoneInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(763, 0, "EnumEnhMetaFile", "EnumEnhMetaFile", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hmf", tys[26].clone(), None), Param::new("proc", tys[26].clone(), None), Param::new("param", tys[37].clone(), None), Param::new("lpRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(764, 0, "EnumFontFamiliesA", "EnumFontFamiliesA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpLogfont", tys[33].clone(), None), Param::new("lpProc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(765, 0, "EnumFontFamiliesExA", "EnumFontFamiliesExA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpLogfont", tys[26].clone(), None), Param::new("lpProc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(766, 0, "EnumFontsA", "EnumFontsA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpLogfont", tys[33].clone(), None), Param::new("lpProc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(767, 0, "EnumFormsA", "EnumFormsA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pForm", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), Param::new("pcReturned", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_12(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(768, 0, "EnumICMProfilesA", "EnumICMProfilesA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("proc", tys[26].clone(), None), Param::new("param", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(769, 0, "EnumJobNamedProperties", "EnumJobNamedProperties", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("JobId", tys[13].clone(), None), Param::new("pcProperties", tys[39].clone(), None), Param::new("ppProperties", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(770, 0, "EnumJobsA", "EnumJobsA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("FirstJob", tys[13].clone(), None), Param::new("NoJobs", tys[13].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pJob", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), Param::new("pcReturned", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(771, 0, "EnumLanguageGroupLocalesA", "EnumLanguageGroupLocalesA", 0, vec![Param::new("lpLangGroupLocaleEnumProc", tys[26].clone(), None), Param::new("LanguageGroup", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(772, 0, "EnumMetaFile", "EnumMetaFile", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hmf", tys[26].clone(), None), Param::new("proc", tys[26].clone(), None), Param::new("param", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(773, 0, "EnumMonitorsA", "EnumMonitorsA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pMonitor", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), Param::new("pcReturned", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(774, 0, "EnumObjects", "EnumObjects", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("nType", tys[13].clone(), None), Param::new("lpFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(775, 0, "EnumPortsA", "EnumPortsA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pPort", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), Param::new("pcReturned", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(776, 0, "EnumPrintProcessorDatatypesA", "EnumPrintProcessorDatatypesA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pPrintProcessorName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pDatatypes", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), Param::new("pcReturned", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(777, 0, "EnumPrintProcessorsA", "EnumPrintProcessorsA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pPrintProcessorInfo", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), Param::new("pcReturned", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(778, 0, "EnumPrinterDataA", "EnumPrinterDataA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("pValueName", tys[33].clone(), None), Param::new("cbValueName", tys[13].clone(), None), Param::new("pcbValueName", tys[39].clone(), None), Param::new("pType", tys[39].clone(), None), Param::new("pData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), Param::new("pcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(779, 0, "EnumPrinterDataExA", "EnumPrinterDataExA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pKeyName", tys[33].clone(), None), Param::new("pEnumValues", tys[33].clone(), None), Param::new("cbEnumValues", tys[13].clone(), None), Param::new("pcbEnumValues", tys[39].clone(), None), Param::new("pnEnumValues", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(780, 0, "EnumPrinterDriversA", "EnumPrinterDriversA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pDriverInfo", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), Param::new("pcReturned", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(781, 0, "EnumPrinterKeyA", "EnumPrinterKeyA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pKeyName", tys[33].clone(), None), Param::new("pSubkey", tys[33].clone(), None), Param::new("cbSubkey", tys[13].clone(), None), Param::new("pcbSubkey", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(782, 0, "EnumPrintersA", "EnumPrintersA", 0, vec![Param::new("Flags", tys[13].clone(), None), Param::new("Name", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pPrinterEnum", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), Param::new("pcReturned", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(783, 0, "EnumPropsA", "EnumPropsA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(784, 0, "EnumPropsExA", "EnumPropsExA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(785, 0, "EnumResourceLanguagesA", "EnumResourceLanguagesA", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpType", tys[33].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(786, 0, "EnumResourceLanguagesExA", "EnumResourceLanguagesExA", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpType", tys[33].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("LangId", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(787, 0, "EnumResourceNamesA", "EnumResourceNamesA", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpType", tys[33].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(788, 0, "EnumResourceNamesExA", "EnumResourceNamesExA", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpType", tys[33].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("LangId", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(789, 0, "EnumResourceTypesA", "EnumResourceTypesA", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(790, 0, "EnumResourceTypesExA", "EnumResourceTypesExA", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("LangId", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(791, 0, "EnumServicesStatusA", "EnumServicesStatusA", 0, vec![Param::new("hSCManager", tys[26].clone(), None), Param::new("dwServiceType", tys[13].clone(), None), Param::new("dwServiceState", tys[13].clone(), None), Param::new("lpServices", tys[26].clone(), None), Param::new("cbBufSize", tys[13].clone(), None), Param::new("pcbBytesNeeded", tys[39].clone(), None), Param::new("lpServicesReturned", tys[39].clone(), None), Param::new("lpResumeHandle", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(792, 0, "EnumServicesStatusExA", "EnumServicesStatusExA", 0, vec![Param::new("hSCManager", tys[26].clone(), None), Param::new("InfoLevel", tys[13].clone(), None), Param::new("dwServiceType", tys[13].clone(), None), Param::new("dwServiceState", tys[13].clone(), None), Param::new("lpServices", tys[33].clone(), None), Param::new("cbBufSize", tys[13].clone(), None), Param::new("pcbBytesNeeded", tys[39].clone(), None), Param::new("lpServicesReturned", tys[39].clone(), None), Param::new("lpResumeHandle", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(793, 0, "EnumSystemCodePagesA", "EnumSystemCodePagesA", 0, vec![Param::new("lpCodePageEnumProc", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(794, 0, "EnumSystemFirmwareTables", "EnumSystemFirmwareTables", 0, vec![Param::new("FirmwareTableProviderSignature", tys[13].clone(), None), Param::new("pFirmwareTableEnumBuffer", tys[37].clone(), None), Param::new("BufferSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(795, 0, "EnumSystemGeoID", "EnumSystemGeoID", 0, vec![Param::new("GeoClass", tys[13].clone(), None), Param::new("ParentGeoId", tys[13].clone(), None), Param::new("lpGeoEnumProc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(796, 0, "EnumSystemLanguageGroupsA", "EnumSystemLanguageGroupsA", 0, vec![Param::new("lpLanguageGroupEnumProc", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(797, 0, "EnumSystemLocalesA", "EnumSystemLocalesA", 0, vec![Param::new("lpLocaleEnumProc", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(798, 0, "EnumSystemLocalesEx", "EnumSystemLocalesEx", 0, vec![Param::new("lpLocaleEnumProcEx", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lParam", tys[14].clone(), None), Param::new("lpReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(799, 0, "EnumThreadWindows", "EnumThreadWindows", 0, vec![Param::new("dwThreadId", tys[13].clone(), None), Param::new("lpfn", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(800, 0, "EnumTimeFormatsA", "EnumTimeFormatsA", 0, vec![Param::new("lpTimeFmtEnumProc", tys[26].clone(), None), Param::new("Locale", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(801, 0, "EnumTimeFormatsEx", "EnumTimeFormatsEx", 0, vec![Param::new("lpTimeFmtEnumProcEx", tys[26].clone(), None), Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(802, 0, "EnumUILanguagesA", "EnumUILanguagesA", 0, vec![Param::new("lpUILanguageEnumProc", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(803, 0, "EnumWindowStationsA", "EnumWindowStationsA", 0, vec![Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(804, 0, "EnumWindows", "EnumWindows", 0, vec![Param::new("lpEnumFunc", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(805, 0, "EqualDomainSid", "EqualDomainSid", 0, vec![Param::new("pSid1", tys[37].clone(), None), Param::new("pSid2", tys[37].clone(), None), Param::new("pfEqual", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(806, 0, "EqualPrefixSid", "EqualPrefixSid", 0, vec![Param::new("pSid1", tys[37].clone(), None), Param::new("pSid2", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(807, 0, "EqualRect", "EqualRect", 0, vec![Param::new("lprc1", tys[26].clone(), None), Param::new("lprc2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(808, 0, "EqualRgn", "EqualRgn", 0, vec![Param::new("hrgn1", tys[26].clone(), None), Param::new("hrgn2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(809, 0, "EqualSid", "EqualSid", 0, vec![Param::new("pSid1", tys[37].clone(), None), Param::new("pSid2", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(810, 0, "EraseTape", "EraseTape", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("dwEraseType", tys[13].clone(), None), Param::new("bImmediate", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(811, 0, "Escape", "Escape", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iEscape", tys[13].clone(), None), Param::new("cjIn", tys[13].clone(), None), Param::new("pvIn", tys[33].clone(), None), Param::new("pvOut", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(812, 0, "EscapeCommFunction", "EscapeCommFunction", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("dwFunc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(813, 0, "EvaluateProximityToPolygon", "EvaluateProximityToPolygon", 0, vec![Param::new("numVertices", tys[13].clone(), None), Param::new("controlPolygon", tys[26].clone(), None), Param::new("pHitTestingInput", tys[26].clone(), None), Param::new("pProximityEval", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(814, 0, "EvaluateProximityToRect", "EvaluateProximityToRect", 0, vec![Param::new("controlBoundingBox", tys[26].clone(), None), Param::new("pHitTestingInput", tys[26].clone(), None), Param::new("pProximityEval", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(815, 0, "ExcludeClipRect", "ExcludeClipRect", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("left", tys[13].clone(), None), Param::new("top", tys[13].clone(), None), Param::new("right", tys[13].clone(), None), Param::new("bottom", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(816, 0, "ExcludeUpdateRgn", "ExcludeUpdateRgn", 0, vec![Param::new("hDC", tys[26].clone(), None), Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(817, 0, "ExecuteUmsThread", "ExecuteUmsThread", 0, vec![Param::new("UmsThread", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(818, 0, "ExitProcess", "ExitProcess", 0, vec![Param::new("uExitCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(819, 0, "ExitThread", "ExitThread", 0, vec![Param::new("dwExitCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(820, 0, "ExpandEnvironmentStringsA", "ExpandEnvironmentStringsA", 0, vec![Param::new("lpSrc", tys[33].clone(), None), Param::new("lpDst", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(821, 0, "ExtCreatePen", "ExtCreatePen", 0, vec![Param::new("iPenStyle", tys[13].clone(), None), Param::new("cWidth", tys[13].clone(), None), Param::new("plbrush", tys[26].clone(), None), Param::new("cStyle", tys[13].clone(), None), Param::new("pstyle", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(822, 0, "ExtCreateRegion", "ExtCreateRegion", 0, vec![Param::new("lpx", tys[26].clone(), None), Param::new("nCount", tys[13].clone(), None), Param::new("lpData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(823, 0, "ExtDeviceMode", "ExtDeviceMode", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hInst", tys[47].clone(), None), Param::new("pDevModeOutput", tys[26].clone(), None), Param::new("pDeviceName", tys[33].clone(), None), Param::new("pPort", tys[33].clone(), None), Param::new("pDevModeInput", tys[26].clone(), None), Param::new("pProfile", tys[33].clone(), None), Param::new("fMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(824, 0, "ExtEscape", "ExtEscape", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iEscape", tys[13].clone(), None), Param::new("cjInput", tys[13].clone(), None), Param::new("lpInData", tys[33].clone(), None), Param::new("cjOutput", tys[13].clone(), None), Param::new("lpOutData", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(825, 0, "ExtFloodFill", "ExtFloodFill", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("color", tys[13].clone(), None), Param::new("type", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(826, 0, "ExtSelectClipRgn", "ExtSelectClipRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hrgn", tys[26].clone(), None), Param::new("mode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(827, 0, "ExtTextOutA", "ExtTextOutA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("options", tys[13].clone(), None), Param::new("lprect", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("c", tys[13].clone(), None), Param::new("lpDx", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(828, 0, "ExtractAssociatedIconA", "ExtractAssociatedIconA", 0, vec![Param::new("hInst", tys[26].clone(), None), Param::new("pszIconPath", tys[33].clone(), None), Param::new("piIcon", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(829, 0, "ExtractAssociatedIconExA", "ExtractAssociatedIconExA", 0, vec![Param::new("hInst", tys[26].clone(), None), Param::new("pszIconPath", tys[33].clone(), None), Param::new("piIconIndex", tys[28].clone(), None), Param::new("piIconId", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(830, 0, "ExtractIconA", "ExtractIconA", 0, vec![Param::new("hInst", tys[26].clone(), None), Param::new("pszExeFileName", tys[33].clone(), None), Param::new("nIconIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(831, 0, "ExtractIconExA", "ExtractIconExA", 0, vec![Param::new("lpszFile", tys[33].clone(), None), Param::new("nIconIndex", tys[13].clone(), None), Param::new("phiconLarge", tys[27].clone(), None), Param::new("phiconSmall", tys[27].clone(), None), Param::new("nIcons", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_13(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(832, 0, "FatalAppExitA", "FatalAppExitA", 0, vec![Param::new("uAction", tys[13].clone(), None), Param::new("lpMessageText", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(833, 0, "FatalExit", "FatalExit", 0, vec![Param::new("ExitCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(834, 0, "FileEncryptionStatusA", "FileEncryptionStatusA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("lpStatus", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(835, 0, "FileTimeToDosDateTime", "FileTimeToDosDateTime", 0, vec![Param::new("lpFileTime", tys[26].clone(), None), Param::new("lpFatDate", tys[28].clone(), None), Param::new("lpFatTime", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(836, 0, "FileTimeToLocalFileTime", "FileTimeToLocalFileTime", 0, vec![Param::new("lpFileTime", tys[26].clone(), None), Param::new("lpLocalFileTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(837, 0, "FileTimeToSystemTime", "FileTimeToSystemTime", 0, vec![Param::new("lpFileTime", tys[26].clone(), None), Param::new("lpSystemTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(838, 0, "FillConsoleOutputAttribute", "FillConsoleOutputAttribute", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("wAttribute", tys[11].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("dwWriteCoord", tys[16].clone(), None), Param::new("lpNumberOfAttrsWritten", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(839, 0, "FillConsoleOutputCharacterA", "FillConsoleOutputCharacterA", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("cCharacter", tys[15].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("dwWriteCoord", tys[16].clone(), None), Param::new("lpNumberOfCharsWritten", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(840, 0, "FillPath", "FillPath", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(841, 0, "FillRect", "FillRect", 0, vec![Param::new("hDC", tys[26].clone(), None), Param::new("lprc", tys[26].clone(), None), Param::new("hbr", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(842, 0, "FillRgn", "FillRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hrgn", tys[26].clone(), None), Param::new("hbr", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(843, 0, "FindActCtxSectionGuid", "FindActCtxSectionGuid", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpExtensionGuid", tys[26].clone(), None), Param::new("ulSectionId", tys[13].clone(), None), Param::new("lpGuidToFind", tys[26].clone(), None), Param::new("ReturnedData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(844, 0, "FindActCtxSectionStringA", "FindActCtxSectionStringA", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpExtensionGuid", tys[26].clone(), None), Param::new("ulSectionId", tys[13].clone(), None), Param::new("lpStringToFind", tys[33].clone(), None), Param::new("ReturnedData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(845, 0, "FindAtomA", "FindAtomA", 0, vec![Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(846, 0, "FindClose", "FindClose", 0, vec![Param::new("hFindFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(847, 0, "FindCloseChangeNotification", "FindCloseChangeNotification", 0, vec![Param::new("hChangeHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(848, 0, "FindClosePrinterChangeNotification", "FindClosePrinterChangeNotification", 0, vec![Param::new("hChange", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(849, 0, "FindExecutableA", "FindExecutableA", 0, vec![Param::new("lpFile", tys[33].clone(), None), Param::new("lpDirectory", tys[33].clone(), None), Param::new("lpResult", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(850, 0, "FindFirstChangeNotificationA", "FindFirstChangeNotificationA", 0, vec![Param::new("lpPathName", tys[33].clone(), None), Param::new("bWatchSubtree", tys[13].clone(), None), Param::new("dwNotifyFilter", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(851, 0, "FindFirstFileA", "FindFirstFileA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("lpFindFileData", tys[26].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(852, 0, "FindFirstFileExA", "FindFirstFileExA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("fInfoLevelId", tys[13].clone(), None), Param::new("lpFindFileData", tys[37].clone(), None), Param::new("fSearchOp", tys[13].clone(), None), Param::new("lpSearchFilter", tys[37].clone(), None), Param::new("dwAdditionalFlags", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(853, 0, "FindFirstFileTransactedA", "FindFirstFileTransactedA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("fInfoLevelId", tys[13].clone(), None), Param::new("lpFindFileData", tys[37].clone(), None), Param::new("fSearchOp", tys[13].clone(), None), Param::new("lpSearchFilter", tys[37].clone(), None), Param::new("dwAdditionalFlags", tys[13].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(854, 0, "FindFirstFreeAce", "FindFirstFreeAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("pAce", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(855, 0, "FindFirstPrinterChangeNotification", "FindFirstPrinterChangeNotification", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("fdwFilter", tys[13].clone(), None), Param::new("fdwOptions", tys[13].clone(), None), Param::new("pPrinterNotifyOptions", tys[37].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(856, 0, "FindFirstVolumeA", "FindFirstVolumeA", 0, vec![Param::new("lpszVolumeName", tys[33].clone(), None), Param::new("cchBufferLength", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(857, 0, "FindFirstVolumeMountPointA", "FindFirstVolumeMountPointA", 0, vec![Param::new("lpszRootPathName", tys[33].clone(), None), Param::new("lpszVolumeMountPoint", tys[33].clone(), None), Param::new("cchBufferLength", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(858, 0, "FindNLSString", "FindNLSString", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwFindNLSStringFlags", tys[13].clone(), None), Param::new("lpStringSource", tys[28].clone(), None), Param::new("cchSource", tys[13].clone(), None), Param::new("lpStringValue", tys[28].clone(), None), Param::new("cchValue", tys[13].clone(), None), Param::new("pcchFound", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(859, 0, "FindNLSStringEx", "FindNLSStringEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwFindNLSStringFlags", tys[13].clone(), None), Param::new("lpStringSource", tys[28].clone(), None), Param::new("cchSource", tys[13].clone(), None), Param::new("lpStringValue", tys[28].clone(), None), Param::new("cchValue", tys[13].clone(), None), Param::new("pcchFound", tys[39].clone(), None), Param::new("lpVersionInformation", tys[26].clone(), None), Param::new("lpReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(860, 0, "FindNextChangeNotification", "FindNextChangeNotification", 0, vec![Param::new("hChangeHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(861, 0, "FindNextFileA", "FindNextFileA", 0, vec![Param::new("hFindFile", tys[47].clone(), None), Param::new("lpFindFileData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(862, 0, "FindNextPrinterChangeNotification", "FindNextPrinterChangeNotification", 0, vec![Param::new("hChange", tys[47].clone(), None), Param::new("pdwChange", tys[39].clone(), None), Param::new("pvReserved", tys[37].clone(), None), Param::new("ppPrinterNotifyInfo", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(863, 0, "FindNextVolumeA", "FindNextVolumeA", 0, vec![Param::new("hFindVolume", tys[47].clone(), None), Param::new("lpszVolumeName", tys[33].clone(), None), Param::new("cchBufferLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(864, 0, "FindNextVolumeMountPointA", "FindNextVolumeMountPointA", 0, vec![Param::new("hFindVolumeMountPoint", tys[47].clone(), None), Param::new("lpszVolumeMountPoint", tys[33].clone(), None), Param::new("cchBufferLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(865, 0, "FindResourceA", "FindResourceA", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("lpType", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(866, 0, "FindResourceExA", "FindResourceExA", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpType", tys[33].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("wLanguage", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(867, 0, "FindStringOrdinal", "FindStringOrdinal", 0, vec![Param::new("dwFindStringOrdinalFlags", tys[13].clone(), None), Param::new("lpStringSource", tys[28].clone(), None), Param::new("cchSource", tys[13].clone(), None), Param::new("lpStringValue", tys[28].clone(), None), Param::new("cchValue", tys[13].clone(), None), Param::new("bIgnoreCase", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(868, 0, "FindTextA", "FindTextA", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(869, 0, "FindVolumeClose", "FindVolumeClose", 0, vec![Param::new("hFindVolume", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(870, 0, "FindVolumeMountPointClose", "FindVolumeMountPointClose", 0, vec![Param::new("hFindVolumeMountPoint", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(871, 0, "FindWindowA", "FindWindowA", 0, vec![Param::new("lpClassName", tys[33].clone(), None), Param::new("lpWindowName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(872, 0, "FindWindowExA", "FindWindowExA", 0, vec![Param::new("hWndParent", tys[26].clone(), None), Param::new("hWndChildAfter", tys[26].clone(), None), Param::new("lpszClass", tys[33].clone(), None), Param::new("lpszWindow", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(873, 0, "FixBrushOrgEx", "FixBrushOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("ptl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(874, 0, "FlashWindow", "FlashWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("bInvert", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(875, 0, "FlashWindowEx", "FlashWindowEx", 0, vec![Param::new("pfwi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(876, 0, "FlattenPath", "FlattenPath", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(877, 0, "FloodFill", "FloodFill", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(878, 0, "FlsAlloc", "FlsAlloc", 0, vec![Param::new("lpCallback", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(879, 0, "FlsFree", "FlsFree", 0, vec![Param::new("dwFlsIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(880, 0, "FlsGetValue", "FlsGetValue", 0, vec![Param::new("dwFlsIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(881, 0, "FlsSetValue", "FlsSetValue", 0, vec![Param::new("dwFlsIndex", tys[13].clone(), None), Param::new("lpFlsData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(882, 0, "FlushConsoleInputBuffer", "FlushConsoleInputBuffer", 0, vec![Param::new("hConsoleInput", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(883, 0, "FlushFileBuffers", "FlushFileBuffers", 0, vec![Param::new("hFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(884, 0, "FlushInstructionCache", "FlushInstructionCache", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpBaseAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(885, 0, "FlushPrinter", "FlushPrinter", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pBuf", tys[37].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcWritten", tys[39].clone(), None), Param::new("cSleep", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(886, 0, "FlushProcessWriteBuffers", "FlushProcessWriteBuffers", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(887, 0, "FlushViewOfFile", "FlushViewOfFile", 0, vec![Param::new("lpBaseAddress", tys[37].clone(), None), Param::new("dwNumberOfBytesToFlush", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(888, 0, "FmtIdToPropStgName", "FmtIdToPropStgName", 0, vec![Param::new("pfmtid", tys[26].clone(), None), Param::new("oszName", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(889, 0, "FoldStringA", "FoldStringA", 0, vec![Param::new("dwMapFlags", tys[13].clone(), None), Param::new("lpSrcStr", tys[33].clone(), None), Param::new("cchSrc", tys[13].clone(), None), Param::new("lpDestStr", tys[33].clone(), None), Param::new("cchDest", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(890, 0, "FormatMessageA", "FormatMessageA", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpSource", tys[37].clone(), None), Param::new("dwMessageId", tys[13].clone(), None), Param::new("dwLanguageId", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("Arguments", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(891, 0, "FrameRect", "FrameRect", 0, vec![Param::new("hDC", tys[26].clone(), None), Param::new("lprc", tys[26].clone(), None), Param::new("hbr", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(892, 0, "FrameRgn", "FrameRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hrgn", tys[26].clone(), None), Param::new("hbr", tys[26].clone(), None), Param::new("w", tys[13].clone(), None), Param::new("h", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(893, 0, "FreeConsole", "FreeConsole", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(894, 0, "FreeDDElParam", "FreeDDElParam", 0, vec![Param::new("msg", tys[13].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(895, 0, "FreeEncryptedFileMetadata", "FreeEncryptedFileMetadata", 0, vec![Param::new("pbMetadata", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_14(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(896, 0, "FreeEncryptionCertificateHashList", "FreeEncryptionCertificateHashList", 0, vec![Param::new("pUsers", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(897, 0, "FreeEnvironmentStringsA", "FreeEnvironmentStringsA", 0, vec![Param::new("penv", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(898, 0, "FreeLibrary", "FreeLibrary", 0, vec![Param::new("hLibModule", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(899, 0, "FreeLibraryAndExitThread", "FreeLibraryAndExitThread", 0, vec![Param::new("hLibModule", tys[26].clone(), None), Param::new("dwExitCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(900, 0, "FreeLibraryWhenCallbackReturns", "FreeLibraryWhenCallbackReturns", 0, vec![Param::new("pci", tys[26].clone(), None), Param::new("mod", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(901, 0, "FreeMemoryJobObject", "FreeMemoryJobObject", 0, vec![Param::new("Buffer", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(902, 0, "FreePrintNamedPropertyArray", "FreePrintNamedPropertyArray", 0, vec![Param::new("cProperties", tys[13].clone(), None), Param::new("ppProperties", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(903, 0, "FreePrintPropertyValue", "FreePrintPropertyValue", 0, vec![Param::new("pValue", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(904, 0, "FreePrinterNotifyInfo", "FreePrinterNotifyInfo", 0, vec![Param::new("pPrinterNotifyInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(905, 0, "FreeResource", "FreeResource", 0, vec![Param::new("hResData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(906, 0, "FreeSid", "FreeSid", 0, vec![Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(907, 0, "FreeUserPhysicalPages", "FreeUserPhysicalPages", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("NumberOfPages", tys[36].clone(), None), Param::new("PageArray", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(908, 0, "GdiAlphaBlend", "GdiAlphaBlend", 0, vec![Param::new("hdcDest", tys[26].clone(), None), Param::new("xoriginDest", tys[13].clone(), None), Param::new("yoriginDest", tys[13].clone(), None), Param::new("wDest", tys[13].clone(), None), Param::new("hDest", tys[13].clone(), None), Param::new("hdcSrc", tys[26].clone(), None), Param::new("xoriginSrc", tys[13].clone(), None), Param::new("yoriginSrc", tys[13].clone(), None), Param::new("wSrc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(909, 0, "GdiComment", "GdiComment", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("lpData", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(910, 0, "GdiFlush", "GdiFlush", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(911, 0, "GdiGetBatchLimit", "GdiGetBatchLimit", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(912, 0, "GdiGradientFill", "GdiGradientFill", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("pVertex", tys[26].clone(), None), Param::new("nVertex", tys[13].clone(), None), Param::new("pMesh", tys[37].clone(), None), Param::new("nCount", tys[13].clone(), None), Param::new("ulMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(913, 0, "GdiSetBatchLimit", "GdiSetBatchLimit", 0, vec![Param::new("dw", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(914, 0, "GdiTransparentBlt", "GdiTransparentBlt", 0, vec![Param::new("hdcDest", tys[26].clone(), None), Param::new("xoriginDest", tys[13].clone(), None), Param::new("yoriginDest", tys[13].clone(), None), Param::new("wDest", tys[13].clone(), None), Param::new("hDest", tys[13].clone(), None), Param::new("hdcSrc", tys[26].clone(), None), Param::new("xoriginSrc", tys[13].clone(), None), Param::new("yoriginSrc", tys[13].clone(), None), Param::new("wSrc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(915, 0, "GenerateConsoleCtrlEvent", "GenerateConsoleCtrlEvent", 0, vec![Param::new("dwCtrlEvent", tys[13].clone(), None), Param::new("dwProcessGroupId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(916, 0, "GetACP", "GetACP", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(917, 0, "GetAcceptExSockaddrs", "GetAcceptExSockaddrs", 0, vec![Param::new("lpOutputBuffer", tys[37].clone(), None), Param::new("dwReceiveDataLength", tys[13].clone(), None), Param::new("dwLocalAddressLength", tys[13].clone(), None), Param::new("dwRemoteAddressLength", tys[13].clone(), None), Param::new("LocalSockaddr", tys[27].clone(), None), Param::new("LocalSockaddrLength", tys[39].clone(), None), Param::new("RemoteSockaddr", tys[27].clone(), None), Param::new("RemoteSockaddrLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(918, 0, "GetAce", "GetAce", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("dwAceIndex", tys[13].clone(), None), Param::new("pAce", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(919, 0, "GetAclInformation", "GetAclInformation", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("pAclInformation", tys[37].clone(), None), Param::new("nAclInformationLength", tys[13].clone(), None), Param::new("dwAclInformationClass", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(920, 0, "GetActiveProcessorCount", "GetActiveProcessorCount", 0, vec![Param::new("GroupNumber", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(921, 0, "GetActiveProcessorGroupCount", "GetActiveProcessorGroupCount", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(922, 0, "GetActiveWindow", "GetActiveWindow", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(923, 0, "GetAltTabInfoA", "GetAltTabInfoA", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("iItem", tys[13].clone(), None), Param::new("pati", tys[26].clone(), None), Param::new("pszItemText", tys[33].clone(), None), Param::new("cchItemText", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(924, 0, "GetAncestor", "GetAncestor", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("gaFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(925, 0, "GetAppContainerAce", "GetAppContainerAce", 0, vec![Param::new("Acl", tys[26].clone(), None), Param::new("StartingAceIndex", tys[13].clone(), None), Param::new("AppContainerAce", tys[38].clone(), None), Param::new("AppContainerAceIndex", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(926, 0, "GetAppContainerNamedObjectPath", "GetAppContainerNamedObjectPath", 0, vec![Param::new("Token", tys[47].clone(), None), Param::new("AppContainerSid", tys[37].clone(), None), Param::new("ObjectPathLength", tys[13].clone(), None), Param::new("ObjectPath", tys[28].clone(), None), Param::new("ReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(927, 0, "GetApplicationRecoveryCallback", "GetApplicationRecoveryCallback", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("pRecoveryCallback", tys[27].clone(), None), Param::new("ppvParameter", tys[38].clone(), None), Param::new("pdwPingInterval", tys[39].clone(), None), Param::new("pdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(928, 0, "GetApplicationRestartSettings", "GetApplicationRestartSettings", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("pwzCommandline", tys[28].clone(), None), Param::new("pcchSize", tys[39].clone(), None), Param::new("pdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(929, 0, "GetArcDirection", "GetArcDirection", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(930, 0, "GetAspectRatioFilterEx", "GetAspectRatioFilterEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpsize", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(931, 0, "GetAsyncKeyState", "GetAsyncKeyState", 0, vec![Param::new("vKey", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(932, 0, "GetAtomNameA", "GetAtomNameA", 0, vec![Param::new("nAtom", tys[11].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(933, 0, "GetAutoRotationState", "GetAutoRotationState", 0, vec![Param::new("pState", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(934, 0, "GetAwarenessFromDpiAwarenessContext", "GetAwarenessFromDpiAwarenessContext", 0, vec![Param::new("value", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(935, 0, "GetBinaryTypeA", "GetBinaryTypeA", 0, vec![Param::new("lpApplicationName", tys[33].clone(), None), Param::new("lpBinaryType", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(936, 0, "GetBitmapBits", "GetBitmapBits", 0, vec![Param::new("hbit", tys[26].clone(), None), Param::new("cb", tys[13].clone(), None), Param::new("lpvBits", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(937, 0, "GetBitmapDimensionEx", "GetBitmapDimensionEx", 0, vec![Param::new("hbit", tys[26].clone(), None), Param::new("lpsize", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(938, 0, "GetBkColor", "GetBkColor", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(939, 0, "GetBkMode", "GetBkMode", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(940, 0, "GetBoundsRect", "GetBoundsRect", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lprect", tys[26].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(941, 0, "GetBrushOrgEx", "GetBrushOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(942, 0, "GetCIMSSM", "GetCIMSSM", 0, vec![Param::new("inputMessageSource", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(943, 0, "GetCPInfo", "GetCPInfo", 0, vec![Param::new("CodePage", tys[13].clone(), None), Param::new("lpCPInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(944, 0, "GetCPInfoExA", "GetCPInfoExA", 0, vec![Param::new("CodePage", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpCPInfoEx", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(945, 0, "GetCachedSigningLevel", "GetCachedSigningLevel", 0, vec![Param::new("File", tys[47].clone(), None), Param::new("Flags", tys[39].clone(), None), Param::new("SigningLevel", tys[39].clone(), None), Param::new("Thumbprint", tys[33].clone(), None), Param::new("ThumbprintSize", tys[39].clone(), None), Param::new("ThumbprintAlgorithm", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(946, 0, "GetCalendarInfoA", "GetCalendarInfoA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("Calendar", tys[13].clone(), None), Param::new("CalType", tys[13].clone(), None), Param::new("lpCalData", tys[33].clone(), None), Param::new("cchData", tys[13].clone(), None), Param::new("lpValue", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(947, 0, "GetCalendarInfoEx", "GetCalendarInfoEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("Calendar", tys[13].clone(), None), Param::new("lpReserved", tys[28].clone(), None), Param::new("CalType", tys[13].clone(), None), Param::new("lpCalData", tys[28].clone(), None), Param::new("cchData", tys[13].clone(), None), Param::new("lpValue", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(948, 0, "GetCapture", "GetCapture", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(949, 0, "GetCaretBlinkTime", "GetCaretBlinkTime", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(950, 0, "GetCaretPos", "GetCaretPos", 0, vec![Param::new("lpPoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(951, 0, "GetCharABCWidthsA", "GetCharABCWidthsA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("wFirst", tys[13].clone(), None), Param::new("wLast", tys[13].clone(), None), Param::new("lpABC", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(952, 0, "GetCharABCWidthsFloatA", "GetCharABCWidthsFloatA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iFirst", tys[13].clone(), None), Param::new("iLast", tys[13].clone(), None), Param::new("lpABC", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(953, 0, "GetCharABCWidthsI", "GetCharABCWidthsI", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("giFirst", tys[13].clone(), None), Param::new("cgi", tys[13].clone(), None), Param::new("pgi", tys[28].clone(), None), Param::new("pabc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(954, 0, "GetCharWidth32A", "GetCharWidth32A", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iFirst", tys[13].clone(), None), Param::new("iLast", tys[13].clone(), None), Param::new("lpBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(955, 0, "GetCharWidthA", "GetCharWidthA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iFirst", tys[13].clone(), None), Param::new("iLast", tys[13].clone(), None), Param::new("lpBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(956, 0, "GetCharWidthFloatA", "GetCharWidthFloatA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iFirst", tys[13].clone(), None), Param::new("iLast", tys[13].clone(), None), Param::new("lpBuffer", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(957, 0, "GetCharWidthI", "GetCharWidthI", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("giFirst", tys[13].clone(), None), Param::new("cgi", tys[13].clone(), None), Param::new("pgi", tys[28].clone(), None), Param::new("piWidths", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(958, 0, "GetCharacterPlacementA", "GetCharacterPlacementA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("nCount", tys[13].clone(), None), Param::new("nMexExtent", tys[13].clone(), None), Param::new("lpResults", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(959, 0, "GetClassInfoA", "GetClassInfoA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpClassName", tys[33].clone(), None), Param::new("lpWndClass", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_15(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(960, 0, "GetClassInfoExA", "GetClassInfoExA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpszClass", tys[33].clone(), None), Param::new("lpwcx", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(961, 0, "GetClassLongA", "GetClassLongA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(962, 0, "GetClassLongPtrA", "GetClassLongPtrA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(963, 0, "GetClassNameA", "GetClassNameA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpClassName", tys[33].clone(), None), Param::new("nMaxCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(964, 0, "GetClassWord", "GetClassWord", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(965, 0, "GetClientRect", "GetClientRect", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(966, 0, "GetClipBox", "GetClipBox", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lprect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(967, 0, "GetClipCursor", "GetClipCursor", 0, vec![Param::new("lpRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(968, 0, "GetClipRgn", "GetClipRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hrgn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(969, 0, "GetClipboardData", "GetClipboardData", 0, vec![Param::new("uFormat", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(970, 0, "GetClipboardFormatNameA", "GetClipboardFormatNameA", 0, vec![Param::new("format", tys[13].clone(), None), Param::new("lpszFormatName", tys[33].clone(), None), Param::new("cchMaxCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(971, 0, "GetClipboardOwner", "GetClipboardOwner", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(972, 0, "GetClipboardSequenceNumber", "GetClipboardSequenceNumber", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(973, 0, "GetClipboardViewer", "GetClipboardViewer", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(974, 0, "GetColorAdjustment", "GetColorAdjustment", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpca", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(975, 0, "GetColorSpace", "GetColorSpace", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(976, 0, "GetComboBoxInfo", "GetComboBoxInfo", 0, vec![Param::new("hwndCombo", tys[26].clone(), None), Param::new("pcbi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(977, 0, "GetCommConfig", "GetCommConfig", 0, vec![Param::new("hCommDev", tys[47].clone(), None), Param::new("lpCC", tys[26].clone(), None), Param::new("lpdwSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(978, 0, "GetCommMask", "GetCommMask", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpEvtMask", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(979, 0, "GetCommModemStatus", "GetCommModemStatus", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpModemStat", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(980, 0, "GetCommProperties", "GetCommProperties", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpCommProp", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(981, 0, "GetCommState", "GetCommState", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpDCB", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(982, 0, "GetCommTimeouts", "GetCommTimeouts", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpCommTimeouts", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(983, 0, "GetCommandLineA", "GetCommandLineA", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(984, 0, "GetCompressedFileSizeA", "GetCompressedFileSizeA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("lpFileSizeHigh", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(985, 0, "GetCompressedFileSizeTransactedA", "GetCompressedFileSizeTransactedA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("lpFileSizeHigh", tys[39].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(986, 0, "GetComputerNameA", "GetComputerNameA", 0, vec![Param::new("lpBuffer", tys[33].clone(), None), Param::new("nSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(987, 0, "GetComputerNameExA", "GetComputerNameExA", 0, vec![Param::new("NameType", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("nSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(988, 0, "GetConsoleAliasA", "GetConsoleAliasA", 0, vec![Param::new("Source", tys[33].clone(), None), Param::new("TargetBuffer", tys[33].clone(), None), Param::new("TargetBufferLength", tys[13].clone(), None), Param::new("ExeName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(989, 0, "GetConsoleAliasExesA", "GetConsoleAliasExesA", 0, vec![Param::new("ExeNameBuffer", tys[33].clone(), None), Param::new("ExeNameBufferLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(990, 0, "GetConsoleAliasExesLengthA", "GetConsoleAliasExesLengthA", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(991, 0, "GetConsoleAliasesA", "GetConsoleAliasesA", 0, vec![Param::new("AliasBuffer", tys[33].clone(), None), Param::new("AliasBufferLength", tys[13].clone(), None), Param::new("ExeName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(992, 0, "GetConsoleAliasesLengthA", "GetConsoleAliasesLengthA", 0, vec![Param::new("ExeName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(993, 0, "GetConsoleCP", "GetConsoleCP", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(994, 0, "GetConsoleCursorInfo", "GetConsoleCursorInfo", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpConsoleCursorInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(995, 0, "GetConsoleDisplayMode", "GetConsoleDisplayMode", 0, vec![Param::new("lpModeFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(996, 0, "GetConsoleFontSize", "GetConsoleFontSize", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("nFont", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(997, 0, "GetConsoleHistoryInfo", "GetConsoleHistoryInfo", 0, vec![Param::new("lpConsoleHistoryInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(998, 0, "GetConsoleMode", "GetConsoleMode", 0, vec![Param::new("hConsoleHandle", tys[47].clone(), None), Param::new("lpMode", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(999, 0, "GetConsoleOriginalTitleA", "GetConsoleOriginalTitleA", 0, vec![Param::new("lpConsoleTitle", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1000, 0, "GetConsoleOutputCP", "GetConsoleOutputCP", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1001, 0, "GetConsoleProcessList", "GetConsoleProcessList", 0, vec![Param::new("lpdwProcessList", tys[39].clone(), None), Param::new("dwProcessCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1002, 0, "GetConsoleScreenBufferInfo", "GetConsoleScreenBufferInfo", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpConsoleScreenBufferInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1003, 0, "GetConsoleScreenBufferInfoEx", "GetConsoleScreenBufferInfoEx", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpConsoleScreenBufferInfoEx", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1004, 0, "GetConsoleSelectionInfo", "GetConsoleSelectionInfo", 0, vec![Param::new("lpConsoleSelectionInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1005, 0, "GetConsoleTitleA", "GetConsoleTitleA", 0, vec![Param::new("lpConsoleTitle", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1006, 0, "GetConsoleWindow", "GetConsoleWindow", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1007, 0, "GetConvertStg", "GetConvertStg", 0, vec![Param::new("pStg", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1008, 0, "GetCorePrinterDriversA", "GetCorePrinterDriversA", 0, vec![Param::new("pszServer", tys[33].clone(), None), Param::new("pszEnvironment", tys[33].clone(), None), Param::new("pszzCoreDriverDependencies", tys[33].clone(), None), Param::new("cCorePrinterDrivers", tys[13].clone(), None), Param::new("pCorePrinterDrivers", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1009, 0, "GetCurrencyFormatA", "GetCurrencyFormatA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpValue", tys[33].clone(), None), Param::new("lpFormat", tys[26].clone(), None), Param::new("lpCurrencyStr", tys[33].clone(), None), Param::new("cchCurrency", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1010, 0, "GetCurrencyFormatEx", "GetCurrencyFormatEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpValue", tys[28].clone(), None), Param::new("lpFormat", tys[26].clone(), None), Param::new("lpCurrencyStr", tys[28].clone(), None), Param::new("cchCurrency", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1011, 0, "GetCurrentActCtx", "GetCurrentActCtx", 0, vec![Param::new("lphActCtx", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1012, 0, "GetCurrentConsoleFont", "GetCurrentConsoleFont", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("bMaximumWindow", tys[13].clone(), None), Param::new("lpConsoleCurrentFont", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1013, 0, "GetCurrentConsoleFontEx", "GetCurrentConsoleFontEx", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("bMaximumWindow", tys[13].clone(), None), Param::new("lpConsoleCurrentFontEx", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1014, 0, "GetCurrentDirectoryA", "GetCurrentDirectoryA", 0, vec![Param::new("nBufferLength", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1015, 0, "GetCurrentHwProfileA", "GetCurrentHwProfileA", 0, vec![Param::new("lpHwProfileInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1016, 0, "GetCurrentInputMessageSource", "GetCurrentInputMessageSource", 0, vec![Param::new("inputMessageSource", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1017, 0, "GetCurrentObject", "GetCurrentObject", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("type", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1018, 0, "GetCurrentPositionEx", "GetCurrentPositionEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1019, 0, "GetCurrentProcess", "GetCurrentProcess", 0, vec![], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1020, 0, "GetCurrentProcessId", "GetCurrentProcessId", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1021, 0, "GetCurrentProcessorNumber", "GetCurrentProcessorNumber", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1022, 0, "GetCurrentProcessorNumberEx", "GetCurrentProcessorNumberEx", 0, vec![Param::new("ProcNumber", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1023, 0, "GetCurrentThread", "GetCurrentThread", 0, vec![], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_16(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1024, 0, "GetCurrentThreadId", "GetCurrentThreadId", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1025, 0, "GetCurrentThreadStackLimits", "GetCurrentThreadStackLimits", 0, vec![Param::new("LowLimit", tys[36].clone(), None), Param::new("HighLimit", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1026, 0, "GetCurrentUmsThread", "GetCurrentUmsThread", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1027, 0, "GetCursor", "GetCursor", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1028, 0, "GetCursorInfo", "GetCursorInfo", 0, vec![Param::new("pci", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1029, 0, "GetCursorPos", "GetCursorPos", 0, vec![Param::new("lpPoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1030, 0, "GetDC", "GetDC", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1031, 0, "GetDCBrushColor", "GetDCBrushColor", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1032, 0, "GetDCEx", "GetDCEx", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hrgnClip", tys[26].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1033, 0, "GetDCOrgEx", "GetDCOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1034, 0, "GetDCPenColor", "GetDCPenColor", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1035, 0, "GetDIBColorTable", "GetDIBColorTable", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iStart", tys[13].clone(), None), Param::new("cEntries", tys[13].clone(), None), Param::new("prgbq", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1036, 0, "GetDIBits", "GetDIBits", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hbm", tys[26].clone(), None), Param::new("start", tys[13].clone(), None), Param::new("cLines", tys[13].clone(), None), Param::new("lpvBits", tys[37].clone(), None), Param::new("lpbmi", tys[26].clone(), None), Param::new("usage", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1037, 0, "GetDateFormatA", "GetDateFormatA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpDate", tys[26].clone(), None), Param::new("lpFormat", tys[33].clone(), None), Param::new("lpDateStr", tys[33].clone(), None), Param::new("cchDate", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1038, 0, "GetDateFormatEx", "GetDateFormatEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpDate", tys[26].clone(), None), Param::new("lpFormat", tys[28].clone(), None), Param::new("lpDateStr", tys[28].clone(), None), Param::new("cchDate", tys[13].clone(), None), Param::new("lpCalendar", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1039, 0, "GetDefaultCommConfigA", "GetDefaultCommConfigA", 0, vec![Param::new("lpszName", tys[33].clone(), None), Param::new("lpCC", tys[26].clone(), None), Param::new("lpdwSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1040, 0, "GetDefaultPrinterA", "GetDefaultPrinterA", 0, vec![Param::new("pszBuffer", tys[33].clone(), None), Param::new("pcchBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1041, 0, "GetDesktopWindow", "GetDesktopWindow", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1042, 0, "GetDeviceCaps", "GetDeviceCaps", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("index", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1043, 0, "GetDeviceGammaRamp", "GetDeviceGammaRamp", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpRamp", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1044, 0, "GetDevicePowerState", "GetDevicePowerState", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("pfOn", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1045, 0, "GetDialogBaseUnits", "GetDialogBaseUnits", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1046, 0, "GetDiskFreeSpaceA", "GetDiskFreeSpaceA", 0, vec![Param::new("lpRootPathName", tys[33].clone(), None), Param::new("lpSectorsPerCluster", tys[39].clone(), None), Param::new("lpBytesPerSector", tys[39].clone(), None), Param::new("lpNumberOfFreeClusters", tys[39].clone(), None), Param::new("lpTotalNumberOfClusters", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1047, 0, "GetDiskFreeSpaceExA", "GetDiskFreeSpaceExA", 0, vec![Param::new("lpDirectoryName", tys[33].clone(), None), Param::new("lpFreeBytesAvailableToCaller", tys[26].clone(), None), Param::new("lpTotalNumberOfBytes", tys[26].clone(), None), Param::new("lpTotalNumberOfFreeBytes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1048, 0, "GetDisplayAutoRotationPreferences", "GetDisplayAutoRotationPreferences", 0, vec![Param::new("pOrientation", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1049, 0, "GetDisplayConfigBufferSizes", "GetDisplayConfigBufferSizes", 0, vec![Param::new("flags", tys[13].clone(), None), Param::new("numPathArrayElements", tys[39].clone(), None), Param::new("numModeInfoArrayElements", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1050, 0, "GetDlgCtrlID", "GetDlgCtrlID", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1051, 0, "GetDlgItem", "GetDlgItem", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nIDDlgItem", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1052, 0, "GetDlgItemInt", "GetDlgItemInt", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nIDDlgItem", tys[13].clone(), None), Param::new("lpTranslated", tys[39].clone(), None), Param::new("bSigned", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1053, 0, "GetDlgItemTextA", "GetDlgItemTextA", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nIDDlgItem", tys[13].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("cchMax", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1054, 0, "GetDllDirectoryA", "GetDllDirectoryA", 0, vec![Param::new("nBufferLength", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1055, 0, "GetDoubleClickTime", "GetDoubleClickTime", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1056, 0, "GetDpiForSystem", "GetDpiForSystem", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1057, 0, "GetDpiForWindow", "GetDpiForWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1058, 0, "GetDriveTypeA", "GetDriveTypeA", 0, vec![Param::new("lpRootPathName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1059, 0, "GetDriverModuleHandle", "GetDriverModuleHandle", 0, vec![Param::new("hDriver", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1060, 0, "GetDurationFormat", "GetDurationFormat", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpDuration", tys[26].clone(), None), Param::new("ullDuration", tys[14].clone(), None), Param::new("lpFormat", tys[28].clone(), None), Param::new("lpDurationStr", tys[28].clone(), None), Param::new("cchDuration", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1061, 0, "GetDurationFormatEx", "GetDurationFormatEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpDuration", tys[26].clone(), None), Param::new("ullDuration", tys[14].clone(), None), Param::new("lpFormat", tys[28].clone(), None), Param::new("lpDurationStr", tys[28].clone(), None), Param::new("cchDuration", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1062, 0, "GetDynamicTimeZoneInformation", "GetDynamicTimeZoneInformation", 0, vec![Param::new("pTimeZoneInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1063, 0, "GetDynamicTimeZoneInformationEffectiveYears", "GetDynamicTimeZoneInformationEffectiveYears", 0, vec![Param::new("lpTimeZoneInformation", tys[26].clone(), None), Param::new("FirstYear", tys[39].clone(), None), Param::new("LastYear", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1064, 0, "GetEnabledXStateFeatures", "GetEnabledXStateFeatures", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1065, 0, "GetEncryptedFileMetadata", "GetEncryptedFileMetadata", 0, vec![Param::new("lpFileName", tys[28].clone(), None), Param::new("pcbMetadata", tys[39].clone(), None), Param::new("ppbMetadata", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1066, 0, "GetEnhMetaFileA", "GetEnhMetaFileA", 0, vec![Param::new("lpName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1067, 0, "GetEnhMetaFileBits", "GetEnhMetaFileBits", 0, vec![Param::new("hEMF", tys[26].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("lpData", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1068, 0, "GetEnhMetaFileDescriptionA", "GetEnhMetaFileDescriptionA", 0, vec![Param::new("hemf", tys[26].clone(), None), Param::new("cchBuffer", tys[13].clone(), None), Param::new("lpDescription", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1069, 0, "GetEnhMetaFileHeader", "GetEnhMetaFileHeader", 0, vec![Param::new("hemf", tys[26].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("lpEnhMetaHeader", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1070, 0, "GetEnhMetaFilePaletteEntries", "GetEnhMetaFilePaletteEntries", 0, vec![Param::new("hemf", tys[26].clone(), None), Param::new("nNumEntries", tys[13].clone(), None), Param::new("lpPaletteEntries", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1071, 0, "GetEnhMetaFilePixelFormat", "GetEnhMetaFilePixelFormat", 0, vec![Param::new("hemf", tys[26].clone(), None), Param::new("cbBuffer", tys[13].clone(), None), Param::new("ppfd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1072, 0, "GetEnvironmentStrings", "GetEnvironmentStrings", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1073, 0, "GetEnvironmentVariableA", "GetEnvironmentVariableA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1074, 0, "GetErrorMode", "GetErrorMode", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1075, 0, "GetEventLogInformation", "GetEventLogInformation", 0, vec![Param::new("hEventLog", tys[47].clone(), None), Param::new("dwInfoLevel", tys[13].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("cbBufSize", tys[13].clone(), None), Param::new("pcbBytesNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1076, 0, "GetExitCodeProcess", "GetExitCodeProcess", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpExitCode", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1077, 0, "GetExitCodeThread", "GetExitCodeThread", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("lpExitCode", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1078, 0, "GetExpandedNameA", "GetExpandedNameA", 0, vec![Param::new("lpszSource", tys[33].clone(), None), Param::new("lpszBuffer", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1079, 0, "GetFileAttributesA", "GetFileAttributesA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1080, 0, "GetFileAttributesExA", "GetFileAttributesExA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("fInfoLevelId", tys[13].clone(), None), Param::new("lpFileInformation", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1081, 0, "GetFileAttributesTransactedA", "GetFileAttributesTransactedA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("fInfoLevelId", tys[13].clone(), None), Param::new("lpFileInformation", tys[37].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1082, 0, "GetFileBandwidthReservation", "GetFileBandwidthReservation", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpPeriodMilliseconds", tys[39].clone(), None), Param::new("lpBytesPerPeriod", tys[39].clone(), None), Param::new("pDiscardable", tys[39].clone(), None), Param::new("lpTransferSize", tys[39].clone(), None), Param::new("lpNumOutstandingRequests", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1083, 0, "GetFileInformationByHandle", "GetFileInformationByHandle", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpFileInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1084, 0, "GetFileInformationByHandleEx", "GetFileInformationByHandleEx", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("FileInformationClass", tys[13].clone(), None), Param::new("lpFileInformation", tys[37].clone(), None), Param::new("dwBufferSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1085, 0, "GetFileMUIInfo", "GetFileMUIInfo", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pcwszFilePath", tys[28].clone(), None), Param::new("pFileMUIInfo", tys[26].clone(), None), Param::new("pcbFileMUIInfo", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1086, 0, "GetFileMUIPath", "GetFileMUIPath", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pcwszFilePath", tys[28].clone(), None), Param::new("pwszLanguage", tys[28].clone(), None), Param::new("pcchLanguage", tys[39].clone(), None), Param::new("pwszFileMUIPath", tys[28].clone(), None), Param::new("pcchFileMUIPath", tys[39].clone(), None), Param::new("pululEnumerator", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1087, 0, "GetFileSecurityA", "GetFileSecurityA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("RequestedInformation", tys[13].clone(), None), Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("lpnLengthNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_17(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1088, 0, "GetFileSize", "GetFileSize", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpFileSizeHigh", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1089, 0, "GetFileSizeEx", "GetFileSizeEx", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpFileSize", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1090, 0, "GetFileTime", "GetFileTime", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpCreationTime", tys[26].clone(), None), Param::new("lpLastAccessTime", tys[26].clone(), None), Param::new("lpLastWriteTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1091, 0, "GetFileTitleA", "GetFileTitleA", 0, vec![Param::new("arg0", tys[33].clone(), None), Param::new("Buf", tys[33].clone(), None), Param::new("cchSize", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1092, 0, "GetFileType", "GetFileType", 0, vec![Param::new("hFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1093, 0, "GetFinalPathNameByHandleA", "GetFinalPathNameByHandleA", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpszFilePath", tys[33].clone(), None), Param::new("cchFilePath", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1094, 0, "GetFirmwareEnvironmentVariableA", "GetFirmwareEnvironmentVariableA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("lpGuid", tys[33].clone(), None), Param::new("pBuffer", tys[37].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1095, 0, "GetFirmwareEnvironmentVariableExA", "GetFirmwareEnvironmentVariableExA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("lpGuid", tys[33].clone(), None), Param::new("pBuffer", tys[37].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("pdwAttribubutes", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1096, 0, "GetFirmwareType", "GetFirmwareType", 0, vec![Param::new("FirmwareType", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1097, 0, "GetFocus", "GetFocus", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1098, 0, "GetFontData", "GetFontData", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("dwTable", tys[13].clone(), None), Param::new("dwOffset", tys[13].clone(), None), Param::new("pvBuffer", tys[37].clone(), None), Param::new("cjBuffer", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1099, 0, "GetFontLanguageInfo", "GetFontLanguageInfo", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1100, 0, "GetFontUnicodeRanges", "GetFontUnicodeRanges", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpgs", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1101, 0, "GetForegroundWindow", "GetForegroundWindow", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1102, 0, "GetFormA", "GetFormA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pFormName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pForm", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1103, 0, "GetFullPathNameA", "GetFullPathNameA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("nBufferLength", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("lpFilePart", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1104, 0, "GetFullPathNameTransactedA", "GetFullPathNameTransactedA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("nBufferLength", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("lpFilePart", tys[34].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1105, 0, "GetGUIThreadInfo", "GetGUIThreadInfo", 0, vec![Param::new("idThread", tys[13].clone(), None), Param::new("pgui", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1106, 0, "GetGeoInfoA", "GetGeoInfoA", 0, vec![Param::new("Location", tys[13].clone(), None), Param::new("GeoType", tys[13].clone(), None), Param::new("lpGeoData", tys[33].clone(), None), Param::new("cchData", tys[13].clone(), None), Param::new("LangId", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1107, 0, "GetGestureConfig", "GetGestureConfig", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("dwReserved", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pcIDs", tys[39].clone(), None), Param::new("pGestureConfig", tys[26].clone(), None), Param::new("cbSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1108, 0, "GetGestureExtraArgs", "GetGestureExtraArgs", 0, vec![Param::new("hGestureInfo", tys[26].clone(), None), Param::new("cbExtraArgs", tys[13].clone(), None), Param::new("pExtraArgs", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1109, 0, "GetGestureInfo", "GetGestureInfo", 0, vec![Param::new("hGestureInfo", tys[26].clone(), None), Param::new("pGestureInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1110, 0, "GetGlyphIndicesA", "GetGlyphIndicesA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpstr", tys[33].clone(), None), Param::new("c", tys[13].clone(), None), Param::new("pgi", tys[28].clone(), None), Param::new("fl", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1111, 0, "GetGlyphOutlineA", "GetGlyphOutlineA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("uChar", tys[13].clone(), None), Param::new("fuFormat", tys[13].clone(), None), Param::new("lpgm", tys[26].clone(), None), Param::new("cjBuffer", tys[13].clone(), None), Param::new("pvBuffer", tys[37].clone(), None), Param::new("lpmat2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1112, 0, "GetGraphicsMode", "GetGraphicsMode", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1113, 0, "GetGuiResources", "GetGuiResources", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("uiFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1114, 0, "GetHGlobalFromILockBytes", "GetHGlobalFromILockBytes", 0, vec![Param::new("plkbyt", tys[26].clone(), None), Param::new("phglobal", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1115, 0, "GetHandleInformation", "GetHandleInformation", 0, vec![Param::new("hObject", tys[47].clone(), None), Param::new("lpdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1116, 0, "GetICMProfileA", "GetICMProfileA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("pBufSize", tys[39].clone(), None), Param::new("pszFilename", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1117, 0, "GetIconInfo", "GetIconInfo", 0, vec![Param::new("hIcon", tys[26].clone(), None), Param::new("piconinfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1118, 0, "GetIconInfoExA", "GetIconInfoExA", 0, vec![Param::new("hicon", tys[26].clone(), None), Param::new("piconinfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1119, 0, "GetInputState", "GetInputState", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1120, 0, "GetIntegratedDisplaySize", "GetIntegratedDisplaySize", 0, vec![Param::new("sizeInInches", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1121, 0, "GetJobA", "GetJobA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("JobId", tys[13].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pJob", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1122, 0, "GetJobNamedPropertyValue", "GetJobNamedPropertyValue", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("JobId", tys[13].clone(), None), Param::new("pszName", tys[28].clone(), None), Param::new("pValue", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1123, 0, "GetKBCodePage", "GetKBCodePage", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1124, 0, "GetKernelObjectSecurity", "GetKernelObjectSecurity", 0, vec![Param::new("Handle", tys[47].clone(), None), Param::new("RequestedInformation", tys[13].clone(), None), Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("lpnLengthNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1125, 0, "GetKerningPairsA", "GetKerningPairsA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("nPairs", tys[13].clone(), None), Param::new("lpKernPair", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1126, 0, "GetKeyNameTextA", "GetKeyNameTextA", 0, vec![Param::new("lParam", tys[13].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("cchSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1127, 0, "GetKeyState", "GetKeyState", 0, vec![Param::new("nVirtKey", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1128, 0, "GetKeyboardLayout", "GetKeyboardLayout", 0, vec![Param::new("idThread", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1129, 0, "GetKeyboardLayoutList", "GetKeyboardLayoutList", 0, vec![Param::new("nBuff", tys[13].clone(), None), Param::new("lpList", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1130, 0, "GetKeyboardLayoutNameA", "GetKeyboardLayoutNameA", 0, vec![Param::new("pwszKLID", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1131, 0, "GetKeyboardState", "GetKeyboardState", 0, vec![Param::new("lpKeyState", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1132, 0, "GetKeyboardType", "GetKeyboardType", 0, vec![Param::new("nTypeFlag", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1133, 0, "GetLargePageMinimum", "GetLargePageMinimum", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1134, 0, "GetLargestConsoleWindowSize", "GetLargestConsoleWindowSize", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1135, 0, "GetLastActivePopup", "GetLastActivePopup", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1136, 0, "GetLastError", "GetLastError", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1137, 0, "GetLastInputInfo", "GetLastInputInfo", 0, vec![Param::new("plii", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1138, 0, "GetLayeredWindowAttributes", "GetLayeredWindowAttributes", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pcrKey", tys[39].clone(), None), Param::new("pbAlpha", tys[33].clone(), None), Param::new("pdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1139, 0, "GetLayout", "GetLayout", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1140, 0, "GetLengthSid", "GetLengthSid", 0, vec![Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1141, 0, "GetListBoxInfo", "GetListBoxInfo", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1142, 0, "GetLocalTime", "GetLocalTime", 0, vec![Param::new("lpSystemTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1143, 0, "GetLocaleInfoA", "GetLocaleInfoA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("LCType", tys[13].clone(), None), Param::new("lpLCData", tys[33].clone(), None), Param::new("cchData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1144, 0, "GetLocaleInfoEx", "GetLocaleInfoEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("LCType", tys[13].clone(), None), Param::new("lpLCData", tys[28].clone(), None), Param::new("cchData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1145, 0, "GetLogColorSpaceA", "GetLogColorSpaceA", 0, vec![Param::new("hColorSpace", tys[26].clone(), None), Param::new("lpBuffer", tys[26].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1146, 0, "GetLogicalDriveStringsA", "GetLogicalDriveStringsA", 0, vec![Param::new("nBufferLength", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1147, 0, "GetLogicalDrives", "GetLogicalDrives", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1148, 0, "GetLogicalProcessorInformation", "GetLogicalProcessorInformation", 0, vec![Param::new("Buffer", tys[26].clone(), None), Param::new("ReturnedLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1149, 0, "GetLogicalProcessorInformationEx", "GetLogicalProcessorInformationEx", 0, vec![Param::new("RelationshipType", tys[13].clone(), None), Param::new("Buffer", tys[26].clone(), None), Param::new("ReturnedLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1150, 0, "GetLongPathNameA", "GetLongPathNameA", 0, vec![Param::new("lpszShortPath", tys[33].clone(), None), Param::new("lpszLongPath", tys[33].clone(), None), Param::new("cchBuffer", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1151, 0, "GetLongPathNameTransactedA", "GetLongPathNameTransactedA", 0, vec![Param::new("lpszShortPath", tys[33].clone(), None), Param::new("lpszLongPath", tys[33].clone(), None), Param::new("cchBuffer", tys[13].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_18(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1152, 0, "GetMailslotInfo", "GetMailslotInfo", 0, vec![Param::new("hMailslot", tys[47].clone(), None), Param::new("lpMaxMessageSize", tys[39].clone(), None), Param::new("lpNextSize", tys[39].clone(), None), Param::new("lpMessageCount", tys[39].clone(), None), Param::new("lpReadTimeout", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1153, 0, "GetMapMode", "GetMapMode", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1154, 0, "GetMaximumProcessorCount", "GetMaximumProcessorCount", 0, vec![Param::new("GroupNumber", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1155, 0, "GetMaximumProcessorGroupCount", "GetMaximumProcessorGroupCount", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1156, 0, "GetMemoryErrorHandlingCapabilities", "GetMemoryErrorHandlingCapabilities", 0, vec![Param::new("Capabilities", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1157, 0, "GetMenu", "GetMenu", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1158, 0, "GetMenuBarInfo", "GetMenuBarInfo", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("idObject", tys[13].clone(), None), Param::new("idItem", tys[13].clone(), None), Param::new("pmbi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1159, 0, "GetMenuCheckMarkDimensions", "GetMenuCheckMarkDimensions", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1160, 0, "GetMenuContextHelpId", "GetMenuContextHelpId", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1161, 0, "GetMenuDefaultItem", "GetMenuDefaultItem", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("fByPos", tys[13].clone(), None), Param::new("gmdiFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1162, 0, "GetMenuInfo", "GetMenuInfo", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1163, 0, "GetMenuItemCount", "GetMenuItemCount", 0, vec![Param::new("hMenu", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1164, 0, "GetMenuItemID", "GetMenuItemID", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("nPos", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1165, 0, "GetMenuItemInfoA", "GetMenuItemInfoA", 0, vec![Param::new("hmenu", tys[26].clone(), None), Param::new("item", tys[13].clone(), None), Param::new("fByPosition", tys[13].clone(), None), Param::new("lpmii", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1166, 0, "GetMenuItemRect", "GetMenuItemRect", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hMenu", tys[26].clone(), None), Param::new("uItem", tys[13].clone(), None), Param::new("lprcItem", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1167, 0, "GetMenuState", "GetMenuState", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uId", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1168, 0, "GetMenuStringA", "GetMenuStringA", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uIDItem", tys[13].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("cchMax", tys[13].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1169, 0, "GetMessageA", "GetMessageA", 0, vec![Param::new("lpMsg", tys[26].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("wMsgFilterMin", tys[13].clone(), None), Param::new("wMsgFilterMax", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1170, 0, "GetMessageExtraInfo", "GetMessageExtraInfo", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1171, 0, "GetMessagePos", "GetMessagePos", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1172, 0, "GetMessageTime", "GetMessageTime", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1173, 0, "GetMetaFileA", "GetMetaFileA", 0, vec![Param::new("lpName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1174, 0, "GetMetaFileBitsEx", "GetMetaFileBitsEx", 0, vec![Param::new("hMF", tys[26].clone(), None), Param::new("cbBuffer", tys[13].clone(), None), Param::new("lpData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1175, 0, "GetMetaRgn", "GetMetaRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hrgn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1176, 0, "GetMiterLimit", "GetMiterLimit", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("plimit", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1177, 0, "GetModuleFileNameA", "GetModuleFileNameA", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpFilename", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1178, 0, "GetModuleHandleA", "GetModuleHandleA", 0, vec![Param::new("lpModuleName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1179, 0, "GetModuleHandleExA", "GetModuleHandleExA", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpModuleName", tys[33].clone(), None), Param::new("phModule", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1180, 0, "GetMonitorInfoA", "GetMonitorInfoA", 0, vec![Param::new("hMonitor", tys[26].clone(), None), Param::new("lpmi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1181, 0, "GetMouseMovePointsEx", "GetMouseMovePointsEx", 0, vec![Param::new("cbSize", tys[13].clone(), None), Param::new("lppt", tys[26].clone(), None), Param::new("lpptBuf", tys[26].clone(), None), Param::new("nBufPoints", tys[13].clone(), None), Param::new("resolution", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1182, 0, "GetNLSVersion", "GetNLSVersion", 0, vec![Param::new("Function", tys[13].clone(), None), Param::new("Locale", tys[13].clone(), None), Param::new("lpVersionInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1183, 0, "GetNLSVersionEx", "GetNLSVersionEx", 0, vec![Param::new("function", tys[13].clone(), None), Param::new("lpLocaleName", tys[28].clone(), None), Param::new("lpVersionInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1184, 0, "GetNamedPipeClientComputerNameA", "GetNamedPipeClientComputerNameA", 0, vec![Param::new("Pipe", tys[47].clone(), None), Param::new("ClientComputerName", tys[33].clone(), None), Param::new("ClientComputerNameLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1185, 0, "GetNamedPipeClientProcessId", "GetNamedPipeClientProcessId", 0, vec![Param::new("Pipe", tys[47].clone(), None), Param::new("ClientProcessId", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1186, 0, "GetNamedPipeClientSessionId", "GetNamedPipeClientSessionId", 0, vec![Param::new("Pipe", tys[47].clone(), None), Param::new("ClientSessionId", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1187, 0, "GetNamedPipeHandleStateA", "GetNamedPipeHandleStateA", 0, vec![Param::new("hNamedPipe", tys[47].clone(), None), Param::new("lpState", tys[39].clone(), None), Param::new("lpCurInstances", tys[39].clone(), None), Param::new("lpMaxCollectionCount", tys[39].clone(), None), Param::new("lpCollectDataTimeout", tys[39].clone(), None), Param::new("lpUserName", tys[33].clone(), None), Param::new("nMaxUserNameSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1188, 0, "GetNamedPipeInfo", "GetNamedPipeInfo", 0, vec![Param::new("hNamedPipe", tys[47].clone(), None), Param::new("lpFlags", tys[39].clone(), None), Param::new("lpOutBufferSize", tys[39].clone(), None), Param::new("lpInBufferSize", tys[39].clone(), None), Param::new("lpMaxInstances", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1189, 0, "GetNamedPipeServerProcessId", "GetNamedPipeServerProcessId", 0, vec![Param::new("Pipe", tys[47].clone(), None), Param::new("ServerProcessId", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1190, 0, "GetNamedPipeServerSessionId", "GetNamedPipeServerSessionId", 0, vec![Param::new("Pipe", tys[47].clone(), None), Param::new("ServerSessionId", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1191, 0, "GetNativeSystemInfo", "GetNativeSystemInfo", 0, vec![Param::new("lpSystemInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1192, 0, "GetNearestColor", "GetNearestColor", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1193, 0, "GetNearestPaletteIndex", "GetNearestPaletteIndex", 0, vec![Param::new("h", tys[26].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1194, 0, "GetNextDlgGroupItem", "GetNextDlgGroupItem", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("hCtl", tys[26].clone(), None), Param::new("bPrevious", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1195, 0, "GetNextDlgTabItem", "GetNextDlgTabItem", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("hCtl", tys[26].clone(), None), Param::new("bPrevious", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1196, 0, "GetNextUmsListItem", "GetNextUmsListItem", 0, vec![Param::new("UmsContext", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1197, 0, "GetNumaAvailableMemoryNode", "GetNumaAvailableMemoryNode", 0, vec![Param::new("Node", tys[15].clone(), None), Param::new("AvailableBytes", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1198, 0, "GetNumaAvailableMemoryNodeEx", "GetNumaAvailableMemoryNodeEx", 0, vec![Param::new("Node", tys[11].clone(), None), Param::new("AvailableBytes", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1199, 0, "GetNumaHighestNodeNumber", "GetNumaHighestNodeNumber", 0, vec![Param::new("HighestNodeNumber", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1200, 0, "GetNumaNodeNumberFromHandle", "GetNumaNodeNumberFromHandle", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("NodeNumber", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1201, 0, "GetNumaNodeProcessorMask", "GetNumaNodeProcessorMask", 0, vec![Param::new("Node", tys[15].clone(), None), Param::new("ProcessorMask", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1202, 0, "GetNumaNodeProcessorMaskEx", "GetNumaNodeProcessorMaskEx", 0, vec![Param::new("Node", tys[11].clone(), None), Param::new("ProcessorMask", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1203, 0, "GetNumaProcessorNode", "GetNumaProcessorNode", 0, vec![Param::new("Processor", tys[15].clone(), None), Param::new("NodeNumber", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1204, 0, "GetNumaProcessorNodeEx", "GetNumaProcessorNodeEx", 0, vec![Param::new("Processor", tys[26].clone(), None), Param::new("NodeNumber", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1205, 0, "GetNumaProximityNode", "GetNumaProximityNode", 0, vec![Param::new("ProximityId", tys[13].clone(), None), Param::new("NodeNumber", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1206, 0, "GetNumaProximityNodeEx", "GetNumaProximityNodeEx", 0, vec![Param::new("ProximityId", tys[13].clone(), None), Param::new("NodeNumber", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1207, 0, "GetNumberFormatA", "GetNumberFormatA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpValue", tys[33].clone(), None), Param::new("lpFormat", tys[26].clone(), None), Param::new("lpNumberStr", tys[33].clone(), None), Param::new("cchNumber", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1208, 0, "GetNumberFormatEx", "GetNumberFormatEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpValue", tys[28].clone(), None), Param::new("lpFormat", tys[26].clone(), None), Param::new("lpNumberStr", tys[28].clone(), None), Param::new("cchNumber", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1209, 0, "GetNumberOfConsoleInputEvents", "GetNumberOfConsoleInputEvents", 0, vec![Param::new("hConsoleInput", tys[47].clone(), None), Param::new("lpNumberOfEvents", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1210, 0, "GetNumberOfConsoleMouseButtons", "GetNumberOfConsoleMouseButtons", 0, vec![Param::new("lpNumberOfMouseButtons", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1211, 0, "GetNumberOfEventLogRecords", "GetNumberOfEventLogRecords", 0, vec![Param::new("hEventLog", tys[47].clone(), None), Param::new("NumberOfRecords", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1212, 0, "GetOEMCP", "GetOEMCP", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1213, 0, "GetObjectA", "GetObjectA", 0, vec![Param::new("h", tys[47].clone(), None), Param::new("c", tys[13].clone(), None), Param::new("pv", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1214, 0, "GetObjectType", "GetObjectType", 0, vec![Param::new("h", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1215, 0, "GetOldestEventLogRecord", "GetOldestEventLogRecord", 0, vec![Param::new("hEventLog", tys[47].clone(), None), Param::new("OldestRecord", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_19(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1216, 0, "GetOpenClipboardWindow", "GetOpenClipboardWindow", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1217, 0, "GetOpenFileNameA", "GetOpenFileNameA", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1218, 0, "GetOsManufacturingMode", "GetOsManufacturingMode", 0, vec![Param::new("pbEnabled", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1219, 0, "GetOsSafeBootMode", "GetOsSafeBootMode", 0, vec![Param::new("Flags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1220, 0, "GetOutlineTextMetricsA", "GetOutlineTextMetricsA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("cjCopy", tys[13].clone(), None), Param::new("potm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1221, 0, "GetOverlappedResult", "GetOverlappedResult", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), Param::new("lpNumberOfBytesTransferred", tys[39].clone(), None), Param::new("bWait", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1222, 0, "GetOverlappedResultEx", "GetOverlappedResultEx", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), Param::new("lpNumberOfBytesTransferred", tys[39].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), Param::new("bAlertable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1223, 0, "GetPaletteEntries", "GetPaletteEntries", 0, vec![Param::new("hpal", tys[26].clone(), None), Param::new("iStart", tys[13].clone(), None), Param::new("cEntries", tys[13].clone(), None), Param::new("pPalEntries", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1224, 0, "GetParent", "GetParent", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1225, 0, "GetPath", "GetPath", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("apt", tys[26].clone(), None), Param::new("aj", tys[33].clone(), None), Param::new("cpt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1226, 0, "GetPhysicalCursorPos", "GetPhysicalCursorPos", 0, vec![Param::new("lpPoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1227, 0, "GetPhysicallyInstalledSystemMemory", "GetPhysicallyInstalledSystemMemory", 0, vec![Param::new("TotalMemoryInKilobytes", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1228, 0, "GetPixel", "GetPixel", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1229, 0, "GetPixelFormat", "GetPixelFormat", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1230, 0, "GetPointerCursorId", "GetPointerCursorId", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("cursorId", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1231, 0, "GetPointerDevice", "GetPointerDevice", 0, vec![Param::new("device", tys[47].clone(), None), Param::new("pointerDevice", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1232, 0, "GetPointerDeviceCursors", "GetPointerDeviceCursors", 0, vec![Param::new("device", tys[47].clone(), None), Param::new("cursorCount", tys[39].clone(), None), Param::new("deviceCursors", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1233, 0, "GetPointerDeviceProperties", "GetPointerDeviceProperties", 0, vec![Param::new("device", tys[47].clone(), None), Param::new("propertyCount", tys[39].clone(), None), Param::new("pointerProperties", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1234, 0, "GetPointerDeviceRects", "GetPointerDeviceRects", 0, vec![Param::new("device", tys[47].clone(), None), Param::new("pointerDeviceRect", tys[26].clone(), None), Param::new("displayRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1235, 0, "GetPointerDevices", "GetPointerDevices", 0, vec![Param::new("deviceCount", tys[39].clone(), None), Param::new("pointerDevices", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1236, 0, "GetPointerFrameInfo", "GetPointerFrameInfo", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("pointerCount", tys[39].clone(), None), Param::new("pointerInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1237, 0, "GetPointerFrameInfoHistory", "GetPointerFrameInfoHistory", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("entriesCount", tys[39].clone(), None), Param::new("pointerCount", tys[39].clone(), None), Param::new("pointerInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1238, 0, "GetPointerFramePenInfo", "GetPointerFramePenInfo", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("pointerCount", tys[39].clone(), None), Param::new("penInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1239, 0, "GetPointerFramePenInfoHistory", "GetPointerFramePenInfoHistory", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("entriesCount", tys[39].clone(), None), Param::new("pointerCount", tys[39].clone(), None), Param::new("penInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1240, 0, "GetPointerFrameTouchInfo", "GetPointerFrameTouchInfo", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("pointerCount", tys[39].clone(), None), Param::new("touchInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1241, 0, "GetPointerFrameTouchInfoHistory", "GetPointerFrameTouchInfoHistory", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("entriesCount", tys[39].clone(), None), Param::new("pointerCount", tys[39].clone(), None), Param::new("touchInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1242, 0, "GetPointerInfo", "GetPointerInfo", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("pointerInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1243, 0, "GetPointerInfoHistory", "GetPointerInfoHistory", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("entriesCount", tys[39].clone(), None), Param::new("pointerInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1244, 0, "GetPointerInputTransform", "GetPointerInputTransform", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("historyCount", tys[13].clone(), None), Param::new("inputTransform", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1245, 0, "GetPointerPenInfo", "GetPointerPenInfo", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("penInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1246, 0, "GetPointerPenInfoHistory", "GetPointerPenInfoHistory", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("entriesCount", tys[39].clone(), None), Param::new("penInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1247, 0, "GetPointerTouchInfo", "GetPointerTouchInfo", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("touchInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1248, 0, "GetPointerTouchInfoHistory", "GetPointerTouchInfoHistory", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("entriesCount", tys[39].clone(), None), Param::new("touchInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1249, 0, "GetPointerType", "GetPointerType", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("pointerType", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1250, 0, "GetPolyFillMode", "GetPolyFillMode", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1251, 0, "GetPrintExecutionData", "GetPrintExecutionData", 0, vec![Param::new("pData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1252, 0, "GetPrintOutputInfo", "GetPrintOutputInfo", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("pszPrinter", tys[28].clone(), None), Param::new("phFile", tys[32].clone(), None), Param::new("ppszOutputFile", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1253, 0, "GetPrintProcessorDirectoryA", "GetPrintProcessorDirectoryA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pPrintProcessorInfo", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1254, 0, "GetPrinterA", "GetPrinterA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pPrinter", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1255, 0, "GetPrinterDataA", "GetPrinterDataA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pValueName", tys[33].clone(), None), Param::new("pType", tys[39].clone(), None), Param::new("pData", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1256, 0, "GetPrinterDataExA", "GetPrinterDataExA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pKeyName", tys[33].clone(), None), Param::new("pValueName", tys[33].clone(), None), Param::new("pType", tys[39].clone(), None), Param::new("pData", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1257, 0, "GetPrinterDriver2A", "GetPrinterDriver2A", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hPrinter", tys[47].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pDriverInfo", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1258, 0, "GetPrinterDriverA", "GetPrinterDriverA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pDriverInfo", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1259, 0, "GetPrinterDriverDirectoryA", "GetPrinterDriverDirectoryA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pEnvironment", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pDriverDirectory", tys[33].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcbNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1260, 0, "GetPrinterDriverPackagePathA", "GetPrinterDriverPackagePathA", 0, vec![Param::new("pszServer", tys[33].clone(), None), Param::new("pszEnvironment", tys[33].clone(), None), Param::new("pszLanguage", tys[33].clone(), None), Param::new("pszPackageID", tys[33].clone(), None), Param::new("pszDriverPackageCab", tys[33].clone(), None), Param::new("cchDriverPackageCab", tys[13].clone(), None), Param::new("pcchRequiredSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1261, 0, "GetPriorityClass", "GetPriorityClass", 0, vec![Param::new("hProcess", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1262, 0, "GetPriorityClipboardFormat", "GetPriorityClipboardFormat", 0, vec![Param::new("paFormatPriorityList", tys[39].clone(), None), Param::new("cFormats", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1263, 0, "GetPrivateObjectSecurity", "GetPrivateObjectSecurity", 0, vec![Param::new("ObjectDescriptor", tys[37].clone(), None), Param::new("SecurityInformation", tys[13].clone(), None), Param::new("ResultantDescriptor", tys[37].clone(), None), Param::new("DescriptorLength", tys[13].clone(), None), Param::new("ReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1264, 0, "GetPrivateProfileIntA", "GetPrivateProfileIntA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpKeyName", tys[33].clone(), None), Param::new("nDefault", tys[13].clone(), None), Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1265, 0, "GetPrivateProfileSectionA", "GetPrivateProfileSectionA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpReturnedString", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1266, 0, "GetPrivateProfileSectionNamesA", "GetPrivateProfileSectionNamesA", 0, vec![Param::new("lpszReturnBuffer", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1267, 0, "GetPrivateProfileStringA", "GetPrivateProfileStringA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpKeyName", tys[33].clone(), None), Param::new("lpDefault", tys[33].clone(), None), Param::new("lpReturnedString", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1268, 0, "GetPrivateProfileStructA", "GetPrivateProfileStructA", 0, vec![Param::new("lpszSection", tys[33].clone(), None), Param::new("lpszKey", tys[33].clone(), None), Param::new("lpStruct", tys[37].clone(), None), Param::new("uSizeStruct", tys[13].clone(), None), Param::new("szFile", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1269, 0, "GetProcAddress", "GetProcAddress", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("lpProcName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1270, 0, "GetProcessAffinityMask", "GetProcessAffinityMask", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpProcessAffinityMask", tys[36].clone(), None), Param::new("lpSystemAffinityMask", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1271, 0, "GetProcessDEPPolicy", "GetProcessDEPPolicy", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpFlags", tys[39].clone(), None), Param::new("lpPermanent", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1272, 0, "GetProcessDefaultCpuSets", "GetProcessDefaultCpuSets", 0, vec![Param::new("Process", tys[47].clone(), None), Param::new("CpuSetIds", tys[39].clone(), None), Param::new("CpuSetIdCount", tys[13].clone(), None), Param::new("RequiredIdCount", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1273, 0, "GetProcessDefaultLayout", "GetProcessDefaultLayout", 0, vec![Param::new("pdwDefaultLayout", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1274, 0, "GetProcessGroupAffinity", "GetProcessGroupAffinity", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("GroupCount", tys[28].clone(), None), Param::new("GroupArray", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1275, 0, "GetProcessHandleCount", "GetProcessHandleCount", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("pdwHandleCount", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1276, 0, "GetProcessHeap", "GetProcessHeap", 0, vec![], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1277, 0, "GetProcessHeaps", "GetProcessHeaps", 0, vec![Param::new("NumberOfHeaps", tys[13].clone(), None), Param::new("ProcessHeaps", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1278, 0, "GetProcessId", "GetProcessId", 0, vec![Param::new("Process", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1279, 0, "GetProcessIdOfThread", "GetProcessIdOfThread", 0, vec![Param::new("Thread", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_20(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1280, 0, "GetProcessInformation", "GetProcessInformation", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("ProcessInformationClass", tys[13].clone(), None), Param::new("ProcessInformation", tys[37].clone(), None), Param::new("ProcessInformationSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1281, 0, "GetProcessIoCounters", "GetProcessIoCounters", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpIoCounters", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1282, 0, "GetProcessMitigationPolicy", "GetProcessMitigationPolicy", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("MitigationPolicy", tys[13].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("dwLength", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1283, 0, "GetProcessPreferredUILanguages", "GetProcessPreferredUILanguages", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pulNumLanguages", tys[39].clone(), None), Param::new("pwszLanguagesBuffer", tys[28].clone(), None), Param::new("pcchLanguagesBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1284, 0, "GetProcessPriorityBoost", "GetProcessPriorityBoost", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("pDisablePriorityBoost", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1285, 0, "GetProcessShutdownParameters", "GetProcessShutdownParameters", 0, vec![Param::new("lpdwLevel", tys[39].clone(), None), Param::new("lpdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1286, 0, "GetProcessTimes", "GetProcessTimes", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpCreationTime", tys[26].clone(), None), Param::new("lpExitTime", tys[26].clone(), None), Param::new("lpKernelTime", tys[26].clone(), None), Param::new("lpUserTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1287, 0, "GetProcessVersion", "GetProcessVersion", 0, vec![Param::new("ProcessId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1288, 0, "GetProcessWindowStation", "GetProcessWindowStation", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1289, 0, "GetProcessWorkingSetSize", "GetProcessWorkingSetSize", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpMinimumWorkingSetSize", tys[36].clone(), None), Param::new("lpMaximumWorkingSetSize", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1290, 0, "GetProcessWorkingSetSizeEx", "GetProcessWorkingSetSizeEx", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpMinimumWorkingSetSize", tys[36].clone(), None), Param::new("lpMaximumWorkingSetSize", tys[36].clone(), None), Param::new("Flags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1291, 0, "GetProcessorSystemCycleTime", "GetProcessorSystemCycleTime", 0, vec![Param::new("Group", tys[11].clone(), None), Param::new("Buffer", tys[26].clone(), None), Param::new("ReturnedLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1292, 0, "GetProductInfo", "GetProductInfo", 0, vec![Param::new("dwOSMajorVersion", tys[13].clone(), None), Param::new("dwOSMinorVersion", tys[13].clone(), None), Param::new("dwSpMajorVersion", tys[13].clone(), None), Param::new("dwSpMinorVersion", tys[13].clone(), None), Param::new("pdwReturnedProductType", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1293, 0, "GetProfileIntA", "GetProfileIntA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpKeyName", tys[33].clone(), None), Param::new("nDefault", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1294, 0, "GetProfileSectionA", "GetProfileSectionA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpReturnedString", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1295, 0, "GetProfileStringA", "GetProfileStringA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpKeyName", tys[33].clone(), None), Param::new("lpDefault", tys[33].clone(), None), Param::new("lpReturnedString", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1296, 0, "GetPropA", "GetPropA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1297, 0, "GetQueueStatus", "GetQueueStatus", 0, vec![Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1298, 0, "GetQueuedCompletionStatus", "GetQueuedCompletionStatus", 0, vec![Param::new("CompletionPort", tys[47].clone(), None), Param::new("lpNumberOfBytesTransferred", tys[39].clone(), None), Param::new("lpCompletionKey", tys[36].clone(), None), Param::new("lpOverlapped", tys[27].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1299, 0, "GetQueuedCompletionStatusEx", "GetQueuedCompletionStatusEx", 0, vec![Param::new("CompletionPort", tys[47].clone(), None), Param::new("lpCompletionPortEntries", tys[26].clone(), None), Param::new("ulCount", tys[13].clone(), None), Param::new("ulNumEntriesRemoved", tys[39].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), Param::new("fAlertable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1300, 0, "GetROP2", "GetROP2", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1301, 0, "GetRandomRgn", "GetRandomRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hrgn", tys[26].clone(), None), Param::new("i", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1302, 0, "GetRasterizerCaps", "GetRasterizerCaps", 0, vec![Param::new("lpraststat", tys[26].clone(), None), Param::new("cjBytes", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1303, 0, "GetRawInputBuffer", "GetRawInputBuffer", 0, vec![Param::new("pData", tys[26].clone(), None), Param::new("pcbSize", tys[39].clone(), None), Param::new("cbSizeHeader", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1304, 0, "GetRawInputData", "GetRawInputData", 0, vec![Param::new("hRawInput", tys[26].clone(), None), Param::new("uiCommand", tys[13].clone(), None), Param::new("pData", tys[37].clone(), None), Param::new("pcbSize", tys[39].clone(), None), Param::new("cbSizeHeader", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1305, 0, "GetRawInputDeviceInfoA", "GetRawInputDeviceInfoA", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("uiCommand", tys[13].clone(), None), Param::new("pData", tys[37].clone(), None), Param::new("pcbSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1306, 0, "GetRawInputDeviceList", "GetRawInputDeviceList", 0, vec![Param::new("pRawInputDeviceList", tys[26].clone(), None), Param::new("puiNumDevices", tys[39].clone(), None), Param::new("cbSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1307, 0, "GetRawPointerDeviceData", "GetRawPointerDeviceData", 0, vec![Param::new("pointerId", tys[13].clone(), None), Param::new("historyCount", tys[13].clone(), None), Param::new("propertiesCount", tys[13].clone(), None), Param::new("pProperties", tys[26].clone(), None), Param::new("pValues", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1308, 0, "GetRegionData", "GetRegionData", 0, vec![Param::new("hrgn", tys[26].clone(), None), Param::new("nCount", tys[13].clone(), None), Param::new("lpRgnData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1309, 0, "GetRegisteredRawInputDevices", "GetRegisteredRawInputDevices", 0, vec![Param::new("pRawInputDevices", tys[26].clone(), None), Param::new("puiNumDevices", tys[39].clone(), None), Param::new("cbSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1310, 0, "GetRgnBox", "GetRgnBox", 0, vec![Param::new("hrgn", tys[26].clone(), None), Param::new("lprc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1311, 0, "GetSaveFileNameA", "GetSaveFileNameA", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1312, 0, "GetScrollBarInfo", "GetScrollBarInfo", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("idObject", tys[13].clone(), None), Param::new("psbi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1313, 0, "GetScrollInfo", "GetScrollInfo", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("nBar", tys[13].clone(), None), Param::new("lpsi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1314, 0, "GetScrollPos", "GetScrollPos", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nBar", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1315, 0, "GetScrollRange", "GetScrollRange", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nBar", tys[13].clone(), None), Param::new("lpMinPos", tys[39].clone(), None), Param::new("lpMaxPos", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1316, 0, "GetSecurityDescriptorControl", "GetSecurityDescriptorControl", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("pControl", tys[28].clone(), None), Param::new("lpdwRevision", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1317, 0, "GetSecurityDescriptorDacl", "GetSecurityDescriptorDacl", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("lpbDaclPresent", tys[39].clone(), None), Param::new("pDacl", tys[27].clone(), None), Param::new("lpbDaclDefaulted", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1318, 0, "GetSecurityDescriptorGroup", "GetSecurityDescriptorGroup", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("pGroup", tys[38].clone(), None), Param::new("lpbGroupDefaulted", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1319, 0, "GetSecurityDescriptorLength", "GetSecurityDescriptorLength", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1320, 0, "GetSecurityDescriptorOwner", "GetSecurityDescriptorOwner", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("pOwner", tys[38].clone(), None), Param::new("lpbOwnerDefaulted", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1321, 0, "GetSecurityDescriptorRMControl", "GetSecurityDescriptorRMControl", 0, vec![Param::new("SecurityDescriptor", tys[37].clone(), None), Param::new("RMControl", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1322, 0, "GetSecurityDescriptorSacl", "GetSecurityDescriptorSacl", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("lpbSaclPresent", tys[39].clone(), None), Param::new("pSacl", tys[27].clone(), None), Param::new("lpbSaclDefaulted", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1323, 0, "GetServiceDisplayNameA", "GetServiceDisplayNameA", 0, vec![Param::new("hSCManager", tys[26].clone(), None), Param::new("lpServiceName", tys[33].clone(), None), Param::new("lpDisplayName", tys[33].clone(), None), Param::new("lpcchBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1324, 0, "GetServiceKeyNameA", "GetServiceKeyNameA", 0, vec![Param::new("hSCManager", tys[26].clone(), None), Param::new("lpDisplayName", tys[33].clone(), None), Param::new("lpServiceName", tys[33].clone(), None), Param::new("lpcchBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1325, 0, "GetShellWindow", "GetShellWindow", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1326, 0, "GetShortPathNameA", "GetShortPathNameA", 0, vec![Param::new("lpszLongPath", tys[33].clone(), None), Param::new("lpszShortPath", tys[33].clone(), None), Param::new("cchBuffer", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1327, 0, "GetSidIdentifierAuthority", "GetSidIdentifierAuthority", 0, vec![Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1328, 0, "GetSidLengthRequired", "GetSidLengthRequired", 0, vec![Param::new("nSubAuthorityCount", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1329, 0, "GetSidSubAuthority", "GetSidSubAuthority", 0, vec![Param::new("pSid", tys[37].clone(), None), Param::new("nSubAuthority", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1330, 0, "GetSidSubAuthorityCount", "GetSidSubAuthorityCount", 0, vec![Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1331, 0, "GetSpoolFileHandle", "GetSpoolFileHandle", 0, vec![Param::new("hPrinter", tys[47].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1332, 0, "GetStartupInfoA", "GetStartupInfoA", 0, vec![Param::new("lpStartupInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1333, 0, "GetStdHandle", "GetStdHandle", 0, vec![Param::new("nStdHandle", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1334, 0, "GetStockObject", "GetStockObject", 0, vec![Param::new("i", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1335, 0, "GetStretchBltMode", "GetStretchBltMode", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1336, 0, "GetStringScripts", "GetStringScripts", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpString", tys[28].clone(), None), Param::new("cchString", tys[13].clone(), None), Param::new("lpScripts", tys[28].clone(), None), Param::new("cchScripts", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1337, 0, "GetStringTypeA", "GetStringTypeA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwInfoType", tys[13].clone(), None), Param::new("lpSrcStr", tys[33].clone(), None), Param::new("cchSrc", tys[13].clone(), None), Param::new("lpCharType", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1338, 0, "GetStringTypeExA", "GetStringTypeExA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwInfoType", tys[13].clone(), None), Param::new("lpSrcStr", tys[33].clone(), None), Param::new("cchSrc", tys[13].clone(), None), Param::new("lpCharType", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1339, 0, "GetSubMenu", "GetSubMenu", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("nPos", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1340, 0, "GetSysColor", "GetSysColor", 0, vec![Param::new("nIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1341, 0, "GetSysColorBrush", "GetSysColorBrush", 0, vec![Param::new("nIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1342, 0, "GetSystemCpuSetInformation", "GetSystemCpuSetInformation", 0, vec![Param::new("Information", tys[26].clone(), None), Param::new("BufferLength", tys[13].clone(), None), Param::new("ReturnedLength", tys[39].clone(), None), Param::new("Process", tys[47].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1343, 0, "GetSystemDEPPolicy", "GetSystemDEPPolicy", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_21(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1344, 0, "GetSystemDefaultLCID", "GetSystemDefaultLCID", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1345, 0, "GetSystemDefaultLangID", "GetSystemDefaultLangID", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1346, 0, "GetSystemDefaultLocaleName", "GetSystemDefaultLocaleName", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("cchLocaleName", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1347, 0, "GetSystemDefaultUILanguage", "GetSystemDefaultUILanguage", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1348, 0, "GetSystemDirectoryA", "GetSystemDirectoryA", 0, vec![Param::new("lpBuffer", tys[33].clone(), None), Param::new("uSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1349, 0, "GetSystemFileCacheSize", "GetSystemFileCacheSize", 0, vec![Param::new("lpMinimumFileCacheSize", tys[36].clone(), None), Param::new("lpMaximumFileCacheSize", tys[36].clone(), None), Param::new("lpFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1350, 0, "GetSystemFirmwareTable", "GetSystemFirmwareTable", 0, vec![Param::new("FirmwareTableProviderSignature", tys[13].clone(), None), Param::new("FirmwareTableID", tys[13].clone(), None), Param::new("pFirmwareTableBuffer", tys[37].clone(), None), Param::new("BufferSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1351, 0, "GetSystemInfo", "GetSystemInfo", 0, vec![Param::new("lpSystemInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1352, 0, "GetSystemMenu", "GetSystemMenu", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("bRevert", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1353, 0, "GetSystemMetrics", "GetSystemMetrics", 0, vec![Param::new("nIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1354, 0, "GetSystemMetricsForDpi", "GetSystemMetricsForDpi", 0, vec![Param::new("nIndex", tys[13].clone(), None), Param::new("dpi", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1355, 0, "GetSystemPaletteEntries", "GetSystemPaletteEntries", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iStart", tys[13].clone(), None), Param::new("cEntries", tys[13].clone(), None), Param::new("pPalEntries", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1356, 0, "GetSystemPaletteUse", "GetSystemPaletteUse", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1357, 0, "GetSystemPowerStatus", "GetSystemPowerStatus", 0, vec![Param::new("lpSystemPowerStatus", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1358, 0, "GetSystemPreferredUILanguages", "GetSystemPreferredUILanguages", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pulNumLanguages", tys[39].clone(), None), Param::new("pwszLanguagesBuffer", tys[28].clone(), None), Param::new("pcchLanguagesBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1359, 0, "GetSystemRegistryQuota", "GetSystemRegistryQuota", 0, vec![Param::new("pdwQuotaAllowed", tys[39].clone(), None), Param::new("pdwQuotaUsed", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1360, 0, "GetSystemTime", "GetSystemTime", 0, vec![Param::new("lpSystemTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1361, 0, "GetSystemTimeAdjustment", "GetSystemTimeAdjustment", 0, vec![Param::new("lpTimeAdjustment", tys[39].clone(), None), Param::new("lpTimeIncrement", tys[39].clone(), None), Param::new("lpTimeAdjustmentDisabled", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1362, 0, "GetSystemTimeAsFileTime", "GetSystemTimeAsFileTime", 0, vec![Param::new("lpSystemTimeAsFileTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1363, 0, "GetSystemTimePreciseAsFileTime", "GetSystemTimePreciseAsFileTime", 0, vec![Param::new("lpSystemTimeAsFileTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1364, 0, "GetSystemTimes", "GetSystemTimes", 0, vec![Param::new("lpIdleTime", tys[26].clone(), None), Param::new("lpKernelTime", tys[26].clone(), None), Param::new("lpUserTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1365, 0, "GetSystemWindowsDirectoryA", "GetSystemWindowsDirectoryA", 0, vec![Param::new("lpBuffer", tys[33].clone(), None), Param::new("uSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1366, 0, "GetSystemWow64Directory2A", "GetSystemWow64Directory2A", 0, vec![Param::new("lpBuffer", tys[33].clone(), None), Param::new("uSize", tys[13].clone(), None), Param::new("ImageFileMachineType", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1367, 0, "GetSystemWow64DirectoryA", "GetSystemWow64DirectoryA", 0, vec![Param::new("lpBuffer", tys[33].clone(), None), Param::new("uSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1368, 0, "GetTabbedTextExtentA", "GetTabbedTextExtentA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("chCount", tys[13].clone(), None), Param::new("nTabPositions", tys[13].clone(), None), Param::new("lpnTabStopPositions", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1369, 0, "GetTapeParameters", "GetTapeParameters", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("dwOperation", tys[13].clone(), None), Param::new("lpdwSize", tys[39].clone(), None), Param::new("lpTapeInformation", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1370, 0, "GetTapePosition", "GetTapePosition", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("dwPositionType", tys[13].clone(), None), Param::new("lpdwPartition", tys[39].clone(), None), Param::new("lpdwOffsetLow", tys[39].clone(), None), Param::new("lpdwOffsetHigh", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1371, 0, "GetTapeStatus", "GetTapeStatus", 0, vec![Param::new("hDevice", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1372, 0, "GetTempFileNameA", "GetTempFileNameA", 0, vec![Param::new("lpPathName", tys[33].clone(), None), Param::new("lpPrefixString", tys[33].clone(), None), Param::new("uUnique", tys[13].clone(), None), Param::new("lpTempFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1373, 0, "GetTempPathA", "GetTempPathA", 0, vec![Param::new("nBufferLength", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1374, 0, "GetTextAlign", "GetTextAlign", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1375, 0, "GetTextCharacterExtra", "GetTextCharacterExtra", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1376, 0, "GetTextCharset", "GetTextCharset", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1377, 0, "GetTextCharsetInfo", "GetTextCharsetInfo", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpSig", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1378, 0, "GetTextColor", "GetTextColor", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1379, 0, "GetTextExtentExPointA", "GetTextExtentExPointA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpszString", tys[33].clone(), None), Param::new("cchString", tys[13].clone(), None), Param::new("nMaxExtent", tys[13].clone(), None), Param::new("lpnFit", tys[39].clone(), None), Param::new("lpnDx", tys[39].clone(), None), Param::new("lpSize", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1380, 0, "GetTextExtentExPointI", "GetTextExtentExPointI", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpwszString", tys[28].clone(), None), Param::new("cwchString", tys[13].clone(), None), Param::new("nMaxExtent", tys[13].clone(), None), Param::new("lpnFit", tys[39].clone(), None), Param::new("lpnDx", tys[39].clone(), None), Param::new("lpSize", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1381, 0, "GetTextExtentPoint32A", "GetTextExtentPoint32A", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("c", tys[13].clone(), None), Param::new("psizl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1382, 0, "GetTextExtentPointA", "GetTextExtentPointA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("c", tys[13].clone(), None), Param::new("lpsz", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1383, 0, "GetTextExtentPointI", "GetTextExtentPointI", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("pgiIn", tys[28].clone(), None), Param::new("cgi", tys[13].clone(), None), Param::new("psize", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1384, 0, "GetTextFaceA", "GetTextFaceA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("c", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1385, 0, "GetTextMetricsA", "GetTextMetricsA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lptm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1386, 0, "GetThreadContext", "GetThreadContext", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("lpContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1387, 0, "GetThreadDesktop", "GetThreadDesktop", 0, vec![Param::new("dwThreadId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1388, 0, "GetThreadDpiAwarenessContext", "GetThreadDpiAwarenessContext", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1389, 0, "GetThreadErrorMode", "GetThreadErrorMode", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1390, 0, "GetThreadGroupAffinity", "GetThreadGroupAffinity", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("GroupAffinity", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1391, 0, "GetThreadIOPendingFlag", "GetThreadIOPendingFlag", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("lpIOIsPending", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1392, 0, "GetThreadId", "GetThreadId", 0, vec![Param::new("Thread", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1393, 0, "GetThreadIdealProcessorEx", "GetThreadIdealProcessorEx", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("lpIdealProcessor", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1394, 0, "GetThreadInformation", "GetThreadInformation", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("ThreadInformationClass", tys[13].clone(), None), Param::new("ThreadInformation", tys[37].clone(), None), Param::new("ThreadInformationSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1395, 0, "GetThreadLocale", "GetThreadLocale", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1396, 0, "GetThreadPreferredUILanguages", "GetThreadPreferredUILanguages", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pulNumLanguages", tys[39].clone(), None), Param::new("pwszLanguagesBuffer", tys[28].clone(), None), Param::new("pcchLanguagesBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1397, 0, "GetThreadPriority", "GetThreadPriority", 0, vec![Param::new("hThread", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1398, 0, "GetThreadPriorityBoost", "GetThreadPriorityBoost", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("pDisablePriorityBoost", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1399, 0, "GetThreadSelectedCpuSets", "GetThreadSelectedCpuSets", 0, vec![Param::new("Thread", tys[47].clone(), None), Param::new("CpuSetIds", tys[39].clone(), None), Param::new("CpuSetIdCount", tys[13].clone(), None), Param::new("RequiredIdCount", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1400, 0, "GetThreadSelectorEntry", "GetThreadSelectorEntry", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("dwSelector", tys[13].clone(), None), Param::new("lpSelectorEntry", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1401, 0, "GetThreadTimes", "GetThreadTimes", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("lpCreationTime", tys[26].clone(), None), Param::new("lpExitTime", tys[26].clone(), None), Param::new("lpKernelTime", tys[26].clone(), None), Param::new("lpUserTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1402, 0, "GetThreadUILanguage", "GetThreadUILanguage", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1403, 0, "GetTickCount", "GetTickCount", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1404, 0, "GetTickCount64", "GetTickCount64", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1405, 0, "GetTimeFormatA", "GetTimeFormatA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpTime", tys[26].clone(), None), Param::new("lpFormat", tys[33].clone(), None), Param::new("lpTimeStr", tys[33].clone(), None), Param::new("cchTime", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1406, 0, "GetTimeFormatEx", "GetTimeFormatEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpTime", tys[26].clone(), None), Param::new("lpFormat", tys[28].clone(), None), Param::new("lpTimeStr", tys[28].clone(), None), Param::new("cchTime", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1407, 0, "GetTimeZoneInformation", "GetTimeZoneInformation", 0, vec![Param::new("lpTimeZoneInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_22(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1408, 0, "GetTimeZoneInformationForYear", "GetTimeZoneInformationForYear", 0, vec![Param::new("wYear", tys[11].clone(), None), Param::new("pdtzi", tys[26].clone(), None), Param::new("ptzi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1409, 0, "GetTitleBarInfo", "GetTitleBarInfo", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pti", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1410, 0, "GetTokenInformation", "GetTokenInformation", 0, vec![Param::new("TokenHandle", tys[47].clone(), None), Param::new("TokenInformationClass", tys[13].clone(), None), Param::new("TokenInformation", tys[37].clone(), None), Param::new("TokenInformationLength", tys[13].clone(), None), Param::new("ReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1411, 0, "GetTopWindow", "GetTopWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1412, 0, "GetTouchInputInfo", "GetTouchInputInfo", 0, vec![Param::new("hTouchInput", tys[26].clone(), None), Param::new("cInputs", tys[13].clone(), None), Param::new("pInputs", tys[26].clone(), None), Param::new("cbSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1413, 0, "GetUILanguageInfo", "GetUILanguageInfo", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pwmszLanguage", tys[28].clone(), None), Param::new("pwszFallbackLanguages", tys[28].clone(), None), Param::new("pcchFallbackLanguages", tys[39].clone(), None), Param::new("pAttributes", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1414, 0, "GetUmsCompletionListEvent", "GetUmsCompletionListEvent", 0, vec![Param::new("UmsCompletionList", tys[37].clone(), None), Param::new("UmsCompletionEvent", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1415, 0, "GetUmsSystemThreadInformation", "GetUmsSystemThreadInformation", 0, vec![Param::new("ThreadHandle", tys[47].clone(), None), Param::new("SystemThreadInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1416, 0, "GetUnpredictedMessagePos", "GetUnpredictedMessagePos", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1417, 0, "GetUpdateRect", "GetUpdateRect", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpRect", tys[26].clone(), None), Param::new("bErase", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1418, 0, "GetUpdateRgn", "GetUpdateRgn", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hRgn", tys[26].clone(), None), Param::new("bErase", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1419, 0, "GetUpdatedClipboardFormats", "GetUpdatedClipboardFormats", 0, vec![Param::new("lpuiFormats", tys[39].clone(), None), Param::new("cFormats", tys[13].clone(), None), Param::new("pcFormatsOut", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1420, 0, "GetUserDefaultLCID", "GetUserDefaultLCID", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1421, 0, "GetUserDefaultLangID", "GetUserDefaultLangID", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1422, 0, "GetUserDefaultLocaleName", "GetUserDefaultLocaleName", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("cchLocaleName", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1423, 0, "GetUserDefaultUILanguage", "GetUserDefaultUILanguage", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1424, 0, "GetUserGeoID", "GetUserGeoID", 0, vec![Param::new("GeoClass", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1425, 0, "GetUserNameA", "GetUserNameA", 0, vec![Param::new("lpBuffer", tys[33].clone(), None), Param::new("pcbBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1426, 0, "GetUserObjectInformationA", "GetUserObjectInformationA", 0, vec![Param::new("hObj", tys[47].clone(), None), Param::new("nIndex", tys[13].clone(), None), Param::new("pvInfo", tys[37].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("lpnLengthNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1427, 0, "GetUserObjectSecurity", "GetUserObjectSecurity", 0, vec![Param::new("hObj", tys[47].clone(), None), Param::new("pSIRequested", tys[39].clone(), None), Param::new("pSID", tys[37].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("lpnLengthNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1428, 0, "GetUserPreferredUILanguages", "GetUserPreferredUILanguages", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pulNumLanguages", tys[39].clone(), None), Param::new("pwszLanguagesBuffer", tys[28].clone(), None), Param::new("pcchLanguagesBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1429, 0, "GetVersion", "GetVersion", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1430, 0, "GetVersionExA", "GetVersionExA", 0, vec![Param::new("lpVersionInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1431, 0, "GetViewportExtEx", "GetViewportExtEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpsize", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1432, 0, "GetViewportOrgEx", "GetViewportOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lppoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1433, 0, "GetVolumeInformationA", "GetVolumeInformationA", 0, vec![Param::new("lpRootPathName", tys[33].clone(), None), Param::new("lpVolumeNameBuffer", tys[33].clone(), None), Param::new("nVolumeNameSize", tys[13].clone(), None), Param::new("lpVolumeSerialNumber", tys[39].clone(), None), Param::new("lpMaximumComponentLength", tys[39].clone(), None), Param::new("lpFileSystemFlags", tys[39].clone(), None), Param::new("lpFileSystemNameBuffer", tys[33].clone(), None), Param::new("nFileSystemNameSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1434, 0, "GetVolumeNameForVolumeMountPointA", "GetVolumeNameForVolumeMountPointA", 0, vec![Param::new("lpszVolumeMountPoint", tys[33].clone(), None), Param::new("lpszVolumeName", tys[33].clone(), None), Param::new("cchBufferLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1435, 0, "GetVolumePathNameA", "GetVolumePathNameA", 0, vec![Param::new("lpszFileName", tys[33].clone(), None), Param::new("lpszVolumePathName", tys[33].clone(), None), Param::new("cchBufferLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1436, 0, "GetVolumePathNamesForVolumeNameA", "GetVolumePathNamesForVolumeNameA", 0, vec![Param::new("lpszVolumeName", tys[33].clone(), None), Param::new("lpszVolumePathNames", tys[33].clone(), None), Param::new("cchBufferLength", tys[13].clone(), None), Param::new("lpcchReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1437, 0, "GetWinMetaFileBits", "GetWinMetaFileBits", 0, vec![Param::new("hemf", tys[26].clone(), None), Param::new("cbData16", tys[13].clone(), None), Param::new("pData16", tys[33].clone(), None), Param::new("iMapMode", tys[13].clone(), None), Param::new("hdcRef", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1438, 0, "GetWindow", "GetWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("uCmd", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1439, 0, "GetWindowContextHelpId", "GetWindowContextHelpId", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1440, 0, "GetWindowDC", "GetWindowDC", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1441, 0, "GetWindowDisplayAffinity", "GetWindowDisplayAffinity", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("pdwAffinity", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1442, 0, "GetWindowDpiAwarenessContext", "GetWindowDpiAwarenessContext", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1443, 0, "GetWindowExtEx", "GetWindowExtEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpsize", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1444, 0, "GetWindowFeedbackSetting", "GetWindowFeedbackSetting", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("feedback", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pSize", tys[39].clone(), None), Param::new("config", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1445, 0, "GetWindowInfo", "GetWindowInfo", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pwi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1446, 0, "GetWindowLongA", "GetWindowLongA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1447, 0, "GetWindowLongPtrA", "GetWindowLongPtrA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1448, 0, "GetWindowModuleFileNameA", "GetWindowModuleFileNameA", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pszFileName", tys[33].clone(), None), Param::new("cchFileNameMax", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1449, 0, "GetWindowOrgEx", "GetWindowOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lppoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1450, 0, "GetWindowPlacement", "GetWindowPlacement", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpwndpl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1451, 0, "GetWindowRect", "GetWindowRect", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1452, 0, "GetWindowRgn", "GetWindowRgn", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hRgn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1453, 0, "GetWindowRgnBox", "GetWindowRgnBox", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lprc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1454, 0, "GetWindowTextA", "GetWindowTextA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("nMaxCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1455, 0, "GetWindowTextLengthA", "GetWindowTextLengthA", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1456, 0, "GetWindowThreadProcessId", "GetWindowThreadProcessId", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpdwProcessId", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1457, 0, "GetWindowWord", "GetWindowWord", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1458, 0, "GetWindowsAccountDomainSid", "GetWindowsAccountDomainSid", 0, vec![Param::new("pSid", tys[37].clone(), None), Param::new("pDomainSid", tys[37].clone(), None), Param::new("cbDomainSid", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1459, 0, "GetWindowsDirectoryA", "GetWindowsDirectoryA", 0, vec![Param::new("lpBuffer", tys[33].clone(), None), Param::new("uSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1460, 0, "GetWorldTransform", "GetWorldTransform", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpxf", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1461, 0, "GetWriteWatch", "GetWriteWatch", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpBaseAddress", tys[37].clone(), None), Param::new("dwRegionSize", tys[14].clone(), None), Param::new("lpAddresses", tys[38].clone(), None), Param::new("lpdwCount", tys[36].clone(), None), Param::new("lpdwGranularity", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1462, 0, "GetXStateFeaturesMask", "GetXStateFeaturesMask", 0, vec![Param::new("Context", tys[26].clone(), None), Param::new("FeatureMask", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1463, 0, "GlobalAddAtomA", "GlobalAddAtomA", 0, vec![Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1464, 0, "GlobalAddAtomExA", "GlobalAddAtomExA", 0, vec![Param::new("lpString", tys[33].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1465, 0, "GlobalAlloc", "GlobalAlloc", 0, vec![Param::new("uFlags", tys[13].clone(), None), Param::new("dwBytes", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1466, 0, "GlobalCompact", "GlobalCompact", 0, vec![Param::new("dwMinFree", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1467, 0, "GlobalDeleteAtom", "GlobalDeleteAtom", 0, vec![Param::new("nAtom", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1468, 0, "GlobalFindAtomA", "GlobalFindAtomA", 0, vec![Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1469, 0, "GlobalFix", "GlobalFix", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1470, 0, "GlobalFlags", "GlobalFlags", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1471, 0, "GlobalFree", "GlobalFree", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_23(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1472, 0, "GlobalGetAtomNameA", "GlobalGetAtomNameA", 0, vec![Param::new("nAtom", tys[11].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1473, 0, "GlobalHandle", "GlobalHandle", 0, vec![Param::new("pMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1474, 0, "GlobalLock", "GlobalLock", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1475, 0, "GlobalMemoryStatus", "GlobalMemoryStatus", 0, vec![Param::new("lpBuffer", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1476, 0, "GlobalMemoryStatusEx", "GlobalMemoryStatusEx", 0, vec![Param::new("lpBuffer", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1477, 0, "GlobalReAlloc", "GlobalReAlloc", 0, vec![Param::new("hMem", tys[37].clone(), None), Param::new("dwBytes", tys[14].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1478, 0, "GlobalSize", "GlobalSize", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1479, 0, "GlobalUnWire", "GlobalUnWire", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1480, 0, "GlobalUnfix", "GlobalUnfix", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1481, 0, "GlobalUnlock", "GlobalUnlock", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1482, 0, "GlobalWire", "GlobalWire", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1483, 0, "GradientFill", "GradientFill", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("pVertex", tys[26].clone(), None), Param::new("nVertex", tys[13].clone(), None), Param::new("pMesh", tys[37].clone(), None), Param::new("nMesh", tys[13].clone(), None), Param::new("ulMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1484, 0, "GrayStringA", "GrayStringA", 0, vec![Param::new("hDC", tys[26].clone(), None), Param::new("hBrush", tys[26].clone(), None), Param::new("lpOutputFunc", tys[26].clone(), None), Param::new("lpData", tys[14].clone(), None), Param::new("nCount", tys[13].clone(), None), Param::new("X", tys[13].clone(), None), Param::new("Y", tys[13].clone(), None), Param::new("nWidth", tys[13].clone(), None), Param::new("nHeight", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1485, 0, "HeapAlloc", "HeapAlloc", 0, vec![Param::new("hHeap", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwBytes", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1486, 0, "HeapCompact", "HeapCompact", 0, vec![Param::new("hHeap", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1487, 0, "HeapCreate", "HeapCreate", 0, vec![Param::new("flOptions", tys[13].clone(), None), Param::new("dwInitialSize", tys[14].clone(), None), Param::new("dwMaximumSize", tys[14].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1488, 0, "HeapDestroy", "HeapDestroy", 0, vec![Param::new("hHeap", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1489, 0, "HeapFree", "HeapFree", 0, vec![Param::new("hHeap", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1490, 0, "HeapLock", "HeapLock", 0, vec![Param::new("hHeap", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1491, 0, "HeapQueryInformation", "HeapQueryInformation", 0, vec![Param::new("HeapHandle", tys[47].clone(), None), Param::new("HeapInformationClass", tys[13].clone(), None), Param::new("HeapInformation", tys[37].clone(), None), Param::new("HeapInformationLength", tys[14].clone(), None), Param::new("ReturnLength", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1492, 0, "HeapReAlloc", "HeapReAlloc", 0, vec![Param::new("hHeap", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpMem", tys[37].clone(), None), Param::new("dwBytes", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1493, 0, "HeapSetInformation", "HeapSetInformation", 0, vec![Param::new("HeapHandle", tys[47].clone(), None), Param::new("HeapInformationClass", tys[13].clone(), None), Param::new("HeapInformation", tys[37].clone(), None), Param::new("HeapInformationLength", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1494, 0, "HeapSize", "HeapSize", 0, vec![Param::new("hHeap", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1495, 0, "HeapSummary", "HeapSummary", 0, vec![Param::new("hHeap", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpSummary", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1496, 0, "HeapUnlock", "HeapUnlock", 0, vec![Param::new("hHeap", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1497, 0, "HeapValidate", "HeapValidate", 0, vec![Param::new("hHeap", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1498, 0, "HeapWalk", "HeapWalk", 0, vec![Param::new("hHeap", tys[47].clone(), None), Param::new("lpEntry", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1499, 0, "HideCaret", "HideCaret", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1500, 0, "HiliteMenuItem", "HiliteMenuItem", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hMenu", tys[26].clone(), None), Param::new("uIDHiliteItem", tys[13].clone(), None), Param::new("uHilite", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1501, 0, "I_UuidCreate", "I_UuidCreate", 0, vec![Param::new("Uuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1502, 0, "IdnToAscii", "IdnToAscii", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpUnicodeCharStr", tys[28].clone(), None), Param::new("cchUnicodeChar", tys[13].clone(), None), Param::new("lpASCIICharStr", tys[28].clone(), None), Param::new("cchASCIIChar", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1503, 0, "IdnToUnicode", "IdnToUnicode", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpASCIICharStr", tys[28].clone(), None), Param::new("cchASCIIChar", tys[13].clone(), None), Param::new("lpUnicodeCharStr", tys[28].clone(), None), Param::new("cchUnicodeChar", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1504, 0, "ImmAssociateContext", "ImmAssociateContext", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1505, 0, "ImmAssociateContextEx", "ImmAssociateContextEx", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), Param::new("arg2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1506, 0, "ImmConfigureIMEA", "ImmConfigureIMEA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("arg3", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1507, 0, "ImmCreateContext", "ImmCreateContext", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1508, 0, "ImmDestroyContext", "ImmDestroyContext", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1509, 0, "ImmDisableIME", "ImmDisableIME", 0, vec![Param::new("arg0", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1510, 0, "ImmDisableLegacyIME", "ImmDisableLegacyIME", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1511, 0, "ImmDisableTextFrameService", "ImmDisableTextFrameService", 0, vec![Param::new("idThread", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1512, 0, "ImmEnumInputContext", "ImmEnumInputContext", 0, vec![Param::new("idThread", tys[13].clone(), None), Param::new("lpfn", tys[26].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1513, 0, "ImmEnumRegisterWordA", "ImmEnumRegisterWordA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), Param::new("lpszReading", tys[33].clone(), None), Param::new("arg3", tys[13].clone(), None), Param::new("lpszRegister", tys[33].clone(), None), Param::new("arg5", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1514, 0, "ImmEscapeA", "ImmEscapeA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("arg3", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1515, 0, "ImmGetCandidateListA", "ImmGetCandidateListA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("deIndex", tys[13].clone(), None), Param::new("lpCandList", tys[26].clone(), None), Param::new("dwBufLen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1516, 0, "ImmGetCandidateListCountA", "ImmGetCandidateListCountA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpdwListCount", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1517, 0, "ImmGetCandidateWindow", "ImmGetCandidateWindow", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("lpCandidate", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1518, 0, "ImmGetCompositionFontA", "ImmGetCompositionFontA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lplf", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1519, 0, "ImmGetCompositionStringA", "ImmGetCompositionStringA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("lpBuf", tys[37].clone(), None), Param::new("dwBufLen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1520, 0, "ImmGetCompositionWindow", "ImmGetCompositionWindow", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpCompForm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1521, 0, "ImmGetContext", "ImmGetContext", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1522, 0, "ImmGetConversionListA", "ImmGetConversionListA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), Param::new("lpSrc", tys[33].clone(), None), Param::new("lpDst", tys[26].clone(), None), Param::new("dwBufLen", tys[13].clone(), None), Param::new("uFlag", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1523, 0, "ImmGetConversionStatus", "ImmGetConversionStatus", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpfdwConversion", tys[39].clone(), None), Param::new("lpfdwSentence", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1524, 0, "ImmGetDefaultIMEWnd", "ImmGetDefaultIMEWnd", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1525, 0, "ImmGetDescriptionA", "ImmGetDescriptionA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpszDescription", tys[33].clone(), None), Param::new("uBufLen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1526, 0, "ImmGetGuideLineA", "ImmGetGuideLineA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("lpBuf", tys[33].clone(), None), Param::new("dwBufLen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1527, 0, "ImmGetIMEFileNameA", "ImmGetIMEFileNameA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpszFileName", tys[33].clone(), None), Param::new("uBufLen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1528, 0, "ImmGetImeMenuItemsA", "ImmGetImeMenuItemsA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("lpImeParentMenu", tys[26].clone(), None), Param::new("lpImeMenu", tys[26].clone(), None), Param::new("dwSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1529, 0, "ImmGetOpenStatus", "ImmGetOpenStatus", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1530, 0, "ImmGetProperty", "ImmGetProperty", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1531, 0, "ImmGetRegisterWordStyleA", "ImmGetRegisterWordStyleA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("nItem", tys[13].clone(), None), Param::new("lpStyleBuf", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1532, 0, "ImmGetStatusWindowPos", "ImmGetStatusWindowPos", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpptPos", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1533, 0, "ImmGetVirtualKey", "ImmGetVirtualKey", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1534, 0, "ImmInstallIMEA", "ImmInstallIMEA", 0, vec![Param::new("lpszIMEFileName", tys[33].clone(), None), Param::new("lpszLayoutText", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1535, 0, "ImmIsIME", "ImmIsIME", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_24(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1536, 0, "ImmIsUIMessageA", "ImmIsUIMessageA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[14].clone(), None), Param::new("arg3", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1537, 0, "ImmNotifyIME", "ImmNotifyIME", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("dwAction", tys[13].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("dwValue", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1538, 0, "ImmRegisterWordA", "ImmRegisterWordA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpszReading", tys[33].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("lpszRegister", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1539, 0, "ImmReleaseContext", "ImmReleaseContext", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1540, 0, "ImmSetCandidateWindow", "ImmSetCandidateWindow", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpCandidate", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1541, 0, "ImmSetCompositionFontA", "ImmSetCompositionFontA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lplf", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1542, 0, "ImmSetCompositionStringA", "ImmSetCompositionStringA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("lpComp", tys[37].clone(), None), Param::new("dwCompLen", tys[13].clone(), None), Param::new("lpRead", tys[37].clone(), None), Param::new("dwReadLen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1543, 0, "ImmSetCompositionWindow", "ImmSetCompositionWindow", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpCompForm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1544, 0, "ImmSetConversionStatus", "ImmSetConversionStatus", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1545, 0, "ImmSetOpenStatus", "ImmSetOpenStatus", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1546, 0, "ImmSetStatusWindowPos", "ImmSetStatusWindowPos", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpptPos", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1547, 0, "ImmSimulateHotKey", "ImmSimulateHotKey", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1548, 0, "ImmUnregisterWordA", "ImmUnregisterWordA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("lpszReading", tys[33].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("lpszUnregister", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1549, 0, "ImpersonateAnonymousToken", "ImpersonateAnonymousToken", 0, vec![Param::new("ThreadHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1550, 0, "ImpersonateDdeClientWindow", "ImpersonateDdeClientWindow", 0, vec![Param::new("hWndClient", tys[26].clone(), None), Param::new("hWndServer", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1551, 0, "ImpersonateLoggedOnUser", "ImpersonateLoggedOnUser", 0, vec![Param::new("hToken", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1552, 0, "ImpersonateNamedPipeClient", "ImpersonateNamedPipeClient", 0, vec![Param::new("hNamedPipe", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1553, 0, "ImpersonateSelf", "ImpersonateSelf", 0, vec![Param::new("ImpersonationLevel", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1554, 0, "InSendMessage", "InSendMessage", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1555, 0, "InSendMessageEx", "InSendMessageEx", 0, vec![Param::new("lpReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1556, 0, "InflateRect", "InflateRect", 0, vec![Param::new("lprc", tys[26].clone(), None), Param::new("dx", tys[13].clone(), None), Param::new("dy", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1557, 0, "InheritWindowMonitor", "InheritWindowMonitor", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("hwndInherit", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1558, 0, "InitAtomTable", "InitAtomTable", 0, vec![Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1559, 0, "InitNetworkAddressControl", "InitNetworkAddressControl", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1560, 0, "InitOnceBeginInitialize", "InitOnceBeginInitialize", 0, vec![Param::new("lpInitOnce", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("fPending", tys[39].clone(), None), Param::new("lpContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1561, 0, "InitOnceComplete", "InitOnceComplete", 0, vec![Param::new("lpInitOnce", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpContext", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1562, 0, "InitOnceExecuteOnce", "InitOnceExecuteOnce", 0, vec![Param::new("InitOnce", tys[26].clone(), None), Param::new("InitFn", tys[26].clone(), None), Param::new("Parameter", tys[37].clone(), None), Param::new("Context", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1563, 0, "InitOnceInitialize", "InitOnceInitialize", 0, vec![Param::new("InitOnce", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1564, 0, "InitializeAcl", "InitializeAcl", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("nAclLength", tys[13].clone(), None), Param::new("dwAclRevision", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1565, 0, "InitializeConditionVariable", "InitializeConditionVariable", 0, vec![Param::new("ConditionVariable", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1566, 0, "InitializeContext", "InitializeContext", 0, vec![Param::new("Buffer", tys[37].clone(), None), Param::new("ContextFlags", tys[13].clone(), None), Param::new("Context", tys[27].clone(), None), Param::new("ContextLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1567, 0, "InitializeCriticalSection", "InitializeCriticalSection", 0, vec![Param::new("lpCriticalSection", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1568, 0, "InitializeCriticalSectionAndSpinCount", "InitializeCriticalSectionAndSpinCount", 0, vec![Param::new("lpCriticalSection", tys[26].clone(), None), Param::new("dwSpinCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1569, 0, "InitializeCriticalSectionEx", "InitializeCriticalSectionEx", 0, vec![Param::new("lpCriticalSection", tys[26].clone(), None), Param::new("dwSpinCount", tys[13].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1570, 0, "InitializeEnclave", "InitializeEnclave", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpAddress", tys[37].clone(), None), Param::new("lpEnclaveInformation", tys[37].clone(), None), Param::new("dwInfoLength", tys[13].clone(), None), Param::new("lpEnclaveError", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1571, 0, "InitializeProcThreadAttributeList", "InitializeProcThreadAttributeList", 0, vec![Param::new("lpAttributeList", tys[26].clone(), None), Param::new("dwAttributeCount", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpSize", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1572, 0, "InitializeSListHead", "InitializeSListHead", 0, vec![Param::new("ListHead", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1573, 0, "InitializeSRWLock", "InitializeSRWLock", 0, vec![Param::new("SRWLock", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1574, 0, "InitializeSecurityDescriptor", "InitializeSecurityDescriptor", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("dwRevision", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1575, 0, "InitializeSid", "InitializeSid", 0, vec![Param::new("Sid", tys[37].clone(), None), Param::new("pIdentifierAuthority", tys[26].clone(), None), Param::new("nSubAuthorityCount", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1576, 0, "InitializeSynchronizationBarrier", "InitializeSynchronizationBarrier", 0, vec![Param::new("lpBarrier", tys[26].clone(), None), Param::new("lTotalThreads", tys[13].clone(), None), Param::new("lSpinCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1577, 0, "InitializeTouchInjection", "InitializeTouchInjection", 0, vec![Param::new("maxCount", tys[13].clone(), None), Param::new("dwMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1578, 0, "InjectTouchInput", "InjectTouchInput", 0, vec![Param::new("count", tys[13].clone(), None), Param::new("contacts", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1579, 0, "InsertMenuA", "InsertMenuA", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uPosition", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), Param::new("uIDNewItem", tys[14].clone(), None), Param::new("lpNewItem", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1580, 0, "InsertMenuItemA", "InsertMenuItemA", 0, vec![Param::new("hmenu", tys[26].clone(), None), Param::new("item", tys[13].clone(), None), Param::new("fByPosition", tys[13].clone(), None), Param::new("lpmi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1581, 0, "InstallELAMCertificateInfo", "InstallELAMCertificateInfo", 0, vec![Param::new("ELAMFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1582, 0, "InstallPrinterDriverFromPackageA", "InstallPrinterDriverFromPackageA", 0, vec![Param::new("pszServer", tys[33].clone(), None), Param::new("pszInfPath", tys[33].clone(), None), Param::new("pszDriverName", tys[33].clone(), None), Param::new("pszEnvironment", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1583, 0, "InterlockedFlushSList", "InterlockedFlushSList", 0, vec![Param::new("ListHead", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1584, 0, "InterlockedPopEntrySList", "InterlockedPopEntrySList", 0, vec![Param::new("ListHead", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1585, 0, "InterlockedPushEntrySList", "InterlockedPushEntrySList", 0, vec![Param::new("ListHead", tys[26].clone(), None), Param::new("ListEntry", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1586, 0, "InterlockedPushListSListEx", "InterlockedPushListSListEx", 0, vec![Param::new("ListHead", tys[26].clone(), None), Param::new("List", tys[26].clone(), None), Param::new("ListEnd", tys[26].clone(), None), Param::new("Count", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1587, 0, "InternalGetWindowText", "InternalGetWindowText", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("pString", tys[28].clone(), None), Param::new("cchMaxCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1588, 0, "IntersectClipRect", "IntersectClipRect", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("left", tys[13].clone(), None), Param::new("top", tys[13].clone(), None), Param::new("right", tys[13].clone(), None), Param::new("bottom", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1589, 0, "IntersectRect", "IntersectRect", 0, vec![Param::new("lprcDst", tys[26].clone(), None), Param::new("lprcSrc1", tys[26].clone(), None), Param::new("lprcSrc2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1590, 0, "InvalidateRect", "InvalidateRect", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpRect", tys[26].clone(), None), Param::new("bErase", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1591, 0, "InvalidateRgn", "InvalidateRgn", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hRgn", tys[26].clone(), None), Param::new("bErase", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1592, 0, "InvertRect", "InvertRect", 0, vec![Param::new("hDC", tys[26].clone(), None), Param::new("lprc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1593, 0, "InvertRgn", "InvertRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hrgn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1594, 0, "IsBadCodePtr", "IsBadCodePtr", 0, vec![Param::new("lpfn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1595, 0, "IsBadHugeReadPtr", "IsBadHugeReadPtr", 0, vec![Param::new("lp", tys[37].clone(), None), Param::new("ucb", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1596, 0, "IsBadHugeWritePtr", "IsBadHugeWritePtr", 0, vec![Param::new("lp", tys[37].clone(), None), Param::new("ucb", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1597, 0, "IsBadReadPtr", "IsBadReadPtr", 0, vec![Param::new("lp", tys[37].clone(), None), Param::new("ucb", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1598, 0, "IsBadStringPtrA", "IsBadStringPtrA", 0, vec![Param::new("lpsz", tys[33].clone(), None), Param::new("ucchMax", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1599, 0, "IsBadWritePtr", "IsBadWritePtr", 0, vec![Param::new("lp", tys[37].clone(), None), Param::new("ucb", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_25(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1600, 0, "IsCharAlphaA", "IsCharAlphaA", 0, vec![Param::new("ch", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1601, 0, "IsCharAlphaNumericA", "IsCharAlphaNumericA", 0, vec![Param::new("ch", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1602, 0, "IsCharLowerA", "IsCharLowerA", 0, vec![Param::new("ch", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1603, 0, "IsCharUpperA", "IsCharUpperA", 0, vec![Param::new("ch", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1604, 0, "IsChild", "IsChild", 0, vec![Param::new("hWndParent", tys[26].clone(), None), Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1605, 0, "IsClipboardFormatAvailable", "IsClipboardFormatAvailable", 0, vec![Param::new("format", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1606, 0, "IsDBCSLeadByte", "IsDBCSLeadByte", 0, vec![Param::new("TestChar", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1607, 0, "IsDBCSLeadByteEx", "IsDBCSLeadByteEx", 0, vec![Param::new("CodePage", tys[13].clone(), None), Param::new("TestChar", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1608, 0, "IsDebuggerPresent", "IsDebuggerPresent", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1609, 0, "IsDialogMessageA", "IsDialogMessageA", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("lpMsg", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1610, 0, "IsDlgButtonChecked", "IsDlgButtonChecked", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nIDButton", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1611, 0, "IsEnclaveTypeSupported", "IsEnclaveTypeSupported", 0, vec![Param::new("flEnclaveType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1612, 0, "IsGUIThread", "IsGUIThread", 0, vec![Param::new("bConvert", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1613, 0, "IsHungAppWindow", "IsHungAppWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1614, 0, "IsIconic", "IsIconic", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1615, 0, "IsImmersiveProcess", "IsImmersiveProcess", 0, vec![Param::new("hProcess", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1616, 0, "IsLFNDriveA", "IsLFNDriveA", 0, vec![Param::new("pszPath", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1617, 0, "IsMenu", "IsMenu", 0, vec![Param::new("hMenu", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1618, 0, "IsMouseInPointerEnabled", "IsMouseInPointerEnabled", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1619, 0, "IsNLSDefinedString", "IsNLSDefinedString", 0, vec![Param::new("Function", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpVersionInformation", tys[26].clone(), None), Param::new("lpString", tys[28].clone(), None), Param::new("cchStr", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1620, 0, "IsNativeVhdBoot", "IsNativeVhdBoot", 0, vec![Param::new("NativeVhdBoot", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1621, 0, "IsNormalizedString", "IsNormalizedString", 0, vec![Param::new("NormForm", tys[13].clone(), None), Param::new("lpString", tys[28].clone(), None), Param::new("cwLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1622, 0, "IsProcessCritical", "IsProcessCritical", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("Critical", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1623, 0, "IsProcessDPIAware", "IsProcessDPIAware", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1624, 0, "IsProcessInJob", "IsProcessInJob", 0, vec![Param::new("ProcessHandle", tys[47].clone(), None), Param::new("JobHandle", tys[47].clone(), None), Param::new("Result", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1625, 0, "IsProcessorFeaturePresent", "IsProcessorFeaturePresent", 0, vec![Param::new("ProcessorFeature", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1626, 0, "IsRectEmpty", "IsRectEmpty", 0, vec![Param::new("lprc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1627, 0, "IsSystemResumeAutomatic", "IsSystemResumeAutomatic", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1628, 0, "IsTextUnicode", "IsTextUnicode", 0, vec![Param::new("lpv", tys[37].clone(), None), Param::new("iSize", tys[13].clone(), None), Param::new("lpiResult", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1629, 0, "IsThreadAFiber", "IsThreadAFiber", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1630, 0, "IsThreadpoolTimerSet", "IsThreadpoolTimerSet", 0, vec![Param::new("pti", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1631, 0, "IsTokenRestricted", "IsTokenRestricted", 0, vec![Param::new("TokenHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1632, 0, "IsTokenUntrusted", "IsTokenUntrusted", 0, vec![Param::new("TokenHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1633, 0, "IsTouchWindow", "IsTouchWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pulFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1634, 0, "IsValidAcl", "IsValidAcl", 0, vec![Param::new("pAcl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1635, 0, "IsValidCodePage", "IsValidCodePage", 0, vec![Param::new("CodePage", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1636, 0, "IsValidDevmodeA", "IsValidDevmodeA", 0, vec![Param::new("pDevmode", tys[26].clone(), None), Param::new("DevmodeSize", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1637, 0, "IsValidDpiAwarenessContext", "IsValidDpiAwarenessContext", 0, vec![Param::new("value", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1638, 0, "IsValidLanguageGroup", "IsValidLanguageGroup", 0, vec![Param::new("LanguageGroup", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1639, 0, "IsValidLocale", "IsValidLocale", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1640, 0, "IsValidLocaleName", "IsValidLocaleName", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1641, 0, "IsValidNLSVersion", "IsValidNLSVersion", 0, vec![Param::new("function", tys[13].clone(), None), Param::new("lpLocaleName", tys[28].clone(), None), Param::new("lpVersionInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1642, 0, "IsValidSecurityDescriptor", "IsValidSecurityDescriptor", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1643, 0, "IsValidSid", "IsValidSid", 0, vec![Param::new("pSid", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1644, 0, "IsWellKnownSid", "IsWellKnownSid", 0, vec![Param::new("pSid", tys[37].clone(), None), Param::new("WellKnownSidType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1645, 0, "IsWinEventHookInstalled", "IsWinEventHookInstalled", 0, vec![Param::new("event", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1646, 0, "IsWindow", "IsWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1647, 0, "IsWindowEnabled", "IsWindowEnabled", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1648, 0, "IsWindowUnicode", "IsWindowUnicode", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1649, 0, "IsWindowVisible", "IsWindowVisible", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1650, 0, "IsWow64Message", "IsWow64Message", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1651, 0, "IsWow64Process", "IsWow64Process", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("Wow64Process", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1652, 0, "IsWow64Process2", "IsWow64Process2", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("pProcessMachine", tys[28].clone(), None), Param::new("pNativeMachine", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1653, 0, "IsZoomed", "IsZoomed", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1654, 0, "KillTimer", "KillTimer", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("uIDEvent", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1655, 0, "LCIDToLocaleName", "LCIDToLocaleName", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("lpName", tys[28].clone(), None), Param::new("cchName", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1656, 0, "LCMapStringA", "LCMapStringA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("dwMapFlags", tys[13].clone(), None), Param::new("lpSrcStr", tys[33].clone(), None), Param::new("cchSrc", tys[13].clone(), None), Param::new("lpDestStr", tys[33].clone(), None), Param::new("cchDest", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1657, 0, "LCMapStringEx", "LCMapStringEx", 0, vec![Param::new("lpLocaleName", tys[28].clone(), None), Param::new("dwMapFlags", tys[13].clone(), None), Param::new("lpSrcStr", tys[28].clone(), None), Param::new("cchSrc", tys[13].clone(), None), Param::new("lpDestStr", tys[28].clone(), None), Param::new("cchDest", tys[13].clone(), None), Param::new("lpVersionInformation", tys[26].clone(), None), Param::new("lpReserved", tys[37].clone(), None), Param::new("sortHandle", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1658, 0, "LPSAFEARRAY_UserFree", "LPSAFEARRAY_UserFree", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1659, 0, "LPSAFEARRAY_UserFree64", "LPSAFEARRAY_UserFree64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1660, 0, "LPSAFEARRAY_UserMarshal", "LPSAFEARRAY_UserMarshal", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1661, 0, "LPSAFEARRAY_UserMarshal64", "LPSAFEARRAY_UserMarshal64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1662, 0, "LPSAFEARRAY_UserSize", "LPSAFEARRAY_UserSize", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1663, 0, "LPSAFEARRAY_UserSize64", "LPSAFEARRAY_UserSize64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_26(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1664, 0, "LPSAFEARRAY_UserUnmarshal", "LPSAFEARRAY_UserUnmarshal", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1665, 0, "LPSAFEARRAY_UserUnmarshal64", "LPSAFEARRAY_UserUnmarshal64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1666, 0, "LPtoDP", "LPtoDP", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lppt", tys[26].clone(), None), Param::new("c", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1667, 0, "LZClose", "LZClose", 0, vec![Param::new("hFile", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1668, 0, "LZCopy", "LZCopy", 0, vec![Param::new("hfSource", tys[13].clone(), None), Param::new("hfDest", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1669, 0, "LZDone", "LZDone", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1670, 0, "LZInit", "LZInit", 0, vec![Param::new("hfSource", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1671, 0, "LZOpenFileA", "LZOpenFileA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("lpReOpenBuf", tys[26].clone(), None), Param::new("wStyle", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1672, 0, "LZRead", "LZRead", 0, vec![Param::new("hFile", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("cbRead", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1673, 0, "LZSeek", "LZSeek", 0, vec![Param::new("hFile", tys[13].clone(), None), Param::new("lOffset", tys[13].clone(), None), Param::new("iOrigin", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1674, 0, "LZStart", "LZStart", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1675, 0, "LeaveCriticalSection", "LeaveCriticalSection", 0, vec![Param::new("lpCriticalSection", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1676, 0, "LeaveCriticalSectionWhenCallbackReturns", "LeaveCriticalSectionWhenCallbackReturns", 0, vec![Param::new("pci", tys[26].clone(), None), Param::new("pcs", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1677, 0, "LineDDA", "LineDDA", 0, vec![Param::new("xStart", tys[13].clone(), None), Param::new("yStart", tys[13].clone(), None), Param::new("xEnd", tys[13].clone(), None), Param::new("yEnd", tys[13].clone(), None), Param::new("lpProc", tys[26].clone(), None), Param::new("data", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1678, 0, "LineTo", "LineTo", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1679, 0, "LoadAcceleratorsA", "LoadAcceleratorsA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpTableName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1680, 0, "LoadBitmapA", "LoadBitmapA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpBitmapName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1681, 0, "LoadCursorA", "LoadCursorA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpCursorName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1682, 0, "LoadCursorFromFileA", "LoadCursorFromFileA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1683, 0, "LoadEnclaveData", "LoadEnclaveData", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpAddress", tys[37].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nSize", tys[14].clone(), None), Param::new("flProtect", tys[13].clone(), None), Param::new("lpPageInformation", tys[37].clone(), None), Param::new("dwInfoLength", tys[13].clone(), None), Param::new("lpNumberOfBytesWritten", tys[36].clone(), None), Param::new("lpEnclaveError", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1684, 0, "LoadIconA", "LoadIconA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpIconName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1685, 0, "LoadImageA", "LoadImageA", 0, vec![Param::new("hInst", tys[26].clone(), None), Param::new("name", tys[33].clone(), None), Param::new("type", tys[13].clone(), None), Param::new("cx", tys[13].clone(), None), Param::new("cy", tys[13].clone(), None), Param::new("fuLoad", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1686, 0, "LoadKeyboardLayoutA", "LoadKeyboardLayoutA", 0, vec![Param::new("pwszKLID", tys[33].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1687, 0, "LoadLibraryA", "LoadLibraryA", 0, vec![Param::new("lpLibFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1688, 0, "LoadLibraryExA", "LoadLibraryExA", 0, vec![Param::new("lpLibFileName", tys[33].clone(), None), Param::new("hFile", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1689, 0, "LoadMenuA", "LoadMenuA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("lpMenuName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1690, 0, "LoadMenuIndirectA", "LoadMenuIndirectA", 0, vec![Param::new("lpMenuTemplate", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1691, 0, "LoadModule", "LoadModule", 0, vec![Param::new("lpModuleName", tys[33].clone(), None), Param::new("lpParameterBlock", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1692, 0, "LoadPackagedLibrary", "LoadPackagedLibrary", 0, vec![Param::new("lpwLibFileName", tys[28].clone(), None), Param::new("Reserved", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1693, 0, "LoadResource", "LoadResource", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("hResInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1694, 0, "LoadStringA", "LoadStringA", 0, vec![Param::new("hInstance", tys[26].clone(), None), Param::new("uID", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("cchBufferMax", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1695, 0, "LocalAlloc", "LocalAlloc", 0, vec![Param::new("uFlags", tys[13].clone(), None), Param::new("uBytes", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1696, 0, "LocalCompact", "LocalCompact", 0, vec![Param::new("uMinFree", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1697, 0, "LocalFileTimeToFileTime", "LocalFileTimeToFileTime", 0, vec![Param::new("lpLocalFileTime", tys[26].clone(), None), Param::new("lpFileTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1698, 0, "LocalFlags", "LocalFlags", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1699, 0, "LocalFree", "LocalFree", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1700, 0, "LocalHandle", "LocalHandle", 0, vec![Param::new("pMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1701, 0, "LocalLock", "LocalLock", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1702, 0, "LocalReAlloc", "LocalReAlloc", 0, vec![Param::new("hMem", tys[37].clone(), None), Param::new("uBytes", tys[14].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1703, 0, "LocalShrink", "LocalShrink", 0, vec![Param::new("hMem", tys[37].clone(), None), Param::new("cbNewSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1704, 0, "LocalSize", "LocalSize", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1705, 0, "LocalUnlock", "LocalUnlock", 0, vec![Param::new("hMem", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1706, 0, "LocaleNameToLCID", "LocaleNameToLCID", 0, vec![Param::new("lpName", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1707, 0, "LocateXStateFeature", "LocateXStateFeature", 0, vec![Param::new("Context", tys[26].clone(), None), Param::new("FeatureId", tys[13].clone(), None), Param::new("Length", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1708, 0, "LockFile", "LockFile", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("dwFileOffsetLow", tys[13].clone(), None), Param::new("dwFileOffsetHigh", tys[13].clone(), None), Param::new("nNumberOfBytesToLockLow", tys[13].clone(), None), Param::new("nNumberOfBytesToLockHigh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1709, 0, "LockFileEx", "LockFileEx", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwReserved", tys[13].clone(), None), Param::new("nNumberOfBytesToLockLow", tys[13].clone(), None), Param::new("nNumberOfBytesToLockHigh", tys[13].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1710, 0, "LockResource", "LockResource", 0, vec![Param::new("hResData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1711, 0, "LockServiceDatabase", "LockServiceDatabase", 0, vec![Param::new("hSCManager", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1712, 0, "LockSetForegroundWindow", "LockSetForegroundWindow", 0, vec![Param::new("uLockCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1713, 0, "LockWindowUpdate", "LockWindowUpdate", 0, vec![Param::new("hWndLock", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1714, 0, "LogicalToPhysicalPoint", "LogicalToPhysicalPoint", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpPoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1715, 0, "LogicalToPhysicalPointForPerMonitorDPI", "LogicalToPhysicalPointForPerMonitorDPI", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpPoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1716, 0, "LogonUserA", "LogonUserA", 0, vec![Param::new("lpszUsername", tys[33].clone(), None), Param::new("lpszDomain", tys[33].clone(), None), Param::new("lpszPassword", tys[33].clone(), None), Param::new("dwLogonType", tys[13].clone(), None), Param::new("dwLogonProvider", tys[13].clone(), None), Param::new("phToken", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1717, 0, "LogonUserExA", "LogonUserExA", 0, vec![Param::new("lpszUsername", tys[33].clone(), None), Param::new("lpszDomain", tys[33].clone(), None), Param::new("lpszPassword", tys[33].clone(), None), Param::new("dwLogonType", tys[13].clone(), None), Param::new("dwLogonProvider", tys[13].clone(), None), Param::new("phToken", tys[32].clone(), None), Param::new("ppLogonSid", tys[38].clone(), None), Param::new("ppProfileBuffer", tys[38].clone(), None), Param::new("pdwProfileLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1718, 0, "LookupAccountNameA", "LookupAccountNameA", 0, vec![Param::new("lpSystemName", tys[33].clone(), None), Param::new("lpAccountName", tys[33].clone(), None), Param::new("Sid", tys[37].clone(), None), Param::new("cbSid", tys[39].clone(), None), Param::new("ReferencedDomainName", tys[33].clone(), None), Param::new("cchReferencedDomainName", tys[39].clone(), None), Param::new("peUse", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1719, 0, "LookupAccountSidA", "LookupAccountSidA", 0, vec![Param::new("lpSystemName", tys[33].clone(), None), Param::new("Sid", tys[37].clone(), None), Param::new("Name", tys[33].clone(), None), Param::new("cchName", tys[39].clone(), None), Param::new("ReferencedDomainName", tys[33].clone(), None), Param::new("cchReferencedDomainName", tys[39].clone(), None), Param::new("peUse", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1720, 0, "LookupIconIdFromDirectory", "LookupIconIdFromDirectory", 0, vec![Param::new("presbits", tys[33].clone(), None), Param::new("fIcon", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1721, 0, "LookupIconIdFromDirectoryEx", "LookupIconIdFromDirectoryEx", 0, vec![Param::new("presbits", tys[33].clone(), None), Param::new("fIcon", tys[13].clone(), None), Param::new("cxDesired", tys[13].clone(), None), Param::new("cyDesired", tys[13].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1722, 0, "LookupPrivilegeDisplayNameA", "LookupPrivilegeDisplayNameA", 0, vec![Param::new("lpSystemName", tys[33].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("lpDisplayName", tys[33].clone(), None), Param::new("cchDisplayName", tys[39].clone(), None), Param::new("lpLanguageId", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1723, 0, "LookupPrivilegeNameA", "LookupPrivilegeNameA", 0, vec![Param::new("lpSystemName", tys[33].clone(), None), Param::new("lpLuid", tys[26].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("cchName", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1724, 0, "LookupPrivilegeValueA", "LookupPrivilegeValueA", 0, vec![Param::new("lpSystemName", tys[33].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("lpLuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1725, 0, "MakeAbsoluteSD", "MakeAbsoluteSD", 0, vec![Param::new("pSelfRelativeSecurityDescriptor", tys[37].clone(), None), Param::new("pAbsoluteSecurityDescriptor", tys[37].clone(), None), Param::new("lpdwAbsoluteSecurityDescriptorSize", tys[39].clone(), None), Param::new("pDacl", tys[26].clone(), None), Param::new("lpdwDaclSize", tys[39].clone(), None), Param::new("pSacl", tys[26].clone(), None), Param::new("lpdwSaclSize", tys[39].clone(), None), Param::new("pOwner", tys[37].clone(), None), Param::new("lpdwOwnerSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1726, 0, "MakeSelfRelativeSD", "MakeSelfRelativeSD", 0, vec![Param::new("pAbsoluteSecurityDescriptor", tys[37].clone(), None), Param::new("pSelfRelativeSecurityDescriptor", tys[37].clone(), None), Param::new("lpdwBufferLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1727, 0, "MapDialogRect", "MapDialogRect", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("lpRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_27(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1728, 0, "MapGenericMask", "MapGenericMask", 0, vec![Param::new("AccessMask", tys[39].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1729, 0, "MapUserPhysicalPages", "MapUserPhysicalPages", 0, vec![Param::new("VirtualAddress", tys[37].clone(), None), Param::new("NumberOfPages", tys[14].clone(), None), Param::new("PageArray", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1730, 0, "MapUserPhysicalPagesScatter", "MapUserPhysicalPagesScatter", 0, vec![Param::new("VirtualAddresses", tys[38].clone(), None), Param::new("NumberOfPages", tys[14].clone(), None), Param::new("PageArray", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1731, 0, "MapViewOfFile", "MapViewOfFile", 0, vec![Param::new("hFileMappingObject", tys[47].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("dwFileOffsetHigh", tys[13].clone(), None), Param::new("dwFileOffsetLow", tys[13].clone(), None), Param::new("dwNumberOfBytesToMap", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1732, 0, "MapViewOfFileEx", "MapViewOfFileEx", 0, vec![Param::new("hFileMappingObject", tys[47].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("dwFileOffsetHigh", tys[13].clone(), None), Param::new("dwFileOffsetLow", tys[13].clone(), None), Param::new("dwNumberOfBytesToMap", tys[14].clone(), None), Param::new("lpBaseAddress", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1733, 0, "MapViewOfFileExNuma", "MapViewOfFileExNuma", 0, vec![Param::new("hFileMappingObject", tys[47].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("dwFileOffsetHigh", tys[13].clone(), None), Param::new("dwFileOffsetLow", tys[13].clone(), None), Param::new("dwNumberOfBytesToMap", tys[14].clone(), None), Param::new("lpBaseAddress", tys[37].clone(), None), Param::new("nndPreferred", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1734, 0, "MapViewOfFileFromApp", "MapViewOfFileFromApp", 0, vec![Param::new("hFileMappingObject", tys[47].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("FileOffset", tys[14].clone(), None), Param::new("NumberOfBytesToMap", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1735, 0, "MapVirtualKeyA", "MapVirtualKeyA", 0, vec![Param::new("uCode", tys[13].clone(), None), Param::new("uMapType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1736, 0, "MapVirtualKeyExA", "MapVirtualKeyExA", 0, vec![Param::new("uCode", tys[13].clone(), None), Param::new("uMapType", tys[13].clone(), None), Param::new("dwhkl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1737, 0, "MapWindowPoints", "MapWindowPoints", 0, vec![Param::new("hWndFrom", tys[26].clone(), None), Param::new("hWndTo", tys[26].clone(), None), Param::new("lpPoints", tys[26].clone(), None), Param::new("cPoints", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1738, 0, "MaskBlt", "MaskBlt", 0, vec![Param::new("hdcDest", tys[26].clone(), None), Param::new("xDest", tys[13].clone(), None), Param::new("yDest", tys[13].clone(), None), Param::new("width", tys[13].clone(), None), Param::new("height", tys[13].clone(), None), Param::new("hdcSrc", tys[26].clone(), None), Param::new("xSrc", tys[13].clone(), None), Param::new("ySrc", tys[13].clone(), None), Param::new("hbmMask", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1739, 0, "MenuItemFromPoint", "MenuItemFromPoint", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hMenu", tys[26].clone(), None), Param::new("ptScreen", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1740, 0, "MessageBeep", "MessageBeep", 0, vec![Param::new("uType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1741, 0, "MessageBoxA", "MessageBoxA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpText", tys[33].clone(), None), Param::new("lpCaption", tys[33].clone(), None), Param::new("uType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1742, 0, "MessageBoxExA", "MessageBoxExA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpText", tys[33].clone(), None), Param::new("lpCaption", tys[33].clone(), None), Param::new("uType", tys[13].clone(), None), Param::new("wLanguageId", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1743, 0, "MessageBoxIndirectA", "MessageBoxIndirectA", 0, vec![Param::new("lpmbp", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1744, 0, "ModifyMenuA", "ModifyMenuA", 0, vec![Param::new("hMnu", tys[26].clone(), None), Param::new("uPosition", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), Param::new("uIDNewItem", tys[14].clone(), None), Param::new("lpNewItem", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1745, 0, "ModifyWorldTransform", "ModifyWorldTransform", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpxf", tys[26].clone(), None), Param::new("mode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1746, 0, "MonitorFromPoint", "MonitorFromPoint", 0, vec![Param::new("pt", tys[16].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1747, 0, "MonitorFromRect", "MonitorFromRect", 0, vec![Param::new("lprc", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1748, 0, "MonitorFromWindow", "MonitorFromWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1749, 0, "MoveFileA", "MoveFileA", 0, vec![Param::new("lpExistingFileName", tys[33].clone(), None), Param::new("lpNewFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1750, 0, "MoveFileExA", "MoveFileExA", 0, vec![Param::new("lpExistingFileName", tys[33].clone(), None), Param::new("lpNewFileName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1751, 0, "MoveFileTransactedA", "MoveFileTransactedA", 0, vec![Param::new("lpExistingFileName", tys[33].clone(), None), Param::new("lpNewFileName", tys[33].clone(), None), Param::new("lpProgressRoutine", tys[26].clone(), None), Param::new("lpData", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1752, 0, "MoveFileWithProgressA", "MoveFileWithProgressA", 0, vec![Param::new("lpExistingFileName", tys[33].clone(), None), Param::new("lpNewFileName", tys[33].clone(), None), Param::new("lpProgressRoutine", tys[26].clone(), None), Param::new("lpData", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1753, 0, "MoveToEx", "MoveToEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1754, 0, "MoveWindow", "MoveWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("X", tys[13].clone(), None), Param::new("Y", tys[13].clone(), None), Param::new("nWidth", tys[13].clone(), None), Param::new("nHeight", tys[13].clone(), None), Param::new("bRepaint", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1755, 0, "MsgWaitForMultipleObjects", "MsgWaitForMultipleObjects", 0, vec![Param::new("nCount", tys[13].clone(), None), Param::new("pHandles", tys[38].clone(), None), Param::new("fWaitAll", tys[13].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), Param::new("dwWakeMask", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1756, 0, "MsgWaitForMultipleObjectsEx", "MsgWaitForMultipleObjectsEx", 0, vec![Param::new("nCount", tys[13].clone(), None), Param::new("pHandles", tys[38].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), Param::new("dwWakeMask", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1757, 0, "MulDiv", "MulDiv", 0, vec![Param::new("nNumber", tys[13].clone(), None), Param::new("nNumerator", tys[13].clone(), None), Param::new("nDenominator", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1758, 0, "MultiByteToWideChar", "MultiByteToWideChar", 0, vec![Param::new("CodePage", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpMultiByteStr", tys[33].clone(), None), Param::new("cbMultiByte", tys[13].clone(), None), Param::new("lpWideCharStr", tys[28].clone(), None), Param::new("cchWideChar", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1759, 0, "MultinetGetConnectionPerformanceA", "MultinetGetConnectionPerformanceA", 0, vec![Param::new("lpNetResource", tys[26].clone(), None), Param::new("lpNetConnectInfoStruct", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1760, 0, "NCryptCreateClaim", "NCryptCreateClaim", 0, vec![Param::new("hSubjectKey", tys[14].clone(), None), Param::new("hAuthorityKey", tys[14].clone(), None), Param::new("dwClaimType", tys[13].clone(), None), Param::new("pParameterList", tys[26].clone(), None), Param::new("pbClaimBlob", tys[33].clone(), None), Param::new("cbClaimBlob", tys[13].clone(), None), Param::new("pcbResult", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1761, 0, "NCryptCreatePersistedKey", "NCryptCreatePersistedKey", 0, vec![Param::new("hProvider", tys[14].clone(), None), Param::new("phKey", tys[36].clone(), None), Param::new("pszAlgId", tys[28].clone(), None), Param::new("pszKeyName", tys[28].clone(), None), Param::new("dwLegacyKeySpec", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1762, 0, "NCryptDecrypt", "NCryptDecrypt", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("pbInput", tys[33].clone(), None), Param::new("cbInput", tys[13].clone(), None), Param::new("pPaddingInfo", tys[37].clone(), None), Param::new("pbOutput", tys[33].clone(), None), Param::new("cbOutput", tys[13].clone(), None), Param::new("pcbResult", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1763, 0, "NCryptDeleteKey", "NCryptDeleteKey", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1764, 0, "NCryptDeriveKey", "NCryptDeriveKey", 0, vec![Param::new("hSharedSecret", tys[14].clone(), None), Param::new("pwszKDF", tys[28].clone(), None), Param::new("pParameterList", tys[26].clone(), None), Param::new("pbDerivedKey", tys[33].clone(), None), Param::new("cbDerivedKey", tys[13].clone(), None), Param::new("pcbResult", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1765, 0, "NCryptEncrypt", "NCryptEncrypt", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("pbInput", tys[33].clone(), None), Param::new("cbInput", tys[13].clone(), None), Param::new("pPaddingInfo", tys[37].clone(), None), Param::new("pbOutput", tys[33].clone(), None), Param::new("cbOutput", tys[13].clone(), None), Param::new("pcbResult", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1766, 0, "NCryptEnumAlgorithms", "NCryptEnumAlgorithms", 0, vec![Param::new("hProvider", tys[14].clone(), None), Param::new("dwAlgOperations", tys[13].clone(), None), Param::new("pdwAlgCount", tys[39].clone(), None), Param::new("ppAlgList", tys[27].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1767, 0, "NCryptEnumKeys", "NCryptEnumKeys", 0, vec![Param::new("hProvider", tys[14].clone(), None), Param::new("pszScope", tys[28].clone(), None), Param::new("ppKeyName", tys[27].clone(), None), Param::new("ppEnumState", tys[38].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1768, 0, "NCryptEnumStorageProviders", "NCryptEnumStorageProviders", 0, vec![Param::new("pdwProviderCount", tys[39].clone(), None), Param::new("ppProviderList", tys[27].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1769, 0, "NCryptExportKey", "NCryptExportKey", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("hExportKey", tys[14].clone(), None), Param::new("pszBlobType", tys[28].clone(), None), Param::new("pParameterList", tys[26].clone(), None), Param::new("pbOutput", tys[33].clone(), None), Param::new("cbOutput", tys[13].clone(), None), Param::new("pcbResult", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1770, 0, "NCryptFinalizeKey", "NCryptFinalizeKey", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1771, 0, "NCryptFreeBuffer", "NCryptFreeBuffer", 0, vec![Param::new("pvInput", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1772, 0, "NCryptFreeObject", "NCryptFreeObject", 0, vec![Param::new("hObject", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1773, 0, "NCryptGetProperty", "NCryptGetProperty", 0, vec![Param::new("hObject", tys[14].clone(), None), Param::new("pszProperty", tys[28].clone(), None), Param::new("pbOutput", tys[33].clone(), None), Param::new("cbOutput", tys[13].clone(), None), Param::new("pcbResult", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1774, 0, "NCryptImportKey", "NCryptImportKey", 0, vec![Param::new("hProvider", tys[14].clone(), None), Param::new("hImportKey", tys[14].clone(), None), Param::new("pszBlobType", tys[28].clone(), None), Param::new("pParameterList", tys[26].clone(), None), Param::new("phKey", tys[36].clone(), None), Param::new("pbData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1775, 0, "NCryptIsAlgSupported", "NCryptIsAlgSupported", 0, vec![Param::new("hProvider", tys[14].clone(), None), Param::new("pszAlgId", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1776, 0, "NCryptIsKeyHandle", "NCryptIsKeyHandle", 0, vec![Param::new("hKey", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1777, 0, "NCryptKeyDerivation", "NCryptKeyDerivation", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("pParameterList", tys[26].clone(), None), Param::new("pbDerivedKey", tys[33].clone(), None), Param::new("cbDerivedKey", tys[13].clone(), None), Param::new("pcbResult", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1778, 0, "NCryptNotifyChangeKey", "NCryptNotifyChangeKey", 0, vec![Param::new("hProvider", tys[14].clone(), None), Param::new("phEvent", tys[32].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1779, 0, "NCryptOpenKey", "NCryptOpenKey", 0, vec![Param::new("hProvider", tys[14].clone(), None), Param::new("phKey", tys[36].clone(), None), Param::new("pszKeyName", tys[28].clone(), None), Param::new("dwLegacyKeySpec", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1780, 0, "NCryptOpenStorageProvider", "NCryptOpenStorageProvider", 0, vec![Param::new("phProvider", tys[36].clone(), None), Param::new("pszProviderName", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1781, 0, "NCryptSecretAgreement", "NCryptSecretAgreement", 0, vec![Param::new("hPrivKey", tys[14].clone(), None), Param::new("hPubKey", tys[14].clone(), None), Param::new("phAgreedSecret", tys[36].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1782, 0, "NCryptSetProperty", "NCryptSetProperty", 0, vec![Param::new("hObject", tys[14].clone(), None), Param::new("pszProperty", tys[28].clone(), None), Param::new("pbInput", tys[33].clone(), None), Param::new("cbInput", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1783, 0, "NCryptSignHash", "NCryptSignHash", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("pPaddingInfo", tys[37].clone(), None), Param::new("pbHashValue", tys[33].clone(), None), Param::new("cbHashValue", tys[13].clone(), None), Param::new("pbSignature", tys[33].clone(), None), Param::new("cbSignature", tys[13].clone(), None), Param::new("pcbResult", tys[39].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1784, 0, "NCryptTranslateHandle", "NCryptTranslateHandle", 0, vec![Param::new("phProvider", tys[36].clone(), None), Param::new("phKey", tys[36].clone(), None), Param::new("hLegacyProv", tys[14].clone(), None), Param::new("hLegacyKey", tys[14].clone(), None), Param::new("dwLegacyKeySpec", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1785, 0, "NCryptVerifyClaim", "NCryptVerifyClaim", 0, vec![Param::new("hSubjectKey", tys[14].clone(), None), Param::new("hAuthorityKey", tys[14].clone(), None), Param::new("dwClaimType", tys[13].clone(), None), Param::new("pParameterList", tys[26].clone(), None), Param::new("pbClaimBlob", tys[33].clone(), None), Param::new("cbClaimBlob", tys[13].clone(), None), Param::new("pOutput", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1786, 0, "NCryptVerifySignature", "NCryptVerifySignature", 0, vec![Param::new("hKey", tys[14].clone(), None), Param::new("pPaddingInfo", tys[37].clone(), None), Param::new("pbHashValue", tys[33].clone(), None), Param::new("cbHashValue", tys[13].clone(), None), Param::new("pbSignature", tys[33].clone(), None), Param::new("cbSignature", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1787, 0, "NeedCurrentDirectoryForExePathA", "NeedCurrentDirectoryForExePathA", 0, vec![Param::new("ExeName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1788, 0, "NormalizeString", "NormalizeString", 0, vec![Param::new("NormForm", tys[13].clone(), None), Param::new("lpSrcString", tys[28].clone(), None), Param::new("cwSrcLength", tys[13].clone(), None), Param::new("lpDstString", tys[28].clone(), None), Param::new("cwDstLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1789, 0, "NotifyBootConfigStatus", "NotifyBootConfigStatus", 0, vec![Param::new("BootAcceptable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1790, 0, "NotifyChangeEventLog", "NotifyChangeEventLog", 0, vec![Param::new("hEventLog", tys[47].clone(), None), Param::new("hEvent", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1791, 0, "NotifyServiceStatusChangeA", "NotifyServiceStatusChangeA", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwNotifyMask", tys[13].clone(), None), Param::new("pNotifyBuffer", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_28(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1792, 0, "NotifyUILanguageChange", "NotifyUILanguageChange", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pcwstrNewLanguage", tys[28].clone(), None), Param::new("pcwstrPreviousLanguage", tys[28].clone(), None), Param::new("dwReserved", tys[13].clone(), None), Param::new("pdwStatusRtrn", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1793, 0, "NotifyWinEvent", "NotifyWinEvent", 0, vec![Param::new("event", tys[13].clone(), None), Param::new("hwnd", tys[26].clone(), None), Param::new("idObject", tys[13].clone(), None), Param::new("idChild", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1794, 0, "ObjectCloseAuditAlarmA", "ObjectCloseAuditAlarmA", 0, vec![Param::new("SubsystemName", tys[33].clone(), None), Param::new("HandleId", tys[37].clone(), None), Param::new("GenerateOnClose", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1795, 0, "ObjectDeleteAuditAlarmA", "ObjectDeleteAuditAlarmA", 0, vec![Param::new("SubsystemName", tys[33].clone(), None), Param::new("HandleId", tys[37].clone(), None), Param::new("GenerateOnClose", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1796, 0, "ObjectOpenAuditAlarmA", "ObjectOpenAuditAlarmA", 0, vec![Param::new("SubsystemName", tys[33].clone(), None), Param::new("HandleId", tys[37].clone(), None), Param::new("ObjectTypeName", tys[33].clone(), None), Param::new("ObjectName", tys[33].clone(), None), Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("ClientToken", tys[47].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("GrantedAccess", tys[13].clone(), None), Param::new("Privileges", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1797, 0, "ObjectPrivilegeAuditAlarmA", "ObjectPrivilegeAuditAlarmA", 0, vec![Param::new("SubsystemName", tys[33].clone(), None), Param::new("HandleId", tys[37].clone(), None), Param::new("ClientToken", tys[47].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("Privileges", tys[26].clone(), None), Param::new("AccessGranted", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1798, 0, "OemKeyScan", "OemKeyScan", 0, vec![Param::new("wOemChar", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1799, 0, "OemToCharA", "OemToCharA", 0, vec![Param::new("pSrc", tys[33].clone(), None), Param::new("pDst", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1800, 0, "OemToCharBuffA", "OemToCharBuffA", 0, vec![Param::new("lpszSrc", tys[33].clone(), None), Param::new("lpszDst", tys[33].clone(), None), Param::new("cchDstLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1801, 0, "OfferVirtualMemory", "OfferVirtualMemory", 0, vec![Param::new("VirtualAddress", tys[37].clone(), None), Param::new("Size", tys[14].clone(), None), Param::new("Priority", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1802, 0, "OffsetClipRgn", "OffsetClipRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1803, 0, "OffsetRect", "OffsetRect", 0, vec![Param::new("lprc", tys[26].clone(), None), Param::new("dx", tys[13].clone(), None), Param::new("dy", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1804, 0, "OffsetRgn", "OffsetRgn", 0, vec![Param::new("hrgn", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1805, 0, "OffsetViewportOrgEx", "OffsetViewportOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1806, 0, "OffsetWindowOrgEx", "OffsetWindowOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1807, 0, "OpenBackupEventLogA", "OpenBackupEventLogA", 0, vec![Param::new("lpUNCServerName", tys[33].clone(), None), Param::new("lpFileName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1808, 0, "OpenClipboard", "OpenClipboard", 0, vec![Param::new("hWndNewOwner", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1809, 0, "OpenDesktopA", "OpenDesktopA", 0, vec![Param::new("lpszDesktop", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("fInherit", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1810, 0, "OpenDriver", "OpenDriver", 0, vec![Param::new("szDriverName", tys[28].clone(), None), Param::new("szSectionName", tys[28].clone(), None), Param::new("lParam2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1811, 0, "OpenEncryptedFileRawA", "OpenEncryptedFileRawA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("ulFlags", tys[13].clone(), None), Param::new("pvContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1812, 0, "OpenEventA", "OpenEventA", 0, vec![Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("bInheritHandle", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1813, 0, "OpenEventLogA", "OpenEventLogA", 0, vec![Param::new("lpUNCServerName", tys[33].clone(), None), Param::new("lpSourceName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1814, 0, "OpenFile", "OpenFile", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("lpReOpenBuff", tys[26].clone(), None), Param::new("uStyle", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1815, 0, "OpenFileById", "OpenFileById", 0, vec![Param::new("hVolumeHint", tys[47].clone(), None), Param::new("lpFileId", tys[26].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("dwShareMode", tys[13].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), Param::new("dwFlagsAndAttributes", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1816, 0, "OpenFileMappingA", "OpenFileMappingA", 0, vec![Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("bInheritHandle", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1817, 0, "OpenFileMappingFromApp", "OpenFileMappingFromApp", 0, vec![Param::new("DesiredAccess", tys[13].clone(), None), Param::new("InheritHandle", tys[13].clone(), None), Param::new("Name", tys[28].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1818, 0, "OpenIcon", "OpenIcon", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1819, 0, "OpenInputDesktop", "OpenInputDesktop", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("fInherit", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1820, 0, "OpenJobObjectA", "OpenJobObjectA", 0, vec![Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("bInheritHandle", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1821, 0, "OpenMutexA", "OpenMutexA", 0, vec![Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("bInheritHandle", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1822, 0, "OpenPrinter2A", "OpenPrinter2A", 0, vec![Param::new("pPrinterName", tys[33].clone(), None), Param::new("phPrinter", tys[32].clone(), None), Param::new("pDefault", tys[26].clone(), None), Param::new("pOptions", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1823, 0, "OpenPrinterA", "OpenPrinterA", 0, vec![Param::new("pPrinterName", tys[33].clone(), None), Param::new("phPrinter", tys[32].clone(), None), Param::new("pDefault", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1824, 0, "OpenPrivateNamespaceA", "OpenPrivateNamespaceA", 0, vec![Param::new("lpBoundaryDescriptor", tys[37].clone(), None), Param::new("lpAliasPrefix", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1825, 0, "OpenProcess", "OpenProcess", 0, vec![Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("bInheritHandle", tys[13].clone(), None), Param::new("dwProcessId", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1826, 0, "OpenProcessToken", "OpenProcessToken", 0, vec![Param::new("ProcessHandle", tys[47].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("TokenHandle", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1827, 0, "OpenSCManagerA", "OpenSCManagerA", 0, vec![Param::new("lpMachineName", tys[33].clone(), None), Param::new("lpDatabaseName", tys[33].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1828, 0, "OpenSemaphoreA", "OpenSemaphoreA", 0, vec![Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("bInheritHandle", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1829, 0, "OpenServiceA", "OpenServiceA", 0, vec![Param::new("hSCManager", tys[26].clone(), None), Param::new("lpServiceName", tys[33].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1830, 0, "OpenThread", "OpenThread", 0, vec![Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("bInheritHandle", tys[13].clone(), None), Param::new("dwThreadId", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1831, 0, "OpenThreadToken", "OpenThreadToken", 0, vec![Param::new("ThreadHandle", tys[47].clone(), None), Param::new("DesiredAccess", tys[13].clone(), None), Param::new("OpenAsSelf", tys[13].clone(), None), Param::new("TokenHandle", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1832, 0, "OpenWaitableTimerA", "OpenWaitableTimerA", 0, vec![Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("bInheritHandle", tys[13].clone(), None), Param::new("lpTimerName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1833, 0, "OpenWindowStationA", "OpenWindowStationA", 0, vec![Param::new("lpszWinSta", tys[33].clone(), None), Param::new("fInherit", tys[13].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1834, 0, "OperationEnd", "OperationEnd", 0, vec![Param::new("OperationEndParams", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1835, 0, "OperationStart", "OperationStart", 0, vec![Param::new("OperationStartParams", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1836, 0, "OutputDebugStringA", "OutputDebugStringA", 0, vec![Param::new("lpOutputString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1837, 0, "PFXExportCertStore", "PFXExportCertStore", 0, vec![Param::new("hStore", tys[37].clone(), None), Param::new("pPFX", tys[26].clone(), None), Param::new("szPassword", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1838, 0, "PFXExportCertStoreEx", "PFXExportCertStoreEx", 0, vec![Param::new("hStore", tys[37].clone(), None), Param::new("pPFX", tys[26].clone(), None), Param::new("szPassword", tys[28].clone(), None), Param::new("pvPara", tys[37].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1839, 0, "PFXImportCertStore", "PFXImportCertStore", 0, vec![Param::new("pPFX", tys[26].clone(), None), Param::new("szPassword", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1840, 0, "PFXIsPFXBlob", "PFXIsPFXBlob", 0, vec![Param::new("pPFX", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1841, 0, "PFXVerifyPassword", "PFXVerifyPassword", 0, vec![Param::new("pPFX", tys[26].clone(), None), Param::new("szPassword", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1842, 0, "PackDDElParam", "PackDDElParam", 0, vec![Param::new("msg", tys[13].clone(), None), Param::new("uiLo", tys[14].clone(), None), Param::new("uiHi", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1843, 0, "PackTouchHitTestingProximityEvaluation", "PackTouchHitTestingProximityEvaluation", 0, vec![Param::new("pHitTestingInput", tys[26].clone(), None), Param::new("pProximityEval", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1844, 0, "PageSetupDlgA", "PageSetupDlgA", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1845, 0, "PaintDesktop", "PaintDesktop", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1846, 0, "PaintRgn", "PaintRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hrgn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1847, 0, "PatBlt", "PatBlt", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("w", tys[13].clone(), None), Param::new("h", tys[13].clone(), None), Param::new("rop", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1848, 0, "PathToRegion", "PathToRegion", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1849, 0, "PeekConsoleInputA", "PeekConsoleInputA", 0, vec![Param::new("hConsoleInput", tys[47].clone(), None), Param::new("lpBuffer", tys[26].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("lpNumberOfEventsRead", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1850, 0, "PeekMessageA", "PeekMessageA", 0, vec![Param::new("lpMsg", tys[26].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("wMsgFilterMin", tys[13].clone(), None), Param::new("wMsgFilterMax", tys[13].clone(), None), Param::new("wRemoveMsg", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1851, 0, "PeekNamedPipe", "PeekNamedPipe", 0, vec![Param::new("hNamedPipe", tys[47].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nBufferSize", tys[13].clone(), None), Param::new("lpBytesRead", tys[39].clone(), None), Param::new("lpTotalBytesAvail", tys[39].clone(), None), Param::new("lpBytesLeftThisMessage", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1852, 0, "PhysicalToLogicalPoint", "PhysicalToLogicalPoint", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpPoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1853, 0, "PhysicalToLogicalPointForPerMonitorDPI", "PhysicalToLogicalPointForPerMonitorDPI", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpPoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1854, 0, "Pie", "Pie", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("left", tys[13].clone(), None), Param::new("top", tys[13].clone(), None), Param::new("right", tys[13].clone(), None), Param::new("bottom", tys[13].clone(), None), Param::new("xr1", tys[13].clone(), None), Param::new("yr1", tys[13].clone(), None), Param::new("xr2", tys[13].clone(), None), Param::new("yr2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1855, 0, "PlayEnhMetaFile", "PlayEnhMetaFile", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hmf", tys[26].clone(), None), Param::new("lprect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_29(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1856, 0, "PlayEnhMetaFileRecord", "PlayEnhMetaFileRecord", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("pht", tys[26].clone(), None), Param::new("pmr", tys[26].clone(), None), Param::new("cht", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1857, 0, "PlayMetaFile", "PlayMetaFile", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hmf", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1858, 0, "PlayMetaFileRecord", "PlayMetaFileRecord", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpHandleTable", tys[26].clone(), None), Param::new("lpMR", tys[26].clone(), None), Param::new("noObjs", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1859, 0, "PlaySoundA", "PlaySoundA", 0, vec![Param::new("pszSound", tys[33].clone(), None), Param::new("hmod", tys[26].clone(), None), Param::new("fdwSound", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1860, 0, "PlgBlt", "PlgBlt", 0, vec![Param::new("hdcDest", tys[26].clone(), None), Param::new("lpPoint", tys[26].clone(), None), Param::new("hdcSrc", tys[26].clone(), None), Param::new("xSrc", tys[13].clone(), None), Param::new("ySrc", tys[13].clone(), None), Param::new("width", tys[13].clone(), None), Param::new("height", tys[13].clone(), None), Param::new("hbmMask", tys[26].clone(), None), Param::new("xMask", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1861, 0, "PolyBezier", "PolyBezier", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("apt", tys[26].clone(), None), Param::new("cpt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1862, 0, "PolyBezierTo", "PolyBezierTo", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("apt", tys[26].clone(), None), Param::new("cpt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1863, 0, "PolyDraw", "PolyDraw", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("apt", tys[26].clone(), None), Param::new("aj", tys[33].clone(), None), Param::new("cpt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1864, 0, "PolyPolygon", "PolyPolygon", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("apt", tys[26].clone(), None), Param::new("asz", tys[39].clone(), None), Param::new("csz", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1865, 0, "PolyPolyline", "PolyPolyline", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("apt", tys[26].clone(), None), Param::new("asz", tys[39].clone(), None), Param::new("csz", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1866, 0, "PolyTextOutA", "PolyTextOutA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("ppt", tys[26].clone(), None), Param::new("nstrings", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1867, 0, "Polygon", "Polygon", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("apt", tys[26].clone(), None), Param::new("cpt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1868, 0, "Polyline", "Polyline", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("apt", tys[26].clone(), None), Param::new("cpt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1869, 0, "PolylineTo", "PolylineTo", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("apt", tys[26].clone(), None), Param::new("cpt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1870, 0, "PostMessageA", "PostMessageA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1871, 0, "PostQueuedCompletionStatus", "PostQueuedCompletionStatus", 0, vec![Param::new("CompletionPort", tys[47].clone(), None), Param::new("dwNumberOfBytesTransferred", tys[13].clone(), None), Param::new("dwCompletionKey", tys[14].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1872, 0, "PostQuitMessage", "PostQuitMessage", 0, vec![Param::new("nExitCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1873, 0, "PostThreadMessageA", "PostThreadMessageA", 0, vec![Param::new("idThread", tys[13].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1874, 0, "PowerClearRequest", "PowerClearRequest", 0, vec![Param::new("PowerRequest", tys[47].clone(), None), Param::new("RequestType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1875, 0, "PowerCreateRequest", "PowerCreateRequest", 0, vec![Param::new("Context", tys[26].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1876, 0, "PowerSetRequest", "PowerSetRequest", 0, vec![Param::new("PowerRequest", tys[47].clone(), None), Param::new("RequestType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1877, 0, "PrefetchVirtualMemory", "PrefetchVirtualMemory", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("NumberOfEntries", tys[14].clone(), None), Param::new("VirtualAddresses", tys[26].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1878, 0, "PrepareTape", "PrepareTape", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("dwOperation", tys[13].clone(), None), Param::new("bImmediate", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1879, 0, "PrintDlgA", "PrintDlgA", 0, vec![Param::new("pPD", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1880, 0, "PrintDlgExA", "PrintDlgExA", 0, vec![Param::new("pPD", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1881, 0, "PrintWindow", "PrintWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("hdcBlt", tys[26].clone(), None), Param::new("nFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1882, 0, "PrinterMessageBoxA", "PrinterMessageBoxA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("Error", tys[13].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("pText", tys[33].clone(), None), Param::new("pCaption", tys[33].clone(), None), Param::new("dwType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1883, 0, "PrinterProperties", "PrinterProperties", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hPrinter", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1884, 0, "PrivateExtractIconsA", "PrivateExtractIconsA", 0, vec![Param::new("szFileName", tys[33].clone(), None), Param::new("nIconIndex", tys[13].clone(), None), Param::new("cxIcon", tys[13].clone(), None), Param::new("cyIcon", tys[13].clone(), None), Param::new("phicon", tys[27].clone(), None), Param::new("piconid", tys[39].clone(), None), Param::new("nIcons", tys[13].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1885, 0, "PrivilegeCheck", "PrivilegeCheck", 0, vec![Param::new("ClientToken", tys[47].clone(), None), Param::new("RequiredPrivileges", tys[26].clone(), None), Param::new("pfResult", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1886, 0, "PrivilegedServiceAuditAlarmA", "PrivilegedServiceAuditAlarmA", 0, vec![Param::new("SubsystemName", tys[33].clone(), None), Param::new("ServiceName", tys[33].clone(), None), Param::new("ClientToken", tys[47].clone(), None), Param::new("Privileges", tys[26].clone(), None), Param::new("AccessGranted", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1887, 0, "ProcessIdToSessionId", "ProcessIdToSessionId", 0, vec![Param::new("dwProcessId", tys[13].clone(), None), Param::new("pSessionId", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1888, 0, "PropStgNameToFmtId", "PropStgNameToFmtId", 0, vec![Param::new("oszName", tys[28].clone(), None), Param::new("pfmtid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1889, 0, "PtInRect", "PtInRect", 0, vec![Param::new("lprc", tys[26].clone(), None), Param::new("pt", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1890, 0, "PtInRegion", "PtInRegion", 0, vec![Param::new("hrgn", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1891, 0, "PtVisible", "PtVisible", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1892, 0, "PulseEvent", "PulseEvent", 0, vec![Param::new("hEvent", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1893, 0, "PurgeComm", "PurgeComm", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1894, 0, "QueryDepthSList", "QueryDepthSList", 0, vec![Param::new("ListHead", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1895, 0, "QueryDisplayConfig", "QueryDisplayConfig", 0, vec![Param::new("flags", tys[13].clone(), None), Param::new("numPathArrayElements", tys[39].clone(), None), Param::new("pathArray", tys[26].clone(), None), Param::new("numModeInfoArrayElements", tys[39].clone(), None), Param::new("modeInfoArray", tys[26].clone(), None), Param::new("currentTopologyId", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1896, 0, "QueryDosDeviceA", "QueryDosDeviceA", 0, vec![Param::new("lpDeviceName", tys[33].clone(), None), Param::new("lpTargetPath", tys[33].clone(), None), Param::new("ucchMax", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1897, 0, "QueryFullProcessImageNameA", "QueryFullProcessImageNameA", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpExeName", tys[33].clone(), None), Param::new("lpdwSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1898, 0, "QueryIdleProcessorCycleTime", "QueryIdleProcessorCycleTime", 0, vec![Param::new("BufferLength", tys[39].clone(), None), Param::new("ProcessorIdleCycleTime", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1899, 0, "QueryIdleProcessorCycleTimeEx", "QueryIdleProcessorCycleTimeEx", 0, vec![Param::new("Group", tys[11].clone(), None), Param::new("BufferLength", tys[39].clone(), None), Param::new("ProcessorIdleCycleTime", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1900, 0, "QueryInformationJobObject", "QueryInformationJobObject", 0, vec![Param::new("hJob", tys[47].clone(), None), Param::new("JobObjectInformationClass", tys[13].clone(), None), Param::new("lpJobObjectInformation", tys[37].clone(), None), Param::new("cbJobObjectInformationLength", tys[13].clone(), None), Param::new("lpReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1901, 0, "QueryInterruptTime", "QueryInterruptTime", 0, vec![Param::new("lpInterruptTime", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1902, 0, "QueryInterruptTimePrecise", "QueryInterruptTimePrecise", 0, vec![Param::new("lpInterruptTimePrecise", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1903, 0, "QueryIoRateControlInformationJobObject", "QueryIoRateControlInformationJobObject", 0, vec![Param::new("hJob", tys[47].clone(), None), Param::new("VolumeName", tys[28].clone(), None), Param::new("InfoBlocks", tys[27].clone(), None), Param::new("InfoBlockCount", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1904, 0, "QueryMemoryResourceNotification", "QueryMemoryResourceNotification", 0, vec![Param::new("ResourceNotificationHandle", tys[47].clone(), None), Param::new("ResourceState", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1905, 0, "QueryPerformanceCounter", "QueryPerformanceCounter", 0, vec![Param::new("lpPerformanceCount", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1906, 0, "QueryPerformanceFrequency", "QueryPerformanceFrequency", 0, vec![Param::new("lpFrequency", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1907, 0, "QueryProcessAffinityUpdateMode", "QueryProcessAffinityUpdateMode", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpdwFlags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1908, 0, "QueryProcessCycleTime", "QueryProcessCycleTime", 0, vec![Param::new("ProcessHandle", tys[47].clone(), None), Param::new("CycleTime", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1909, 0, "QueryProtectedPolicy", "QueryProtectedPolicy", 0, vec![Param::new("PolicyGuid", tys[26].clone(), None), Param::new("PolicyValue", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1910, 0, "QueryRecoveryAgentsOnEncryptedFile", "QueryRecoveryAgentsOnEncryptedFile", 0, vec![Param::new("lpFileName", tys[28].clone(), None), Param::new("pRecoveryAgents", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1911, 0, "QuerySecurityAccessMask", "QuerySecurityAccessMask", 0, vec![Param::new("SecurityInformation", tys[13].clone(), None), Param::new("DesiredAccess", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1912, 0, "QueryServiceConfig2A", "QueryServiceConfig2A", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwInfoLevel", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("cbBufSize", tys[13].clone(), None), Param::new("pcbBytesNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1913, 0, "QueryServiceConfigA", "QueryServiceConfigA", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("lpServiceConfig", tys[26].clone(), None), Param::new("cbBufSize", tys[13].clone(), None), Param::new("pcbBytesNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1914, 0, "QueryServiceDynamicInformation", "QueryServiceDynamicInformation", 0, vec![Param::new("hServiceStatus", tys[26].clone(), None), Param::new("dwInfoLevel", tys[13].clone(), None), Param::new("ppDynamicInfo", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1915, 0, "QueryServiceLockStatusA", "QueryServiceLockStatusA", 0, vec![Param::new("hSCManager", tys[26].clone(), None), Param::new("lpLockStatus", tys[26].clone(), None), Param::new("cbBufSize", tys[13].clone(), None), Param::new("pcbBytesNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1916, 0, "QueryServiceObjectSecurity", "QueryServiceObjectSecurity", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwSecurityInformation", tys[13].clone(), None), Param::new("lpSecurityDescriptor", tys[37].clone(), None), Param::new("cbBufSize", tys[13].clone(), None), Param::new("pcbBytesNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1917, 0, "QueryServiceStatus", "QueryServiceStatus", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("lpServiceStatus", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1918, 0, "QueryServiceStatusEx", "QueryServiceStatusEx", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("InfoLevel", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("cbBufSize", tys[13].clone(), None), Param::new("pcbBytesNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1919, 0, "QueryThreadCycleTime", "QueryThreadCycleTime", 0, vec![Param::new("ThreadHandle", tys[47].clone(), None), Param::new("CycleTime", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_30(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1920, 0, "QueryThreadProfiling", "QueryThreadProfiling", 0, vec![Param::new("ThreadHandle", tys[47].clone(), None), Param::new("Enabled", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1921, 0, "QueryThreadpoolStackInformation", "QueryThreadpoolStackInformation", 0, vec![Param::new("ptpp", tys[26].clone(), None), Param::new("ptpsi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1922, 0, "QueryUmsThreadInformation", "QueryUmsThreadInformation", 0, vec![Param::new("UmsThread", tys[37].clone(), None), Param::new("UmsThreadInfoClass", tys[13].clone(), None), Param::new("UmsThreadInformation", tys[37].clone(), None), Param::new("UmsThreadInformationLength", tys[13].clone(), None), Param::new("ReturnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1923, 0, "QueryUnbiasedInterruptTime", "QueryUnbiasedInterruptTime", 0, vec![Param::new("UnbiasedTime", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1924, 0, "QueryUnbiasedInterruptTimePrecise", "QueryUnbiasedInterruptTimePrecise", 0, vec![Param::new("lpUnbiasedInterruptTimePrecise", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1925, 0, "QueryUsersOnEncryptedFile", "QueryUsersOnEncryptedFile", 0, vec![Param::new("lpFileName", tys[28].clone(), None), Param::new("pUsers", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1926, 0, "QueryVirtualMemoryInformation", "QueryVirtualMemoryInformation", 0, vec![Param::new("Process", tys[47].clone(), None), Param::new("VirtualAddress", tys[37].clone(), None), Param::new("MemoryInformationClass", tys[13].clone(), None), Param::new("MemoryInformation", tys[37].clone(), None), Param::new("MemoryInformationSize", tys[14].clone(), None), Param::new("ReturnSize", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1927, 0, "QueueUserAPC", "QueueUserAPC", 0, vec![Param::new("pfnAPC", tys[26].clone(), None), Param::new("hThread", tys[47].clone(), None), Param::new("dwData", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1928, 0, "QueueUserWorkItem", "QueueUserWorkItem", 0, vec![Param::new("Function", tys[26].clone(), None), Param::new("Context", tys[37].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1929, 0, "RaiseException", "RaiseException", 0, vec![Param::new("dwExceptionCode", tys[13].clone(), None), Param::new("dwExceptionFlags", tys[13].clone(), None), Param::new("nNumberOfArguments", tys[13].clone(), None), Param::new("lpArguments", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1930, 0, "RaiseFailFastException", "RaiseFailFastException", 0, vec![Param::new("pExceptionRecord", tys[26].clone(), None), Param::new("pContextRecord", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1931, 0, "ReOpenFile", "ReOpenFile", 0, vec![Param::new("hOriginalFile", tys[47].clone(), None), Param::new("dwDesiredAccess", tys[13].clone(), None), Param::new("dwShareMode", tys[13].clone(), None), Param::new("dwFlagsAndAttributes", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1932, 0, "ReadClassStg", "ReadClassStg", 0, vec![Param::new("pStg", tys[26].clone(), None), Param::new("pclsid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1933, 0, "ReadClassStm", "ReadClassStm", 0, vec![Param::new("pStm", tys[26].clone(), None), Param::new("pclsid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1934, 0, "ReadConsoleA", "ReadConsoleA", 0, vec![Param::new("hConsoleInput", tys[47].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nNumberOfCharsToRead", tys[13].clone(), None), Param::new("lpNumberOfCharsRead", tys[39].clone(), None), Param::new("pInputControl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1935, 0, "ReadConsoleInputA", "ReadConsoleInputA", 0, vec![Param::new("hConsoleInput", tys[47].clone(), None), Param::new("lpBuffer", tys[26].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("lpNumberOfEventsRead", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1936, 0, "ReadConsoleOutputA", "ReadConsoleOutputA", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpBuffer", tys[26].clone(), None), Param::new("dwBufferSize", tys[16].clone(), None), Param::new("dwBufferCoord", tys[16].clone(), None), Param::new("lpReadRegion", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1937, 0, "ReadConsoleOutputAttribute", "ReadConsoleOutputAttribute", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpAttribute", tys[28].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("dwReadCoord", tys[16].clone(), None), Param::new("lpNumberOfAttrsRead", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1938, 0, "ReadConsoleOutputCharacterA", "ReadConsoleOutputCharacterA", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpCharacter", tys[33].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("dwReadCoord", tys[16].clone(), None), Param::new("lpNumberOfCharsRead", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1939, 0, "ReadEncryptedFileRaw", "ReadEncryptedFileRaw", 0, vec![Param::new("pfExportCallback", tys[26].clone(), None), Param::new("pvCallbackContext", tys[37].clone(), None), Param::new("pvContext", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1940, 0, "ReadEventLogA", "ReadEventLogA", 0, vec![Param::new("hEventLog", tys[47].clone(), None), Param::new("dwReadFlags", tys[13].clone(), None), Param::new("dwRecordOffset", tys[13].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nNumberOfBytesToRead", tys[13].clone(), None), Param::new("pnBytesRead", tys[39].clone(), None), Param::new("pnMinNumberOfBytesNeeded", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1941, 0, "ReadFile", "ReadFile", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nNumberOfBytesToRead", tys[13].clone(), None), Param::new("lpNumberOfBytesRead", tys[39].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1942, 0, "ReadFileEx", "ReadFileEx", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nNumberOfBytesToRead", tys[13].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), Param::new("lpCompletionRoutine", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1943, 0, "ReadFileScatter", "ReadFileScatter", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("aSegmentArray", tys[26].clone(), None), Param::new("nNumberOfBytesToRead", tys[13].clone(), None), Param::new("lpReserved", tys[39].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1944, 0, "ReadPrinter", "ReadPrinter", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pBuf", tys[37].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pNoBytesRead", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1945, 0, "ReadProcessMemory", "ReadProcessMemory", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpBaseAddress", tys[37].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nSize", tys[14].clone(), None), Param::new("lpNumberOfBytesRead", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1946, 0, "ReadThreadProfilingData", "ReadThreadProfilingData", 0, vec![Param::new("PerformanceDataHandle", tys[47].clone(), None), Param::new("Flags", tys[13].clone(), None), Param::new("PerformanceData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1947, 0, "RealChildWindowFromPoint", "RealChildWindowFromPoint", 0, vec![Param::new("hwndParent", tys[26].clone(), None), Param::new("ptParentClientCoords", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1948, 0, "RealGetWindowClassA", "RealGetWindowClassA", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("ptszClassName", tys[33].clone(), None), Param::new("cchClassNameMax", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1949, 0, "RealizePalette", "RealizePalette", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1950, 0, "ReclaimVirtualMemory", "ReclaimVirtualMemory", 0, vec![Param::new("VirtualAddress", tys[37].clone(), None), Param::new("Size", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1951, 0, "RectInRegion", "RectInRegion", 0, vec![Param::new("hrgn", tys[26].clone(), None), Param::new("lprect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1952, 0, "RectVisible", "RectVisible", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lprect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1953, 0, "Rectangle", "Rectangle", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("left", tys[13].clone(), None), Param::new("top", tys[13].clone(), None), Param::new("right", tys[13].clone(), None), Param::new("bottom", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1954, 0, "RedrawWindow", "RedrawWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lprcUpdate", tys[26].clone(), None), Param::new("hrgnUpdate", tys[26].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1955, 0, "RegCloseKey", "RegCloseKey", 0, vec![Param::new("hKey", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1956, 0, "RegConnectRegistryA", "RegConnectRegistryA", 0, vec![Param::new("lpMachineName", tys[33].clone(), None), Param::new("hKey", tys[26].clone(), None), Param::new("phkResult", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1957, 0, "RegConnectRegistryExA", "RegConnectRegistryExA", 0, vec![Param::new("lpMachineName", tys[33].clone(), None), Param::new("hKey", tys[26].clone(), None), Param::new("Flags", tys[13].clone(), None), Param::new("phkResult", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1958, 0, "RegCopyTreeA", "RegCopyTreeA", 0, vec![Param::new("hKeySrc", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("hKeyDest", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1959, 0, "RegCreateKeyA", "RegCreateKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("phkResult", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1960, 0, "RegCreateKeyExA", "RegCreateKeyExA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("Reserved", tys[13].clone(), None), Param::new("lpClass", tys[33].clone(), None), Param::new("dwOptions", tys[13].clone(), None), Param::new("samDesired", tys[13].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), Param::new("phkResult", tys[27].clone(), None), Param::new("lpdwDisposition", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1961, 0, "RegCreateKeyTransactedA", "RegCreateKeyTransactedA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("Reserved", tys[13].clone(), None), Param::new("lpClass", tys[33].clone(), None), Param::new("dwOptions", tys[13].clone(), None), Param::new("samDesired", tys[13].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), Param::new("phkResult", tys[27].clone(), None), Param::new("lpdwDisposition", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1962, 0, "RegDeleteKeyA", "RegDeleteKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1963, 0, "RegDeleteKeyExA", "RegDeleteKeyExA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("samDesired", tys[13].clone(), None), Param::new("Reserved", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1964, 0, "RegDeleteKeyTransactedA", "RegDeleteKeyTransactedA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("samDesired", tys[13].clone(), None), Param::new("Reserved", tys[13].clone(), None), Param::new("hTransaction", tys[47].clone(), None), Param::new("pExtendedParameter", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1965, 0, "RegDeleteKeyValueA", "RegDeleteKeyValueA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("lpValueName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1966, 0, "RegDeleteTreeA", "RegDeleteTreeA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1967, 0, "RegDeleteValueA", "RegDeleteValueA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpValueName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1968, 0, "RegDisablePredefinedCache", "RegDisablePredefinedCache", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1969, 0, "RegDisablePredefinedCacheEx", "RegDisablePredefinedCacheEx", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1970, 0, "RegDisableReflectionKey", "RegDisableReflectionKey", 0, vec![Param::new("hBase", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1971, 0, "RegEnableReflectionKey", "RegEnableReflectionKey", 0, vec![Param::new("hBase", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1972, 0, "RegEnumKeyA", "RegEnumKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("cchName", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1973, 0, "RegEnumKeyExA", "RegEnumKeyExA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("lpcchName", tys[39].clone(), None), Param::new("lpReserved", tys[39].clone(), None), Param::new("lpClass", tys[33].clone(), None), Param::new("lpcchClass", tys[39].clone(), None), Param::new("lpftLastWriteTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1974, 0, "RegEnumValueA", "RegEnumValueA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("dwIndex", tys[13].clone(), None), Param::new("lpValueName", tys[33].clone(), None), Param::new("lpcchValueName", tys[39].clone(), None), Param::new("lpReserved", tys[39].clone(), None), Param::new("lpType", tys[39].clone(), None), Param::new("lpData", tys[33].clone(), None), Param::new("lpcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1975, 0, "RegFlushKey", "RegFlushKey", 0, vec![Param::new("hKey", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1976, 0, "RegGetKeySecurity", "RegGetKeySecurity", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("SecurityInformation", tys[13].clone(), None), Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("lpcbSecurityDescriptor", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1977, 0, "RegGetValueA", "RegGetValueA", 0, vec![Param::new("hkey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("lpValue", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pdwType", tys[39].clone(), None), Param::new("pvData", tys[37].clone(), None), Param::new("pcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1978, 0, "RegLoadAppKeyA", "RegLoadAppKeyA", 0, vec![Param::new("lpFile", tys[33].clone(), None), Param::new("phkResult", tys[27].clone(), None), Param::new("samDesired", tys[13].clone(), None), Param::new("dwOptions", tys[13].clone(), None), Param::new("Reserved", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1979, 0, "RegLoadKeyA", "RegLoadKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("lpFile", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1980, 0, "RegLoadMUIStringA", "RegLoadMUIStringA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("pszValue", tys[33].clone(), None), Param::new("pszOutBuf", tys[33].clone(), None), Param::new("cbOutBuf", tys[13].clone(), None), Param::new("pcbData", tys[39].clone(), None), Param::new("Flags", tys[13].clone(), None), Param::new("pszDirectory", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1981, 0, "RegNotifyChangeKeyValue", "RegNotifyChangeKeyValue", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("bWatchSubtree", tys[13].clone(), None), Param::new("dwNotifyFilter", tys[13].clone(), None), Param::new("hEvent", tys[47].clone(), None), Param::new("fAsynchronous", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1982, 0, "RegOpenCurrentUser", "RegOpenCurrentUser", 0, vec![Param::new("samDesired", tys[13].clone(), None), Param::new("phkResult", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1983, 0, "RegOpenKeyA", "RegOpenKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("phkResult", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_31(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(1984, 0, "RegOpenKeyExA", "RegOpenKeyExA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("ulOptions", tys[13].clone(), None), Param::new("samDesired", tys[13].clone(), None), Param::new("phkResult", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1985, 0, "RegOpenKeyTransactedA", "RegOpenKeyTransactedA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("ulOptions", tys[13].clone(), None), Param::new("samDesired", tys[13].clone(), None), Param::new("phkResult", tys[27].clone(), None), Param::new("hTransaction", tys[47].clone(), None), Param::new("pExtendedParemeter", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1986, 0, "RegOpenUserClassesRoot", "RegOpenUserClassesRoot", 0, vec![Param::new("hToken", tys[47].clone(), None), Param::new("dwOptions", tys[13].clone(), None), Param::new("samDesired", tys[13].clone(), None), Param::new("phkResult", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1987, 0, "RegOverridePredefKey", "RegOverridePredefKey", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("hNewHKey", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1988, 0, "RegQueryInfoKeyA", "RegQueryInfoKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpClass", tys[33].clone(), None), Param::new("lpcchClass", tys[39].clone(), None), Param::new("lpReserved", tys[39].clone(), None), Param::new("lpcSubKeys", tys[39].clone(), None), Param::new("lpcbMaxSubKeyLen", tys[39].clone(), None), Param::new("lpcbMaxClassLen", tys[39].clone(), None), Param::new("lpcValues", tys[39].clone(), None), Param::new("lpcbMaxValueNameLen", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1989, 0, "RegQueryMultipleValuesA", "RegQueryMultipleValuesA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("val_list", tys[26].clone(), None), Param::new("num_vals", tys[13].clone(), None), Param::new("lpValueBuf", tys[33].clone(), None), Param::new("ldwTotsize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1990, 0, "RegQueryReflectionKey", "RegQueryReflectionKey", 0, vec![Param::new("hBase", tys[26].clone(), None), Param::new("bIsReflectionDisabled", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1991, 0, "RegQueryValueA", "RegQueryValueA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("lpData", tys[33].clone(), None), Param::new("lpcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1992, 0, "RegQueryValueExA", "RegQueryValueExA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpValueName", tys[33].clone(), None), Param::new("lpReserved", tys[39].clone(), None), Param::new("lpType", tys[39].clone(), None), Param::new("lpData", tys[33].clone(), None), Param::new("lpcbData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1993, 0, "RegRenameKey", "RegRenameKey", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKeyName", tys[28].clone(), None), Param::new("lpNewKeyName", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1994, 0, "RegReplaceKeyA", "RegReplaceKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("lpNewFile", tys[33].clone(), None), Param::new("lpOldFile", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1995, 0, "RegRestoreKeyA", "RegRestoreKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpFile", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1996, 0, "RegSaveKeyA", "RegSaveKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpFile", tys[33].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1997, 0, "RegSaveKeyExA", "RegSaveKeyExA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpFile", tys[33].clone(), None), Param::new("lpSecurityAttributes", tys[26].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1998, 0, "RegSetKeySecurity", "RegSetKeySecurity", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("SecurityInformation", tys[13].clone(), None), Param::new("pSecurityDescriptor", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1999, 0, "RegSetKeyValueA", "RegSetKeyValueA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("lpValueName", tys[33].clone(), None), Param::new("dwType", tys[13].clone(), None), Param::new("lpData", tys[37].clone(), None), Param::new("cbData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2000, 0, "RegSetValueA", "RegSetValueA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), Param::new("dwType", tys[13].clone(), None), Param::new("lpData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2001, 0, "RegSetValueExA", "RegSetValueExA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpValueName", tys[33].clone(), None), Param::new("Reserved", tys[13].clone(), None), Param::new("dwType", tys[13].clone(), None), Param::new("lpData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2002, 0, "RegUnLoadKeyA", "RegUnLoadKeyA", 0, vec![Param::new("hKey", tys[26].clone(), None), Param::new("lpSubKey", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2003, 0, "RegisterApplicationRecoveryCallback", "RegisterApplicationRecoveryCallback", 0, vec![Param::new("pRecoveyCallback", tys[26].clone(), None), Param::new("pvParameter", tys[37].clone(), None), Param::new("dwPingInterval", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2004, 0, "RegisterApplicationRestart", "RegisterApplicationRestart", 0, vec![Param::new("pwzCommandline", tys[28].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2005, 0, "RegisterBadMemoryNotification", "RegisterBadMemoryNotification", 0, vec![Param::new("Callback", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2006, 0, "RegisterClassA", "RegisterClassA", 0, vec![Param::new("lpWndClass", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2007, 0, "RegisterClassExA", "RegisterClassExA", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2008, 0, "RegisterClipboardFormatA", "RegisterClipboardFormatA", 0, vec![Param::new("lpszFormat", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2009, 0, "RegisterDeviceNotificationA", "RegisterDeviceNotificationA", 0, vec![Param::new("hRecipient", tys[47].clone(), None), Param::new("NotificationFilter", tys[37].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2010, 0, "RegisterEventSourceA", "RegisterEventSourceA", 0, vec![Param::new("lpUNCServerName", tys[33].clone(), None), Param::new("lpSourceName", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2011, 0, "RegisterHotKey", "RegisterHotKey", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("id", tys[13].clone(), None), Param::new("fsModifiers", tys[13].clone(), None), Param::new("vk", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2012, 0, "RegisterPointerDeviceNotifications", "RegisterPointerDeviceNotifications", 0, vec![Param::new("window", tys[26].clone(), None), Param::new("notifyRange", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2013, 0, "RegisterPointerInputTarget", "RegisterPointerInputTarget", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pointerType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2014, 0, "RegisterPointerInputTargetEx", "RegisterPointerInputTargetEx", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pointerType", tys[13].clone(), None), Param::new("fObserve", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2015, 0, "RegisterPowerSettingNotification", "RegisterPowerSettingNotification", 0, vec![Param::new("hRecipient", tys[47].clone(), None), Param::new("PowerSettingGuid", tys[26].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2016, 0, "RegisterRawInputDevices", "RegisterRawInputDevices", 0, vec![Param::new("pRawInputDevices", tys[26].clone(), None), Param::new("uiNumDevices", tys[13].clone(), None), Param::new("cbSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2017, 0, "RegisterServiceCtrlHandlerA", "RegisterServiceCtrlHandlerA", 0, vec![Param::new("lpServiceName", tys[33].clone(), None), Param::new("lpHandlerProc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2018, 0, "RegisterServiceCtrlHandlerExA", "RegisterServiceCtrlHandlerExA", 0, vec![Param::new("lpServiceName", tys[33].clone(), None), Param::new("lpHandlerProc", tys[26].clone(), None), Param::new("lpContext", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2019, 0, "RegisterShellHookWindow", "RegisterShellHookWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2020, 0, "RegisterSuspendResumeNotification", "RegisterSuspendResumeNotification", 0, vec![Param::new("hRecipient", tys[47].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2021, 0, "RegisterTouchHitTestingWindow", "RegisterTouchHitTestingWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("value", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2022, 0, "RegisterTouchWindow", "RegisterTouchWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("ulFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2023, 0, "RegisterWaitForSingleObject", "RegisterWaitForSingleObject", 0, vec![Param::new("phNewWaitObject", tys[32].clone(), None), Param::new("hObject", tys[47].clone(), None), Param::new("Callback", tys[26].clone(), None), Param::new("Context", tys[37].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2024, 0, "RegisterWindowMessageA", "RegisterWindowMessageA", 0, vec![Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2025, 0, "ReleaseActCtx", "ReleaseActCtx", 0, vec![Param::new("hActCtx", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2026, 0, "ReleaseCapture", "ReleaseCapture", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2027, 0, "ReleaseDC", "ReleaseDC", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hDC", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2028, 0, "ReleaseMutex", "ReleaseMutex", 0, vec![Param::new("hMutex", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2029, 0, "ReleaseMutexWhenCallbackReturns", "ReleaseMutexWhenCallbackReturns", 0, vec![Param::new("pci", tys[26].clone(), None), Param::new("mut", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2030, 0, "ReleaseSRWLockExclusive", "ReleaseSRWLockExclusive", 0, vec![Param::new("SRWLock", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2031, 0, "ReleaseSRWLockShared", "ReleaseSRWLockShared", 0, vec![Param::new("SRWLock", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2032, 0, "ReleaseSemaphore", "ReleaseSemaphore", 0, vec![Param::new("hSemaphore", tys[47].clone(), None), Param::new("lReleaseCount", tys[13].clone(), None), Param::new("lpPreviousCount", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2033, 0, "ReleaseSemaphoreWhenCallbackReturns", "ReleaseSemaphoreWhenCallbackReturns", 0, vec![Param::new("pci", tys[26].clone(), None), Param::new("sem", tys[47].clone(), None), Param::new("crel", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2034, 0, "RemoveClipboardFormatListener", "RemoveClipboardFormatListener", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2035, 0, "RemoveDirectoryA", "RemoveDirectoryA", 0, vec![Param::new("lpPathName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2036, 0, "RemoveDirectoryTransactedA", "RemoveDirectoryTransactedA", 0, vec![Param::new("lpPathName", tys[33].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2037, 0, "RemoveDllDirectory", "RemoveDllDirectory", 0, vec![Param::new("Cookie", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2038, 0, "RemoveFontMemResourceEx", "RemoveFontMemResourceEx", 0, vec![Param::new("h", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2039, 0, "RemoveFontResourceA", "RemoveFontResourceA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2040, 0, "RemoveFontResourceExA", "RemoveFontResourceExA", 0, vec![Param::new("name", tys[33].clone(), None), Param::new("fl", tys[13].clone(), None), Param::new("pdv", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2041, 0, "RemoveMenu", "RemoveMenu", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uPosition", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2042, 0, "RemovePropA", "RemovePropA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2043, 0, "RemoveSecureMemoryCacheCallback", "RemoveSecureMemoryCacheCallback", 0, vec![Param::new("pfnCallBack", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2044, 0, "RemoveUsersFromEncryptedFile", "RemoveUsersFromEncryptedFile", 0, vec![Param::new("lpFileName", tys[28].clone(), None), Param::new("pHashes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2045, 0, "RemoveVectoredContinueHandler", "RemoveVectoredContinueHandler", 0, vec![Param::new("Handle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2046, 0, "RemoveVectoredExceptionHandler", "RemoveVectoredExceptionHandler", 0, vec![Param::new("Handle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2047, 0, "ReplaceFileA", "ReplaceFileA", 0, vec![Param::new("lpReplacedFileName", tys[33].clone(), None), Param::new("lpReplacementFileName", tys[33].clone(), None), Param::new("lpBackupFileName", tys[33].clone(), None), Param::new("dwReplaceFlags", tys[13].clone(), None), Param::new("lpExclude", tys[37].clone(), None), Param::new("lpReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_32(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2048, 0, "ReplacePartitionUnit", "ReplacePartitionUnit", 0, vec![Param::new("TargetPartition", tys[28].clone(), None), Param::new("SparePartition", tys[28].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2049, 0, "ReplaceTextA", "ReplaceTextA", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2050, 0, "ReplyMessage", "ReplyMessage", 0, vec![Param::new("lResult", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2051, 0, "ReportEventA", "ReportEventA", 0, vec![Param::new("hEventLog", tys[47].clone(), None), Param::new("wType", tys[11].clone(), None), Param::new("wCategory", tys[11].clone(), None), Param::new("dwEventID", tys[13].clone(), None), Param::new("lpUserSid", tys[37].clone(), None), Param::new("wNumStrings", tys[11].clone(), None), Param::new("dwDataSize", tys[13].clone(), None), Param::new("lpStrings", tys[34].clone(), None), Param::new("lpRawData", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2052, 0, "ReportJobProcessingProgress", "ReportJobProcessingProgress", 0, vec![Param::new("printerHandle", tys[47].clone(), None), Param::new("jobId", tys[13].clone(), None), Param::new("jobOperation", tys[13].clone(), None), Param::new("jobProgress", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2053, 0, "RequestDeviceWakeup", "RequestDeviceWakeup", 0, vec![Param::new("hDevice", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2054, 0, "RequestWakeupLatency", "RequestWakeupLatency", 0, vec![Param::new("latency", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2055, 0, "ResetDCA", "ResetDCA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpdm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2056, 0, "ResetEvent", "ResetEvent", 0, vec![Param::new("hEvent", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2057, 0, "ResetPrinterA", "ResetPrinterA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pDefault", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2058, 0, "ResetWriteWatch", "ResetWriteWatch", 0, vec![Param::new("lpBaseAddress", tys[37].clone(), None), Param::new("dwRegionSize", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2059, 0, "ResizePalette", "ResizePalette", 0, vec![Param::new("hpal", tys[26].clone(), None), Param::new("n", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2060, 0, "ResolveLocaleName", "ResolveLocaleName", 0, vec![Param::new("lpNameToResolve", tys[28].clone(), None), Param::new("lpLocaleName", tys[28].clone(), None), Param::new("cchLocaleName", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2061, 0, "RestoreDC", "RestoreDC", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("nSavedDC", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2062, 0, "ResumeThread", "ResumeThread", 0, vec![Param::new("hThread", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2063, 0, "ReuseDDElParam", "ReuseDDElParam", 0, vec![Param::new("lParam", tys[14].clone(), None), Param::new("msgIn", tys[13].clone(), None), Param::new("msgOut", tys[13].clone(), None), Param::new("uiLo", tys[14].clone(), None), Param::new("uiHi", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2064, 0, "RevertToSelf", "RevertToSelf", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2065, 0, "RoundRect", "RoundRect", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("left", tys[13].clone(), None), Param::new("top", tys[13].clone(), None), Param::new("right", tys[13].clone(), None), Param::new("bottom", tys[13].clone(), None), Param::new("width", tys[13].clone(), None), Param::new("height", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2066, 0, "RpcAsyncAbortCall", "RpcAsyncAbortCall", 0, vec![Param::new("pAsync", tys[26].clone(), None), Param::new("ExceptionCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2067, 0, "RpcAsyncCancelCall", "RpcAsyncCancelCall", 0, vec![Param::new("pAsync", tys[26].clone(), None), Param::new("fAbort", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2068, 0, "RpcAsyncCompleteCall", "RpcAsyncCompleteCall", 0, vec![Param::new("pAsync", tys[26].clone(), None), Param::new("Reply", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2069, 0, "RpcAsyncGetCallStatus", "RpcAsyncGetCallStatus", 0, vec![Param::new("pAsync", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2070, 0, "RpcAsyncInitializeHandle", "RpcAsyncInitializeHandle", 0, vec![Param::new("pAsync", tys[26].clone(), None), Param::new("Size", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2071, 0, "RpcAsyncRegisterInfo", "RpcAsyncRegisterInfo", 0, vec![Param::new("pAsync", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2072, 0, "RpcBindingBind", "RpcBindingBind", 0, vec![Param::new("pAsync", tys[26].clone(), None), Param::new("Binding", tys[37].clone(), None), Param::new("IfSpec", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2073, 0, "RpcBindingCopy", "RpcBindingCopy", 0, vec![Param::new("SourceBinding", tys[37].clone(), None), Param::new("DestinationBinding", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2074, 0, "RpcBindingCreateA", "RpcBindingCreateA", 0, vec![Param::new("Template", tys[26].clone(), None), Param::new("Security", tys[26].clone(), None), Param::new("Options", tys[26].clone(), None), Param::new("Binding", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2075, 0, "RpcBindingFree", "RpcBindingFree", 0, vec![Param::new("Binding", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2076, 0, "RpcBindingFromStringBindingA", "RpcBindingFromStringBindingA", 0, vec![Param::new("StringBinding", tys[33].clone(), None), Param::new("Binding", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2077, 0, "RpcBindingInqAuthClientA", "RpcBindingInqAuthClientA", 0, vec![Param::new("ClientBinding", tys[37].clone(), None), Param::new("Privs", tys[38].clone(), None), Param::new("ServerPrincName", tys[34].clone(), None), Param::new("AuthnLevel", tys[39].clone(), None), Param::new("AuthnSvc", tys[39].clone(), None), Param::new("AuthzSvc", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2078, 0, "RpcBindingInqAuthClientExA", "RpcBindingInqAuthClientExA", 0, vec![Param::new("ClientBinding", tys[37].clone(), None), Param::new("Privs", tys[38].clone(), None), Param::new("ServerPrincName", tys[34].clone(), None), Param::new("AuthnLevel", tys[39].clone(), None), Param::new("AuthnSvc", tys[39].clone(), None), Param::new("AuthzSvc", tys[39].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2079, 0, "RpcBindingInqAuthInfoA", "RpcBindingInqAuthInfoA", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("ServerPrincName", tys[34].clone(), None), Param::new("AuthnLevel", tys[39].clone(), None), Param::new("AuthnSvc", tys[39].clone(), None), Param::new("AuthIdentity", tys[38].clone(), None), Param::new("AuthzSvc", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2080, 0, "RpcBindingInqAuthInfoExA", "RpcBindingInqAuthInfoExA", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("ServerPrincName", tys[34].clone(), None), Param::new("AuthnLevel", tys[39].clone(), None), Param::new("AuthnSvc", tys[39].clone(), None), Param::new("AuthIdentity", tys[38].clone(), None), Param::new("AuthzSvc", tys[39].clone(), None), Param::new("RpcQosVersion", tys[13].clone(), None), Param::new("SecurityQOS", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2081, 0, "RpcBindingInqObject", "RpcBindingInqObject", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("ObjectUuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2082, 0, "RpcBindingInqOption", "RpcBindingInqOption", 0, vec![Param::new("hBinding", tys[37].clone(), None), Param::new("option", tys[13].clone(), None), Param::new("pOptionValue", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2083, 0, "RpcBindingReset", "RpcBindingReset", 0, vec![Param::new("Binding", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2084, 0, "RpcBindingServerFromClient", "RpcBindingServerFromClient", 0, vec![Param::new("ClientBinding", tys[37].clone(), None), Param::new("ServerBinding", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2085, 0, "RpcBindingSetAuthInfoA", "RpcBindingSetAuthInfoA", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("ServerPrincName", tys[33].clone(), None), Param::new("AuthnLevel", tys[13].clone(), None), Param::new("AuthnSvc", tys[13].clone(), None), Param::new("AuthIdentity", tys[37].clone(), None), Param::new("AuthzSvc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2086, 0, "RpcBindingSetAuthInfoExA", "RpcBindingSetAuthInfoExA", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("ServerPrincName", tys[33].clone(), None), Param::new("AuthnLevel", tys[13].clone(), None), Param::new("AuthnSvc", tys[13].clone(), None), Param::new("AuthIdentity", tys[37].clone(), None), Param::new("AuthzSvc", tys[13].clone(), None), Param::new("SecurityQos", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2087, 0, "RpcBindingSetObject", "RpcBindingSetObject", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("ObjectUuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2088, 0, "RpcBindingSetOption", "RpcBindingSetOption", 0, vec![Param::new("hBinding", tys[37].clone(), None), Param::new("option", tys[13].clone(), None), Param::new("optionValue", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2089, 0, "RpcBindingToStringBindingA", "RpcBindingToStringBindingA", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("StringBinding", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2090, 0, "RpcBindingUnbind", "RpcBindingUnbind", 0, vec![Param::new("Binding", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2091, 0, "RpcBindingVectorFree", "RpcBindingVectorFree", 0, vec![Param::new("BindingVector", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2092, 0, "RpcCancelThread", "RpcCancelThread", 0, vec![Param::new("Thread", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2093, 0, "RpcCancelThreadEx", "RpcCancelThreadEx", 0, vec![Param::new("Thread", tys[37].clone(), None), Param::new("Timeout", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2094, 0, "RpcEpRegisterA", "RpcEpRegisterA", 0, vec![Param::new("IfSpec", tys[37].clone(), None), Param::new("BindingVector", tys[26].clone(), None), Param::new("UuidVector", tys[26].clone(), None), Param::new("Annotation", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2095, 0, "RpcEpRegisterNoReplaceA", "RpcEpRegisterNoReplaceA", 0, vec![Param::new("IfSpec", tys[37].clone(), None), Param::new("BindingVector", tys[26].clone(), None), Param::new("UuidVector", tys[26].clone(), None), Param::new("Annotation", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2096, 0, "RpcEpResolveBinding", "RpcEpResolveBinding", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("IfSpec", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2097, 0, "RpcEpUnregister", "RpcEpUnregister", 0, vec![Param::new("IfSpec", tys[37].clone(), None), Param::new("BindingVector", tys[26].clone(), None), Param::new("UuidVector", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2098, 0, "RpcErrorAddRecord", "RpcErrorAddRecord", 0, vec![Param::new("ErrorInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2099, 0, "RpcErrorClearInformation", "RpcErrorClearInformation", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2100, 0, "RpcErrorEndEnumeration", "RpcErrorEndEnumeration", 0, vec![Param::new("EnumHandle", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2101, 0, "RpcErrorGetNextRecord", "RpcErrorGetNextRecord", 0, vec![Param::new("EnumHandle", tys[26].clone(), None), Param::new("CopyStrings", tys[13].clone(), None), Param::new("ErrorInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2102, 0, "RpcErrorGetNumberOfRecords", "RpcErrorGetNumberOfRecords", 0, vec![Param::new("EnumHandle", tys[26].clone(), None), Param::new("Records", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2103, 0, "RpcErrorLoadErrorInfo", "RpcErrorLoadErrorInfo", 0, vec![Param::new("ErrorBlob", tys[37].clone(), None), Param::new("BlobSize", tys[14].clone(), None), Param::new("EnumHandle", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2104, 0, "RpcErrorResetEnumeration", "RpcErrorResetEnumeration", 0, vec![Param::new("EnumHandle", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2105, 0, "RpcErrorSaveErrorInfo", "RpcErrorSaveErrorInfo", 0, vec![Param::new("EnumHandle", tys[26].clone(), None), Param::new("ErrorBlob", tys[38].clone(), None), Param::new("BlobSize", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2106, 0, "RpcErrorStartEnumeration", "RpcErrorStartEnumeration", 0, vec![Param::new("EnumHandle", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2107, 0, "RpcExceptionFilter", "RpcExceptionFilter", 0, vec![Param::new("ExceptionCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2108, 0, "RpcFreeAuthorizationContext", "RpcFreeAuthorizationContext", 0, vec![Param::new("pAuthzClientContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2109, 0, "RpcGetAuthorizationContextForClient", "RpcGetAuthorizationContextForClient", 0, vec![Param::new("ClientBinding", tys[37].clone(), None), Param::new("ImpersonateOnReturn", tys[13].clone(), None), Param::new("Reserved1", tys[37].clone(), None), Param::new("pExpirationTime", tys[26].clone(), None), Param::new("Reserved2", tys[16].clone(), None), Param::new("Reserved3", tys[13].clone(), None), Param::new("Reserved4", tys[37].clone(), None), Param::new("pAuthzClientContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2110, 0, "RpcIfIdVectorFree", "RpcIfIdVectorFree", 0, vec![Param::new("IfIdVector", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2111, 0, "RpcIfInqId", "RpcIfInqId", 0, vec![Param::new("RpcIfHandle", tys[37].clone(), None), Param::new("RpcIfId", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_33(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2112, 0, "RpcImpersonateClient", "RpcImpersonateClient", 0, vec![Param::new("BindingHandle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2113, 0, "RpcImpersonateClient2", "RpcImpersonateClient2", 0, vec![Param::new("BindingHandle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2114, 0, "RpcImpersonateClientContainer", "RpcImpersonateClientContainer", 0, vec![Param::new("BindingHandle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2115, 0, "RpcMgmtEnableIdleCleanup", "RpcMgmtEnableIdleCleanup", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2116, 0, "RpcMgmtEpEltInqBegin", "RpcMgmtEpEltInqBegin", 0, vec![Param::new("EpBinding", tys[37].clone(), None), Param::new("InquiryType", tys[13].clone(), None), Param::new("IfId", tys[26].clone(), None), Param::new("VersOption", tys[13].clone(), None), Param::new("ObjectUuid", tys[26].clone(), None), Param::new("InquiryContext", tys[30].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2117, 0, "RpcMgmtEpEltInqDone", "RpcMgmtEpEltInqDone", 0, vec![Param::new("InquiryContext", tys[30].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2118, 0, "RpcMgmtEpEltInqNextA", "RpcMgmtEpEltInqNextA", 0, vec![Param::new("InquiryContext", tys[38].clone(), None), Param::new("IfId", tys[26].clone(), None), Param::new("Binding", tys[38].clone(), None), Param::new("ObjectUuid", tys[26].clone(), None), Param::new("Annotation", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2119, 0, "RpcMgmtEpUnregister", "RpcMgmtEpUnregister", 0, vec![Param::new("EpBinding", tys[37].clone(), None), Param::new("IfId", tys[26].clone(), None), Param::new("Binding", tys[37].clone(), None), Param::new("ObjectUuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2120, 0, "RpcMgmtInqComTimeout", "RpcMgmtInqComTimeout", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("Timeout", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2121, 0, "RpcMgmtInqDefaultProtectLevel", "RpcMgmtInqDefaultProtectLevel", 0, vec![Param::new("AuthnSvc", tys[13].clone(), None), Param::new("AuthnLevel", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2122, 0, "RpcMgmtInqIfIds", "RpcMgmtInqIfIds", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("IfIdVector", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2123, 0, "RpcMgmtInqServerPrincNameA", "RpcMgmtInqServerPrincNameA", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("AuthnSvc", tys[13].clone(), None), Param::new("ServerPrincName", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2124, 0, "RpcMgmtInqStats", "RpcMgmtInqStats", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("Statistics", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2125, 0, "RpcMgmtIsServerListening", "RpcMgmtIsServerListening", 0, vec![Param::new("Binding", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2126, 0, "RpcMgmtSetAuthorizationFn", "RpcMgmtSetAuthorizationFn", 0, vec![Param::new("AuthorizationFn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2127, 0, "RpcMgmtSetCancelTimeout", "RpcMgmtSetCancelTimeout", 0, vec![Param::new("Timeout", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2128, 0, "RpcMgmtSetComTimeout", "RpcMgmtSetComTimeout", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("Timeout", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2129, 0, "RpcMgmtSetServerStackSize", "RpcMgmtSetServerStackSize", 0, vec![Param::new("ThreadStackSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2130, 0, "RpcMgmtStatsVectorFree", "RpcMgmtStatsVectorFree", 0, vec![Param::new("StatsVector", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2131, 0, "RpcMgmtStopServerListening", "RpcMgmtStopServerListening", 0, vec![Param::new("Binding", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2132, 0, "RpcMgmtWaitServerListen", "RpcMgmtWaitServerListen", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2133, 0, "RpcNetworkInqProtseqsA", "RpcNetworkInqProtseqsA", 0, vec![Param::new("ProtseqVector", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2134, 0, "RpcNetworkIsProtseqValidA", "RpcNetworkIsProtseqValidA", 0, vec![Param::new("Protseq", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2135, 0, "RpcNsBindingExportA", "RpcNsBindingExportA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("IfSpec", tys[37].clone(), None), Param::new("BindingVec", tys[26].clone(), None), Param::new("ObjectUuidVec", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2136, 0, "RpcNsBindingExportPnPA", "RpcNsBindingExportPnPA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("IfSpec", tys[37].clone(), None), Param::new("ObjectVector", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2137, 0, "RpcNsBindingImportBeginA", "RpcNsBindingImportBeginA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("IfSpec", tys[37].clone(), None), Param::new("ObjUuid", tys[26].clone(), None), Param::new("ImportContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2138, 0, "RpcNsBindingImportDone", "RpcNsBindingImportDone", 0, vec![Param::new("ImportContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2139, 0, "RpcNsBindingImportNext", "RpcNsBindingImportNext", 0, vec![Param::new("ImportContext", tys[37].clone(), None), Param::new("Binding", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2140, 0, "RpcNsBindingInqEntryNameA", "RpcNsBindingInqEntryNameA", 0, vec![Param::new("Binding", tys[37].clone(), None), Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2141, 0, "RpcNsBindingLookupBeginA", "RpcNsBindingLookupBeginA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("IfSpec", tys[37].clone(), None), Param::new("ObjUuid", tys[26].clone(), None), Param::new("BindingMaxCount", tys[13].clone(), None), Param::new("LookupContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2142, 0, "RpcNsBindingLookupDone", "RpcNsBindingLookupDone", 0, vec![Param::new("LookupContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2143, 0, "RpcNsBindingLookupNext", "RpcNsBindingLookupNext", 0, vec![Param::new("LookupContext", tys[37].clone(), None), Param::new("BindingVec", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2144, 0, "RpcNsBindingSelect", "RpcNsBindingSelect", 0, vec![Param::new("BindingVec", tys[26].clone(), None), Param::new("Binding", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2145, 0, "RpcNsBindingUnexportA", "RpcNsBindingUnexportA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("IfSpec", tys[37].clone(), None), Param::new("ObjectUuidVec", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2146, 0, "RpcNsBindingUnexportPnPA", "RpcNsBindingUnexportPnPA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("IfSpec", tys[37].clone(), None), Param::new("ObjectVector", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2147, 0, "RpcNsEntryExpandNameA", "RpcNsEntryExpandNameA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("ExpandedName", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2148, 0, "RpcNsEntryObjectInqBeginA", "RpcNsEntryObjectInqBeginA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("InquiryContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2149, 0, "RpcNsEntryObjectInqDone", "RpcNsEntryObjectInqDone", 0, vec![Param::new("InquiryContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2150, 0, "RpcNsEntryObjectInqNext", "RpcNsEntryObjectInqNext", 0, vec![Param::new("InquiryContext", tys[37].clone(), None), Param::new("ObjUuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2151, 0, "RpcNsGroupDeleteA", "RpcNsGroupDeleteA", 0, vec![Param::new("GroupNameSyntax", tys[13].clone(), None), Param::new("GroupName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2152, 0, "RpcNsGroupMbrAddA", "RpcNsGroupMbrAddA", 0, vec![Param::new("GroupNameSyntax", tys[13].clone(), None), Param::new("GroupName", tys[33].clone(), None), Param::new("MemberNameSyntax", tys[13].clone(), None), Param::new("MemberName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2153, 0, "RpcNsGroupMbrInqBeginA", "RpcNsGroupMbrInqBeginA", 0, vec![Param::new("GroupNameSyntax", tys[13].clone(), None), Param::new("GroupName", tys[33].clone(), None), Param::new("MemberNameSyntax", tys[13].clone(), None), Param::new("InquiryContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2154, 0, "RpcNsGroupMbrInqDone", "RpcNsGroupMbrInqDone", 0, vec![Param::new("InquiryContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2155, 0, "RpcNsGroupMbrInqNextA", "RpcNsGroupMbrInqNextA", 0, vec![Param::new("InquiryContext", tys[37].clone(), None), Param::new("MemberName", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2156, 0, "RpcNsGroupMbrRemoveA", "RpcNsGroupMbrRemoveA", 0, vec![Param::new("GroupNameSyntax", tys[13].clone(), None), Param::new("GroupName", tys[33].clone(), None), Param::new("MemberNameSyntax", tys[13].clone(), None), Param::new("MemberName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2157, 0, "RpcNsMgmtBindingUnexportA", "RpcNsMgmtBindingUnexportA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("IfId", tys[26].clone(), None), Param::new("VersOption", tys[13].clone(), None), Param::new("ObjectUuidVec", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2158, 0, "RpcNsMgmtEntryCreateA", "RpcNsMgmtEntryCreateA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2159, 0, "RpcNsMgmtEntryDeleteA", "RpcNsMgmtEntryDeleteA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2160, 0, "RpcNsMgmtEntryInqIfIdsA", "RpcNsMgmtEntryInqIfIdsA", 0, vec![Param::new("EntryNameSyntax", tys[13].clone(), None), Param::new("EntryName", tys[33].clone(), None), Param::new("IfIdVec", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2161, 0, "RpcNsMgmtHandleSetExpAge", "RpcNsMgmtHandleSetExpAge", 0, vec![Param::new("NsHandle", tys[37].clone(), None), Param::new("ExpirationAge", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2162, 0, "RpcNsMgmtInqExpAge", "RpcNsMgmtInqExpAge", 0, vec![Param::new("ExpirationAge", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2163, 0, "RpcNsMgmtSetExpAge", "RpcNsMgmtSetExpAge", 0, vec![Param::new("ExpirationAge", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2164, 0, "RpcNsProfileDeleteA", "RpcNsProfileDeleteA", 0, vec![Param::new("ProfileNameSyntax", tys[13].clone(), None), Param::new("ProfileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2165, 0, "RpcNsProfileEltAddA", "RpcNsProfileEltAddA", 0, vec![Param::new("ProfileNameSyntax", tys[13].clone(), None), Param::new("ProfileName", tys[33].clone(), None), Param::new("IfId", tys[26].clone(), None), Param::new("MemberNameSyntax", tys[13].clone(), None), Param::new("MemberName", tys[33].clone(), None), Param::new("Priority", tys[13].clone(), None), Param::new("Annotation", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2166, 0, "RpcNsProfileEltInqBeginA", "RpcNsProfileEltInqBeginA", 0, vec![Param::new("ProfileNameSyntax", tys[13].clone(), None), Param::new("ProfileName", tys[33].clone(), None), Param::new("InquiryType", tys[13].clone(), None), Param::new("IfId", tys[26].clone(), None), Param::new("VersOption", tys[13].clone(), None), Param::new("MemberNameSyntax", tys[13].clone(), None), Param::new("MemberName", tys[33].clone(), None), Param::new("InquiryContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2167, 0, "RpcNsProfileEltInqDone", "RpcNsProfileEltInqDone", 0, vec![Param::new("InquiryContext", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2168, 0, "RpcNsProfileEltInqNextA", "RpcNsProfileEltInqNextA", 0, vec![Param::new("InquiryContext", tys[37].clone(), None), Param::new("IfId", tys[26].clone(), None), Param::new("MemberName", tys[34].clone(), None), Param::new("Priority", tys[39].clone(), None), Param::new("Annotation", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2169, 0, "RpcNsProfileEltRemoveA", "RpcNsProfileEltRemoveA", 0, vec![Param::new("ProfileNameSyntax", tys[13].clone(), None), Param::new("ProfileName", tys[33].clone(), None), Param::new("IfId", tys[26].clone(), None), Param::new("MemberNameSyntax", tys[13].clone(), None), Param::new("MemberName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2170, 0, "RpcObjectInqType", "RpcObjectInqType", 0, vec![Param::new("ObjUuid", tys[26].clone(), None), Param::new("TypeUuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2171, 0, "RpcObjectSetInqFn", "RpcObjectSetInqFn", 0, vec![Param::new("InquiryFn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2172, 0, "RpcObjectSetType", "RpcObjectSetType", 0, vec![Param::new("ObjUuid", tys[26].clone(), None), Param::new("TypeUuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2173, 0, "RpcProtseqVectorFreeA", "RpcProtseqVectorFreeA", 0, vec![Param::new("ProtseqVector", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2174, 0, "RpcRaiseException", "RpcRaiseException", 0, vec![Param::new("exception", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2175, 0, "RpcRevertContainerImpersonation", "RpcRevertContainerImpersonation", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_34(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2176, 0, "RpcRevertToSelf", "RpcRevertToSelf", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2177, 0, "RpcRevertToSelfEx", "RpcRevertToSelfEx", 0, vec![Param::new("BindingHandle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2178, 0, "RpcSmAllocate", "RpcSmAllocate", 0, vec![Param::new("Size", tys[14].clone(), None), Param::new("pStatus", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2179, 0, "RpcSmClientFree", "RpcSmClientFree", 0, vec![Param::new("pNodeToFree", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2180, 0, "RpcSmDestroyClientContext", "RpcSmDestroyClientContext", 0, vec![Param::new("ContextHandle", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2181, 0, "RpcSmDisableAllocate", "RpcSmDisableAllocate", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2182, 0, "RpcSmEnableAllocate", "RpcSmEnableAllocate", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2183, 0, "RpcSmFree", "RpcSmFree", 0, vec![Param::new("NodeToFree", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2184, 0, "RpcSmGetThreadHandle", "RpcSmGetThreadHandle", 0, vec![Param::new("pStatus", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2185, 0, "RpcSmSetClientAllocFree", "RpcSmSetClientAllocFree", 0, vec![Param::new("ClientAlloc", tys[26].clone(), None), Param::new("ClientFree", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2186, 0, "RpcSmSetThreadHandle", "RpcSmSetThreadHandle", 0, vec![Param::new("Id", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2187, 0, "RpcSmSwapClientAllocFree", "RpcSmSwapClientAllocFree", 0, vec![Param::new("ClientAlloc", tys[26].clone(), None), Param::new("ClientFree", tys[26].clone(), None), Param::new("OldClientAlloc", tys[27].clone(), None), Param::new("OldClientFree", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2188, 0, "RpcSsAllocate", "RpcSsAllocate", 0, vec![Param::new("Size", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2189, 0, "RpcSsContextLockExclusive", "RpcSsContextLockExclusive", 0, vec![Param::new("ServerBindingHandle", tys[37].clone(), None), Param::new("UserContext", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2190, 0, "RpcSsContextLockShared", "RpcSsContextLockShared", 0, vec![Param::new("ServerBindingHandle", tys[37].clone(), None), Param::new("UserContext", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2191, 0, "RpcSsDestroyClientContext", "RpcSsDestroyClientContext", 0, vec![Param::new("ContextHandle", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2192, 0, "RpcSsDisableAllocate", "RpcSsDisableAllocate", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2193, 0, "RpcSsDontSerializeContext", "RpcSsDontSerializeContext", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2194, 0, "RpcSsEnableAllocate", "RpcSsEnableAllocate", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2195, 0, "RpcSsFree", "RpcSsFree", 0, vec![Param::new("NodeToFree", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2196, 0, "RpcSsGetContextBinding", "RpcSsGetContextBinding", 0, vec![Param::new("ContextHandle", tys[37].clone(), None), Param::new("Binding", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2197, 0, "RpcSsGetThreadHandle", "RpcSsGetThreadHandle", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2198, 0, "RpcSsSetClientAllocFree", "RpcSsSetClientAllocFree", 0, vec![Param::new("ClientAlloc", tys[26].clone(), None), Param::new("ClientFree", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2199, 0, "RpcSsSetThreadHandle", "RpcSsSetThreadHandle", 0, vec![Param::new("Id", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2200, 0, "RpcSsSwapClientAllocFree", "RpcSsSwapClientAllocFree", 0, vec![Param::new("ClientAlloc", tys[26].clone(), None), Param::new("ClientFree", tys[26].clone(), None), Param::new("OldClientAlloc", tys[27].clone(), None), Param::new("OldClientFree", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2201, 0, "RpcStringBindingComposeA", "RpcStringBindingComposeA", 0, vec![Param::new("ObjUuid", tys[33].clone(), None), Param::new("ProtSeq", tys[33].clone(), None), Param::new("NetworkAddr", tys[33].clone(), None), Param::new("Endpoint", tys[33].clone(), None), Param::new("Options", tys[33].clone(), None), Param::new("StringBinding", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2202, 0, "RpcStringBindingParseA", "RpcStringBindingParseA", 0, vec![Param::new("StringBinding", tys[33].clone(), None), Param::new("ObjUuid", tys[34].clone(), None), Param::new("Protseq", tys[34].clone(), None), Param::new("NetworkAddr", tys[34].clone(), None), Param::new("Endpoint", tys[34].clone(), None), Param::new("NetworkOptions", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2203, 0, "RpcStringFreeA", "RpcStringFreeA", 0, vec![Param::new("String", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2204, 0, "RpcTestCancel", "RpcTestCancel", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2205, 0, "SHAppBarMessage", "SHAppBarMessage", 0, vec![Param::new("dwMessage", tys[13].clone(), None), Param::new("pData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2206, 0, "SHEmptyRecycleBinA", "SHEmptyRecycleBinA", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pszRootPath", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2207, 0, "SHEvaluateSystemCommandTemplate", "SHEvaluateSystemCommandTemplate", 0, vec![Param::new("pszCmdTemplate", tys[28].clone(), None), Param::new("ppszApplication", tys[29].clone(), None), Param::new("ppszCommandLine", tys[29].clone(), None), Param::new("ppszParameters", tys[29].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2208, 0, "SHFileOperationA", "SHFileOperationA", 0, vec![Param::new("lpFileOp", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2209, 0, "SHFreeNameMappings", "SHFreeNameMappings", 0, vec![Param::new("hNameMappings", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2210, 0, "SHGetDiskFreeSpaceExA", "SHGetDiskFreeSpaceExA", 0, vec![Param::new("pszDirectoryName", tys[33].clone(), None), Param::new("pulFreeBytesAvailableToCaller", tys[26].clone(), None), Param::new("pulTotalNumberOfBytes", tys[26].clone(), None), Param::new("pulTotalNumberOfFreeBytes", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2211, 0, "SHGetDriveMedia", "SHGetDriveMedia", 0, vec![Param::new("pszDrive", tys[28].clone(), None), Param::new("pdwMediaContent", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2212, 0, "SHGetFileInfoA", "SHGetFileInfoA", 0, vec![Param::new("pszPath", tys[33].clone(), None), Param::new("dwFileAttributes", tys[13].clone(), None), Param::new("psfi", tys[26].clone(), None), Param::new("cbFileInfo", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2213, 0, "SHGetImageList", "SHGetImageList", 0, vec![Param::new("iImageList", tys[13].clone(), None), Param::new("riid", tys[26].clone(), None), Param::new("ppvObj", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2214, 0, "SHGetLocalizedName", "SHGetLocalizedName", 0, vec![Param::new("pszPath", tys[28].clone(), None), Param::new("pszResModule", tys[28].clone(), None), Param::new("cch", tys[13].clone(), None), Param::new("pidsRes", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2215, 0, "SHGetNewLinkInfoA", "SHGetNewLinkInfoA", 0, vec![Param::new("pszLinkTo", tys[33].clone(), None), Param::new("pszDir", tys[33].clone(), None), Param::new("pszName", tys[33].clone(), None), Param::new("pfMustCopy", tys[39].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2216, 0, "SHGetPropertyStoreForWindow", "SHGetPropertyStoreForWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("riid", tys[26].clone(), None), Param::new("ppv", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2217, 0, "SHGetStockIconInfo", "SHGetStockIconInfo", 0, vec![Param::new("siid", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), Param::new("psii", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2218, 0, "SHInvokePrinterCommandA", "SHInvokePrinterCommandA", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("uAction", tys[13].clone(), None), Param::new("lpBuf1", tys[33].clone(), None), Param::new("lpBuf2", tys[33].clone(), None), Param::new("fModal", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2219, 0, "SHIsFileAvailableOffline", "SHIsFileAvailableOffline", 0, vec![Param::new("pwszPath", tys[28].clone(), None), Param::new("pdwStatus", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2220, 0, "SHLoadNonloadedIconOverlayIdentifiers", "SHLoadNonloadedIconOverlayIdentifiers", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2221, 0, "SHQueryRecycleBinA", "SHQueryRecycleBinA", 0, vec![Param::new("pszRootPath", tys[33].clone(), None), Param::new("pSHQueryRBInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2222, 0, "SHQueryUserNotificationState", "SHQueryUserNotificationState", 0, vec![Param::new("pquns", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2223, 0, "SHRemoveLocalizedName", "SHRemoveLocalizedName", 0, vec![Param::new("pszPath", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2224, 0, "SHSetLocalizedName", "SHSetLocalizedName", 0, vec![Param::new("pszPath", tys[28].clone(), None), Param::new("pszResModule", tys[28].clone(), None), Param::new("idsRes", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2225, 0, "SHTestTokenMembership", "SHTestTokenMembership", 0, vec![Param::new("hToken", tys[47].clone(), None), Param::new("ulRID", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2226, 0, "SaveDC", "SaveDC", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2227, 0, "ScaleViewportExtEx", "ScaleViewportExtEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("xn", tys[13].clone(), None), Param::new("dx", tys[13].clone(), None), Param::new("yn", tys[13].clone(), None), Param::new("yd", tys[13].clone(), None), Param::new("lpsz", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2228, 0, "ScaleWindowExtEx", "ScaleWindowExtEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("xn", tys[13].clone(), None), Param::new("xd", tys[13].clone(), None), Param::new("yn", tys[13].clone(), None), Param::new("yd", tys[13].clone(), None), Param::new("lpsz", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2229, 0, "ScheduleJob", "ScheduleJob", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("JobId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2230, 0, "ScreenToClient", "ScreenToClient", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpPoint", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2231, 0, "ScrollConsoleScreenBufferA", "ScrollConsoleScreenBufferA", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpScrollRectangle", tys[26].clone(), None), Param::new("lpClipRectangle", tys[26].clone(), None), Param::new("dwDestinationOrigin", tys[16].clone(), None), Param::new("lpFill", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2232, 0, "ScrollDC", "ScrollDC", 0, vec![Param::new("hDC", tys[26].clone(), None), Param::new("dx", tys[13].clone(), None), Param::new("dy", tys[13].clone(), None), Param::new("lprcScroll", tys[26].clone(), None), Param::new("lprcClip", tys[26].clone(), None), Param::new("hrgnUpdate", tys[26].clone(), None), Param::new("lprcUpdate", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2233, 0, "ScrollWindow", "ScrollWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("XAmount", tys[13].clone(), None), Param::new("YAmount", tys[13].clone(), None), Param::new("lpRect", tys[26].clone(), None), Param::new("lpClipRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2234, 0, "ScrollWindowEx", "ScrollWindowEx", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("dx", tys[13].clone(), None), Param::new("dy", tys[13].clone(), None), Param::new("prcScroll", tys[26].clone(), None), Param::new("prcClip", tys[26].clone(), None), Param::new("hrgnUpdate", tys[26].clone(), None), Param::new("prcUpdate", tys[26].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2235, 0, "SearchPathA", "SearchPathA", 0, vec![Param::new("lpPath", tys[33].clone(), None), Param::new("lpFileName", tys[33].clone(), None), Param::new("lpExtension", tys[33].clone(), None), Param::new("nBufferLength", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), Param::new("lpFilePart", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2236, 0, "SelectClipPath", "SelectClipPath", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("mode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2237, 0, "SelectClipRgn", "SelectClipRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hrgn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2238, 0, "SelectObject", "SelectObject", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("h", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2239, 0, "SelectPalette", "SelectPalette", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hPal", tys[26].clone(), None), Param::new("bForceBkgd", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_35(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2240, 0, "SendDlgItemMessageA", "SendDlgItemMessageA", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nIDDlgItem", tys[13].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2241, 0, "SendDriverMessage", "SendDriverMessage", 0, vec![Param::new("hDriver", tys[26].clone(), None), Param::new("message", tys[13].clone(), None), Param::new("lParam1", tys[14].clone(), None), Param::new("lParam2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2242, 0, "SendInput", "SendInput", 0, vec![Param::new("cInputs", tys[13].clone(), None), Param::new("pInputs", tys[26].clone(), None), Param::new("cbSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2243, 0, "SendMessageA", "SendMessageA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2244, 0, "SendMessageCallbackA", "SendMessageCallbackA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), Param::new("lpResultCallBack", tys[26].clone(), None), Param::new("dwData", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2245, 0, "SendMessageTimeoutA", "SendMessageTimeoutA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), Param::new("fuFlags", tys[13].clone(), None), Param::new("uTimeout", tys[13].clone(), None), Param::new("lpdwResult", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2246, 0, "SendNotifyMessageA", "SendNotifyMessageA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("Msg", tys[13].clone(), None), Param::new("wParam", tys[14].clone(), None), Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2247, 0, "SetAbortProc", "SetAbortProc", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("proc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2248, 0, "SetAclInformation", "SetAclInformation", 0, vec![Param::new("pAcl", tys[26].clone(), None), Param::new("pAclInformation", tys[37].clone(), None), Param::new("nAclInformationLength", tys[13].clone(), None), Param::new("dwAclInformationClass", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2249, 0, "SetActiveWindow", "SetActiveWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2250, 0, "SetArcDirection", "SetArcDirection", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("dir", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2251, 0, "SetBitmapBits", "SetBitmapBits", 0, vec![Param::new("hbm", tys[26].clone(), None), Param::new("cb", tys[13].clone(), None), Param::new("pvBits", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2252, 0, "SetBitmapDimensionEx", "SetBitmapDimensionEx", 0, vec![Param::new("hbm", tys[26].clone(), None), Param::new("w", tys[13].clone(), None), Param::new("h", tys[13].clone(), None), Param::new("lpsz", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2253, 0, "SetBkColor", "SetBkColor", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2254, 0, "SetBkMode", "SetBkMode", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("mode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2255, 0, "SetBoundsRect", "SetBoundsRect", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lprect", tys[26].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2256, 0, "SetBrushOrgEx", "SetBrushOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2257, 0, "SetCachedSigningLevel", "SetCachedSigningLevel", 0, vec![Param::new("SourceFiles", tys[32].clone(), None), Param::new("SourceFileCount", tys[13].clone(), None), Param::new("Flags", tys[13].clone(), None), Param::new("TargetFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2258, 0, "SetCalendarInfoA", "SetCalendarInfoA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("Calendar", tys[13].clone(), None), Param::new("CalType", tys[13].clone(), None), Param::new("lpCalData", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2259, 0, "SetCapture", "SetCapture", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2260, 0, "SetCaretBlinkTime", "SetCaretBlinkTime", 0, vec![Param::new("uMSeconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2261, 0, "SetCaretPos", "SetCaretPos", 0, vec![Param::new("X", tys[13].clone(), None), Param::new("Y", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2262, 0, "SetClassLongA", "SetClassLongA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), Param::new("dwNewLong", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2263, 0, "SetClassLongPtrA", "SetClassLongPtrA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), Param::new("dwNewLong", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2264, 0, "SetClassWord", "SetClassWord", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), Param::new("wNewWord", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2265, 0, "SetClipboardData", "SetClipboardData", 0, vec![Param::new("uFormat", tys[13].clone(), None), Param::new("hMem", tys[47].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2266, 0, "SetClipboardViewer", "SetClipboardViewer", 0, vec![Param::new("hWndNewViewer", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2267, 0, "SetCoalescableTimer", "SetCoalescableTimer", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIDEvent", tys[14].clone(), None), Param::new("uElapse", tys[13].clone(), None), Param::new("lpTimerFunc", tys[26].clone(), None), Param::new("uToleranceDelay", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2268, 0, "SetColorAdjustment", "SetColorAdjustment", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpca", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2269, 0, "SetColorSpace", "SetColorSpace", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hcs", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2270, 0, "SetCommBreak", "SetCommBreak", 0, vec![Param::new("hFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2271, 0, "SetCommConfig", "SetCommConfig", 0, vec![Param::new("hCommDev", tys[47].clone(), None), Param::new("lpCC", tys[26].clone(), None), Param::new("dwSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2272, 0, "SetCommMask", "SetCommMask", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("dwEvtMask", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2273, 0, "SetCommState", "SetCommState", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpDCB", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2274, 0, "SetCommTimeouts", "SetCommTimeouts", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpCommTimeouts", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2275, 0, "SetComputerNameA", "SetComputerNameA", 0, vec![Param::new("lpComputerName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2276, 0, "SetComputerNameExA", "SetComputerNameExA", 0, vec![Param::new("NameType", tys[13].clone(), None), Param::new("lpBuffer", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2277, 0, "SetConsoleActiveScreenBuffer", "SetConsoleActiveScreenBuffer", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2278, 0, "SetConsoleCP", "SetConsoleCP", 0, vec![Param::new("wCodePageID", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2279, 0, "SetConsoleCtrlHandler", "SetConsoleCtrlHandler", 0, vec![Param::new("HandlerRoutine", tys[26].clone(), None), Param::new("Add", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2280, 0, "SetConsoleCursorInfo", "SetConsoleCursorInfo", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpConsoleCursorInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2281, 0, "SetConsoleCursorPosition", "SetConsoleCursorPosition", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("dwCursorPosition", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2282, 0, "SetConsoleDisplayMode", "SetConsoleDisplayMode", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpNewScreenBufferDimensions", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2283, 0, "SetConsoleHistoryInfo", "SetConsoleHistoryInfo", 0, vec![Param::new("lpConsoleHistoryInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2284, 0, "SetConsoleMode", "SetConsoleMode", 0, vec![Param::new("hConsoleHandle", tys[47].clone(), None), Param::new("dwMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2285, 0, "SetConsoleOutputCP", "SetConsoleOutputCP", 0, vec![Param::new("wCodePageID", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2286, 0, "SetConsoleScreenBufferInfoEx", "SetConsoleScreenBufferInfoEx", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpConsoleScreenBufferInfoEx", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2287, 0, "SetConsoleScreenBufferSize", "SetConsoleScreenBufferSize", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("dwSize", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2288, 0, "SetConsoleTextAttribute", "SetConsoleTextAttribute", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("wAttributes", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2289, 0, "SetConsoleTitleA", "SetConsoleTitleA", 0, vec![Param::new("lpConsoleTitle", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2290, 0, "SetConsoleWindowInfo", "SetConsoleWindowInfo", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("bAbsolute", tys[13].clone(), None), Param::new("lpConsoleWindow", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2291, 0, "SetCriticalSectionSpinCount", "SetCriticalSectionSpinCount", 0, vec![Param::new("lpCriticalSection", tys[26].clone(), None), Param::new("dwSpinCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2292, 0, "SetCurrentConsoleFontEx", "SetCurrentConsoleFontEx", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("bMaximumWindow", tys[13].clone(), None), Param::new("lpConsoleCurrentFontEx", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2293, 0, "SetCurrentDirectoryA", "SetCurrentDirectoryA", 0, vec![Param::new("lpPathName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2294, 0, "SetCursor", "SetCursor", 0, vec![Param::new("hCursor", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2295, 0, "SetCursorPos", "SetCursorPos", 0, vec![Param::new("X", tys[13].clone(), None), Param::new("Y", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2296, 0, "SetDCBrushColor", "SetDCBrushColor", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2297, 0, "SetDCPenColor", "SetDCPenColor", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2298, 0, "SetDIBColorTable", "SetDIBColorTable", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iStart", tys[13].clone(), None), Param::new("cEntries", tys[13].clone(), None), Param::new("prgbq", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2299, 0, "SetDIBits", "SetDIBits", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("hbm", tys[26].clone(), None), Param::new("start", tys[13].clone(), None), Param::new("cLines", tys[13].clone(), None), Param::new("lpBits", tys[37].clone(), None), Param::new("lpbmi", tys[26].clone(), None), Param::new("ColorUse", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2300, 0, "SetDIBitsToDevice", "SetDIBitsToDevice", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("xDest", tys[13].clone(), None), Param::new("yDest", tys[13].clone(), None), Param::new("w", tys[13].clone(), None), Param::new("h", tys[13].clone(), None), Param::new("xSrc", tys[13].clone(), None), Param::new("ySrc", tys[13].clone(), None), Param::new("StartScan", tys[13].clone(), None), Param::new("cLines", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2301, 0, "SetDebugErrorLevel", "SetDebugErrorLevel", 0, vec![Param::new("dwLevel", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2302, 0, "SetDefaultCommConfigA", "SetDefaultCommConfigA", 0, vec![Param::new("lpszName", tys[33].clone(), None), Param::new("lpCC", tys[26].clone(), None), Param::new("dwSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2303, 0, "SetDefaultDllDirectories", "SetDefaultDllDirectories", 0, vec![Param::new("DirectoryFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_36(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2304, 0, "SetDefaultPrinterA", "SetDefaultPrinterA", 0, vec![Param::new("pszPrinter", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2305, 0, "SetDeviceGammaRamp", "SetDeviceGammaRamp", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpRamp", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2306, 0, "SetDisplayAutoRotationPreferences", "SetDisplayAutoRotationPreferences", 0, vec![Param::new("orientation", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2307, 0, "SetDisplayConfig", "SetDisplayConfig", 0, vec![Param::new("numPathArrayElements", tys[13].clone(), None), Param::new("pathArray", tys[26].clone(), None), Param::new("numModeInfoArrayElements", tys[13].clone(), None), Param::new("modeInfoArray", tys[26].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2308, 0, "SetDlgItemInt", "SetDlgItemInt", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nIDDlgItem", tys[13].clone(), None), Param::new("uValue", tys[13].clone(), None), Param::new("bSigned", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2309, 0, "SetDlgItemTextA", "SetDlgItemTextA", 0, vec![Param::new("hDlg", tys[26].clone(), None), Param::new("nIDDlgItem", tys[13].clone(), None), Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2310, 0, "SetDllDirectoryA", "SetDllDirectoryA", 0, vec![Param::new("lpPathName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2311, 0, "SetDoubleClickTime", "SetDoubleClickTime", 0, vec![Param::new("arg0", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2312, 0, "SetDynamicTimeZoneInformation", "SetDynamicTimeZoneInformation", 0, vec![Param::new("lpTimeZoneInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2313, 0, "SetEncryptedFileMetadata", "SetEncryptedFileMetadata", 0, vec![Param::new("lpFileName", tys[28].clone(), None), Param::new("pbOldMetadata", tys[33].clone(), None), Param::new("pbNewMetadata", tys[33].clone(), None), Param::new("pOwnerHash", tys[26].clone(), None), Param::new("dwOperation", tys[13].clone(), None), Param::new("pCertificatesAdded", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2314, 0, "SetEndOfFile", "SetEndOfFile", 0, vec![Param::new("hFile", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2315, 0, "SetEnhMetaFileBits", "SetEnhMetaFileBits", 0, vec![Param::new("nSize", tys[13].clone(), None), Param::new("pb", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2316, 0, "SetEnvironmentStringsA", "SetEnvironmentStringsA", 0, vec![Param::new("NewEnvironment", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2317, 0, "SetEnvironmentVariableA", "SetEnvironmentVariableA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("lpValue", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2318, 0, "SetErrorMode", "SetErrorMode", 0, vec![Param::new("uMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2319, 0, "SetEvent", "SetEvent", 0, vec![Param::new("hEvent", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2320, 0, "SetEventWhenCallbackReturns", "SetEventWhenCallbackReturns", 0, vec![Param::new("pci", tys[26].clone(), None), Param::new("evt", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2321, 0, "SetFileApisToANSI", "SetFileApisToANSI", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2322, 0, "SetFileApisToOEM", "SetFileApisToOEM", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2323, 0, "SetFileAttributesA", "SetFileAttributesA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("dwFileAttributes", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2324, 0, "SetFileAttributesTransactedA", "SetFileAttributesTransactedA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("dwFileAttributes", tys[13].clone(), None), Param::new("hTransaction", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2325, 0, "SetFileBandwidthReservation", "SetFileBandwidthReservation", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("nPeriodMilliseconds", tys[13].clone(), None), Param::new("nBytesPerPeriod", tys[13].clone(), None), Param::new("bDiscardable", tys[13].clone(), None), Param::new("lpTransferSize", tys[39].clone(), None), Param::new("lpNumOutstandingRequests", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2326, 0, "SetFileCompletionNotificationModes", "SetFileCompletionNotificationModes", 0, vec![Param::new("FileHandle", tys[47].clone(), None), Param::new("Flags", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2327, 0, "SetFileInformationByHandle", "SetFileInformationByHandle", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("FileInformationClass", tys[13].clone(), None), Param::new("lpFileInformation", tys[37].clone(), None), Param::new("dwBufferSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2328, 0, "SetFileIoOverlappedRange", "SetFileIoOverlappedRange", 0, vec![Param::new("FileHandle", tys[47].clone(), None), Param::new("OverlappedRangeStart", tys[33].clone(), None), Param::new("Length", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2329, 0, "SetFilePointer", "SetFilePointer", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lDistanceToMove", tys[13].clone(), None), Param::new("lpDistanceToMoveHigh", tys[39].clone(), None), Param::new("dwMoveMethod", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2330, 0, "SetFilePointerEx", "SetFilePointerEx", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("liDistanceToMove", tys[16].clone(), None), Param::new("lpNewFilePointer", tys[26].clone(), None), Param::new("dwMoveMethod", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2331, 0, "SetFileSecurityA", "SetFileSecurityA", 0, vec![Param::new("lpFileName", tys[33].clone(), None), Param::new("SecurityInformation", tys[13].clone(), None), Param::new("pSecurityDescriptor", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2332, 0, "SetFileShortNameA", "SetFileShortNameA", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpShortName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2333, 0, "SetFileTime", "SetFileTime", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpCreationTime", tys[26].clone(), None), Param::new("lpLastAccessTime", tys[26].clone(), None), Param::new("lpLastWriteTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2334, 0, "SetFileValidData", "SetFileValidData", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("ValidDataLength", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2335, 0, "SetFirmwareEnvironmentVariableA", "SetFirmwareEnvironmentVariableA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("lpGuid", tys[33].clone(), None), Param::new("pValue", tys[37].clone(), None), Param::new("nSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2336, 0, "SetFirmwareEnvironmentVariableExA", "SetFirmwareEnvironmentVariableExA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("lpGuid", tys[33].clone(), None), Param::new("pValue", tys[37].clone(), None), Param::new("nSize", tys[13].clone(), None), Param::new("dwAttributes", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2337, 0, "SetFocus", "SetFocus", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2338, 0, "SetForegroundWindow", "SetForegroundWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2339, 0, "SetFormA", "SetFormA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pFormName", tys[33].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pForm", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2340, 0, "SetGestureConfig", "SetGestureConfig", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("dwReserved", tys[13].clone(), None), Param::new("cIDs", tys[13].clone(), None), Param::new("pGestureConfig", tys[26].clone(), None), Param::new("cbSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2341, 0, "SetGraphicsMode", "SetGraphicsMode", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2342, 0, "SetHandleCount", "SetHandleCount", 0, vec![Param::new("uNumber", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2343, 0, "SetHandleInformation", "SetHandleInformation", 0, vec![Param::new("hObject", tys[47].clone(), None), Param::new("dwMask", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2344, 0, "SetICMMode", "SetICMMode", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("mode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2345, 0, "SetICMProfileA", "SetICMProfileA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2346, 0, "SetInformationJobObject", "SetInformationJobObject", 0, vec![Param::new("hJob", tys[47].clone(), None), Param::new("JobObjectInformationClass", tys[13].clone(), None), Param::new("lpJobObjectInformation", tys[37].clone(), None), Param::new("cbJobObjectInformationLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2347, 0, "SetIoRateControlInformationJobObject", "SetIoRateControlInformationJobObject", 0, vec![Param::new("hJob", tys[47].clone(), None), Param::new("IoRateControlInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2348, 0, "SetJobA", "SetJobA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("JobId", tys[13].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pJob", tys[33].clone(), None), Param::new("Command", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2349, 0, "SetJobNamedProperty", "SetJobNamedProperty", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("JobId", tys[13].clone(), None), Param::new("pProperty", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2350, 0, "SetKernelObjectSecurity", "SetKernelObjectSecurity", 0, vec![Param::new("Handle", tys[47].clone(), None), Param::new("SecurityInformation", tys[13].clone(), None), Param::new("SecurityDescriptor", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2351, 0, "SetKeyboardState", "SetKeyboardState", 0, vec![Param::new("lpKeyState", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2352, 0, "SetLastError", "SetLastError", 0, vec![Param::new("dwErrCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2353, 0, "SetLastErrorEx", "SetLastErrorEx", 0, vec![Param::new("dwErrCode", tys[13].clone(), None), Param::new("dwType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2354, 0, "SetLayeredWindowAttributes", "SetLayeredWindowAttributes", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("crKey", tys[13].clone(), None), Param::new("bAlpha", tys[15].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2355, 0, "SetLayout", "SetLayout", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("l", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2356, 0, "SetLocalTime", "SetLocalTime", 0, vec![Param::new("lpSystemTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2357, 0, "SetLocaleInfoA", "SetLocaleInfoA", 0, vec![Param::new("Locale", tys[13].clone(), None), Param::new("LCType", tys[13].clone(), None), Param::new("lpLCData", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2358, 0, "SetMailslotInfo", "SetMailslotInfo", 0, vec![Param::new("hMailslot", tys[47].clone(), None), Param::new("lReadTimeout", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2359, 0, "SetMapMode", "SetMapMode", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("iMode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2360, 0, "SetMapperFlags", "SetMapperFlags", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2361, 0, "SetMenu", "SetMenu", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hMenu", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2362, 0, "SetMenuContextHelpId", "SetMenuContextHelpId", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2363, 0, "SetMenuDefaultItem", "SetMenuDefaultItem", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uItem", tys[13].clone(), None), Param::new("fByPos", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2364, 0, "SetMenuInfo", "SetMenuInfo", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2365, 0, "SetMenuItemBitmaps", "SetMenuItemBitmaps", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uPosition", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), Param::new("hBitmapUnchecked", tys[26].clone(), None), Param::new("hBitmapChecked", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2366, 0, "SetMenuItemInfoA", "SetMenuItemInfoA", 0, vec![Param::new("hmenu", tys[26].clone(), None), Param::new("item", tys[13].clone(), None), Param::new("fByPositon", tys[13].clone(), None), Param::new("lpmii", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2367, 0, "SetMessageExtraInfo", "SetMessageExtraInfo", 0, vec![Param::new("lParam", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_37(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2368, 0, "SetMessageQueue", "SetMessageQueue", 0, vec![Param::new("cMessagesMax", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2369, 0, "SetMessageWaitingIndicator", "SetMessageWaitingIndicator", 0, vec![Param::new("hMsgIndicator", tys[47].clone(), None), Param::new("ulMsgCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2370, 0, "SetMetaFileBitsEx", "SetMetaFileBitsEx", 0, vec![Param::new("cbBuffer", tys[13].clone(), None), Param::new("lpData", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2371, 0, "SetMetaRgn", "SetMetaRgn", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2372, 0, "SetMiterLimit", "SetMiterLimit", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("limit", tys[16].clone(), None), Param::new("old", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2373, 0, "SetNamedPipeHandleState", "SetNamedPipeHandleState", 0, vec![Param::new("hNamedPipe", tys[47].clone(), None), Param::new("lpMode", tys[39].clone(), None), Param::new("lpMaxCollectionCount", tys[39].clone(), None), Param::new("lpCollectDataTimeout", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2374, 0, "SetPaletteEntries", "SetPaletteEntries", 0, vec![Param::new("hpal", tys[26].clone(), None), Param::new("iStart", tys[13].clone(), None), Param::new("cEntries", tys[13].clone(), None), Param::new("pPalEntries", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2375, 0, "SetParent", "SetParent", 0, vec![Param::new("hWndChild", tys[26].clone(), None), Param::new("hWndNewParent", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2376, 0, "SetPhysicalCursorPos", "SetPhysicalCursorPos", 0, vec![Param::new("X", tys[13].clone(), None), Param::new("Y", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2377, 0, "SetPixel", "SetPixel", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2378, 0, "SetPixelFormat", "SetPixelFormat", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("format", tys[13].clone(), None), Param::new("ppfd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2379, 0, "SetPixelV", "SetPixelV", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2380, 0, "SetPolyFillMode", "SetPolyFillMode", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("mode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2381, 0, "SetPortA", "SetPortA", 0, vec![Param::new("pName", tys[33].clone(), None), Param::new("pPortName", tys[33].clone(), None), Param::new("dwLevel", tys[13].clone(), None), Param::new("pPortInfo", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2382, 0, "SetPrinterA", "SetPrinterA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pPrinter", tys[33].clone(), None), Param::new("Command", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2383, 0, "SetPrinterDataA", "SetPrinterDataA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pValueName", tys[33].clone(), None), Param::new("Type", tys[13].clone(), None), Param::new("pData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2384, 0, "SetPrinterDataExA", "SetPrinterDataExA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pKeyName", tys[33].clone(), None), Param::new("pValueName", tys[33].clone(), None), Param::new("Type", tys[13].clone(), None), Param::new("pData", tys[33].clone(), None), Param::new("cbData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2385, 0, "SetPriorityClass", "SetPriorityClass", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("dwPriorityClass", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2386, 0, "SetPrivateObjectSecurity", "SetPrivateObjectSecurity", 0, vec![Param::new("SecurityInformation", tys[13].clone(), None), Param::new("ModificationDescriptor", tys[37].clone(), None), Param::new("ObjectsSecurityDescriptor", tys[38].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), Param::new("Token", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2387, 0, "SetPrivateObjectSecurityEx", "SetPrivateObjectSecurityEx", 0, vec![Param::new("SecurityInformation", tys[13].clone(), None), Param::new("ModificationDescriptor", tys[37].clone(), None), Param::new("ObjectsSecurityDescriptor", tys[38].clone(), None), Param::new("AutoInheritFlags", tys[13].clone(), None), Param::new("GenericMapping", tys[26].clone(), None), Param::new("Token", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2388, 0, "SetProcessAffinityMask", "SetProcessAffinityMask", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("dwProcessAffinityMask", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2389, 0, "SetProcessAffinityUpdateMode", "SetProcessAffinityUpdateMode", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2390, 0, "SetProcessDEPPolicy", "SetProcessDEPPolicy", 0, vec![Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2391, 0, "SetProcessDPIAware", "SetProcessDPIAware", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2392, 0, "SetProcessDefaultCpuSets", "SetProcessDefaultCpuSets", 0, vec![Param::new("Process", tys[47].clone(), None), Param::new("CpuSetIds", tys[39].clone(), None), Param::new("CpuSetIdCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2393, 0, "SetProcessDefaultLayout", "SetProcessDefaultLayout", 0, vec![Param::new("dwDefaultLayout", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2394, 0, "SetProcessDpiAwarenessContext", "SetProcessDpiAwarenessContext", 0, vec![Param::new("value", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2395, 0, "SetProcessInformation", "SetProcessInformation", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("ProcessInformationClass", tys[13].clone(), None), Param::new("ProcessInformation", tys[37].clone(), None), Param::new("ProcessInformationSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2396, 0, "SetProcessMitigationPolicy", "SetProcessMitigationPolicy", 0, vec![Param::new("MitigationPolicy", tys[13].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("dwLength", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2397, 0, "SetProcessPreferredUILanguages", "SetProcessPreferredUILanguages", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pwszLanguagesBuffer", tys[28].clone(), None), Param::new("pulNumLanguages", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2398, 0, "SetProcessPriorityBoost", "SetProcessPriorityBoost", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("bDisablePriorityBoost", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2399, 0, "SetProcessRestrictionExemption", "SetProcessRestrictionExemption", 0, vec![Param::new("fEnableExemption", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2400, 0, "SetProcessShutdownParameters", "SetProcessShutdownParameters", 0, vec![Param::new("dwLevel", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2401, 0, "SetProcessValidCallTargets", "SetProcessValidCallTargets", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("VirtualAddress", tys[37].clone(), None), Param::new("RegionSize", tys[14].clone(), None), Param::new("NumberOfOffsets", tys[13].clone(), None), Param::new("OffsetInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2402, 0, "SetProcessWindowStation", "SetProcessWindowStation", 0, vec![Param::new("hWinSta", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2403, 0, "SetProcessWorkingSetSize", "SetProcessWorkingSetSize", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("dwMinimumWorkingSetSize", tys[14].clone(), None), Param::new("dwMaximumWorkingSetSize", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2404, 0, "SetProcessWorkingSetSizeEx", "SetProcessWorkingSetSizeEx", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("dwMinimumWorkingSetSize", tys[14].clone(), None), Param::new("dwMaximumWorkingSetSize", tys[14].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2405, 0, "SetPropA", "SetPropA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("hData", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2406, 0, "SetProtectedPolicy", "SetProtectedPolicy", 0, vec![Param::new("PolicyGuid", tys[26].clone(), None), Param::new("PolicyValue", tys[14].clone(), None), Param::new("OldPolicyValue", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2407, 0, "SetROP2", "SetROP2", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("rop2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2408, 0, "SetRect", "SetRect", 0, vec![Param::new("lprc", tys[26].clone(), None), Param::new("xLeft", tys[13].clone(), None), Param::new("yTop", tys[13].clone(), None), Param::new("xRight", tys[13].clone(), None), Param::new("yBottom", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2409, 0, "SetRectEmpty", "SetRectEmpty", 0, vec![Param::new("lprc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2410, 0, "SetRectRgn", "SetRectRgn", 0, vec![Param::new("hrgn", tys[26].clone(), None), Param::new("left", tys[13].clone(), None), Param::new("top", tys[13].clone(), None), Param::new("right", tys[13].clone(), None), Param::new("bottom", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2411, 0, "SetScrollInfo", "SetScrollInfo", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("nBar", tys[13].clone(), None), Param::new("lpsi", tys[26].clone(), None), Param::new("redraw", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2412, 0, "SetScrollPos", "SetScrollPos", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nBar", tys[13].clone(), None), Param::new("nPos", tys[13].clone(), None), Param::new("bRedraw", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2413, 0, "SetScrollRange", "SetScrollRange", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nBar", tys[13].clone(), None), Param::new("nMinPos", tys[13].clone(), None), Param::new("nMaxPos", tys[13].clone(), None), Param::new("bRedraw", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2414, 0, "SetSearchPathMode", "SetSearchPathMode", 0, vec![Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2415, 0, "SetSecurityAccessMask", "SetSecurityAccessMask", 0, vec![Param::new("SecurityInformation", tys[13].clone(), None), Param::new("DesiredAccess", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2416, 0, "SetSecurityDescriptorControl", "SetSecurityDescriptorControl", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("ControlBitsOfInterest", tys[11].clone(), None), Param::new("ControlBitsToSet", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2417, 0, "SetSecurityDescriptorDacl", "SetSecurityDescriptorDacl", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("bDaclPresent", tys[13].clone(), None), Param::new("pDacl", tys[26].clone(), None), Param::new("bDaclDefaulted", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2418, 0, "SetSecurityDescriptorGroup", "SetSecurityDescriptorGroup", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("pGroup", tys[37].clone(), None), Param::new("bGroupDefaulted", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2419, 0, "SetSecurityDescriptorOwner", "SetSecurityDescriptorOwner", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("pOwner", tys[37].clone(), None), Param::new("bOwnerDefaulted", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2420, 0, "SetSecurityDescriptorRMControl", "SetSecurityDescriptorRMControl", 0, vec![Param::new("SecurityDescriptor", tys[37].clone(), None), Param::new("RMControl", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2421, 0, "SetSecurityDescriptorSacl", "SetSecurityDescriptorSacl", 0, vec![Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("bSaclPresent", tys[13].clone(), None), Param::new("pSacl", tys[26].clone(), None), Param::new("bSaclDefaulted", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2422, 0, "SetServiceObjectSecurity", "SetServiceObjectSecurity", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwSecurityInformation", tys[13].clone(), None), Param::new("lpSecurityDescriptor", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2423, 0, "SetServiceStatus", "SetServiceStatus", 0, vec![Param::new("hServiceStatus", tys[26].clone(), None), Param::new("lpServiceStatus", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2424, 0, "SetStdHandle", "SetStdHandle", 0, vec![Param::new("nStdHandle", tys[13].clone(), None), Param::new("hHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2425, 0, "SetStdHandleEx", "SetStdHandleEx", 0, vec![Param::new("nStdHandle", tys[13].clone(), None), Param::new("hHandle", tys[47].clone(), None), Param::new("phPrevValue", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2426, 0, "SetStretchBltMode", "SetStretchBltMode", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("mode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2427, 0, "SetSysColors", "SetSysColors", 0, vec![Param::new("cElements", tys[13].clone(), None), Param::new("lpaElements", tys[39].clone(), None), Param::new("lpaRgbValues", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2428, 0, "SetSystemCursor", "SetSystemCursor", 0, vec![Param::new("hcur", tys[26].clone(), None), Param::new("id", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2429, 0, "SetSystemFileCacheSize", "SetSystemFileCacheSize", 0, vec![Param::new("MinimumFileCacheSize", tys[14].clone(), None), Param::new("MaximumFileCacheSize", tys[14].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2430, 0, "SetSystemPaletteUse", "SetSystemPaletteUse", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("use", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2431, 0, "SetSystemPowerState", "SetSystemPowerState", 0, vec![Param::new("fSuspend", tys[13].clone(), None), Param::new("fForce", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_38(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2432, 0, "SetSystemTime", "SetSystemTime", 0, vec![Param::new("lpSystemTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2433, 0, "SetSystemTimeAdjustment", "SetSystemTimeAdjustment", 0, vec![Param::new("dwTimeAdjustment", tys[13].clone(), None), Param::new("bTimeAdjustmentDisabled", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2434, 0, "SetTapeParameters", "SetTapeParameters", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("dwOperation", tys[13].clone(), None), Param::new("lpTapeInformation", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2435, 0, "SetTapePosition", "SetTapePosition", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("dwPositionMethod", tys[13].clone(), None), Param::new("dwPartition", tys[13].clone(), None), Param::new("dwOffsetLow", tys[13].clone(), None), Param::new("dwOffsetHigh", tys[13].clone(), None), Param::new("bImmediate", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2436, 0, "SetTextAlign", "SetTextAlign", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("align", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2437, 0, "SetTextCharacterExtra", "SetTextCharacterExtra", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("extra", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2438, 0, "SetTextColor", "SetTextColor", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("color", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2439, 0, "SetTextJustification", "SetTextJustification", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("extra", tys[13].clone(), None), Param::new("count", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2440, 0, "SetThreadAffinityMask", "SetThreadAffinityMask", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("dwThreadAffinityMask", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2441, 0, "SetThreadContext", "SetThreadContext", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("lpContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2442, 0, "SetThreadDesktop", "SetThreadDesktop", 0, vec![Param::new("hDesktop", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2443, 0, "SetThreadDpiAwarenessContext", "SetThreadDpiAwarenessContext", 0, vec![Param::new("dpiContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2444, 0, "SetThreadErrorMode", "SetThreadErrorMode", 0, vec![Param::new("dwNewMode", tys[13].clone(), None), Param::new("lpOldMode", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2445, 0, "SetThreadExecutionState", "SetThreadExecutionState", 0, vec![Param::new("esFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2446, 0, "SetThreadGroupAffinity", "SetThreadGroupAffinity", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("GroupAffinity", tys[26].clone(), None), Param::new("PreviousGroupAffinity", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2447, 0, "SetThreadIdealProcessor", "SetThreadIdealProcessor", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("dwIdealProcessor", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2448, 0, "SetThreadIdealProcessorEx", "SetThreadIdealProcessorEx", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("lpIdealProcessor", tys[26].clone(), None), Param::new("lpPreviousIdealProcessor", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2449, 0, "SetThreadInformation", "SetThreadInformation", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("ThreadInformationClass", tys[13].clone(), None), Param::new("ThreadInformation", tys[37].clone(), None), Param::new("ThreadInformationSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2450, 0, "SetThreadLocale", "SetThreadLocale", 0, vec![Param::new("Locale", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2451, 0, "SetThreadPreferredUILanguages", "SetThreadPreferredUILanguages", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("pwszLanguagesBuffer", tys[28].clone(), None), Param::new("pulNumLanguages", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2452, 0, "SetThreadPriority", "SetThreadPriority", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("nPriority", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2453, 0, "SetThreadPriorityBoost", "SetThreadPriorityBoost", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("bDisablePriorityBoost", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2454, 0, "SetThreadSelectedCpuSets", "SetThreadSelectedCpuSets", 0, vec![Param::new("Thread", tys[47].clone(), None), Param::new("CpuSetIds", tys[39].clone(), None), Param::new("CpuSetIdCount", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2455, 0, "SetThreadStackGuarantee", "SetThreadStackGuarantee", 0, vec![Param::new("StackSizeInBytes", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2456, 0, "SetThreadToken", "SetThreadToken", 0, vec![Param::new("Thread", tys[32].clone(), None), Param::new("Token", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2457, 0, "SetThreadUILanguage", "SetThreadUILanguage", 0, vec![Param::new("LangId", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2458, 0, "SetThreadpoolStackInformation", "SetThreadpoolStackInformation", 0, vec![Param::new("ptpp", tys[26].clone(), None), Param::new("ptpsi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2459, 0, "SetThreadpoolThreadMaximum", "SetThreadpoolThreadMaximum", 0, vec![Param::new("ptpp", tys[26].clone(), None), Param::new("cthrdMost", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2460, 0, "SetThreadpoolThreadMinimum", "SetThreadpoolThreadMinimum", 0, vec![Param::new("ptpp", tys[26].clone(), None), Param::new("cthrdMic", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2461, 0, "SetThreadpoolTimer", "SetThreadpoolTimer", 0, vec![Param::new("pti", tys[26].clone(), None), Param::new("pftDueTime", tys[26].clone(), None), Param::new("msPeriod", tys[13].clone(), None), Param::new("msWindowLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2462, 0, "SetThreadpoolTimerEx", "SetThreadpoolTimerEx", 0, vec![Param::new("pti", tys[26].clone(), None), Param::new("pftDueTime", tys[26].clone(), None), Param::new("msPeriod", tys[13].clone(), None), Param::new("msWindowLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2463, 0, "SetThreadpoolWait", "SetThreadpoolWait", 0, vec![Param::new("pwa", tys[26].clone(), None), Param::new("h", tys[47].clone(), None), Param::new("pftTimeout", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2464, 0, "SetThreadpoolWaitEx", "SetThreadpoolWaitEx", 0, vec![Param::new("pwa", tys[26].clone(), None), Param::new("h", tys[47].clone(), None), Param::new("pftTimeout", tys[26].clone(), None), Param::new("Reserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2465, 0, "SetTimeZoneInformation", "SetTimeZoneInformation", 0, vec![Param::new("lpTimeZoneInformation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2466, 0, "SetTimer", "SetTimer", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIDEvent", tys[14].clone(), None), Param::new("uElapse", tys[13].clone(), None), Param::new("lpTimerFunc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2467, 0, "SetTimerQueueTimer", "SetTimerQueueTimer", 0, vec![Param::new("TimerQueue", tys[47].clone(), None), Param::new("Callback", tys[26].clone(), None), Param::new("Parameter", tys[37].clone(), None), Param::new("DueTime", tys[13].clone(), None), Param::new("Period", tys[13].clone(), None), Param::new("PreferIo", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2468, 0, "SetTokenInformation", "SetTokenInformation", 0, vec![Param::new("TokenHandle", tys[47].clone(), None), Param::new("TokenInformationClass", tys[13].clone(), None), Param::new("TokenInformation", tys[37].clone(), None), Param::new("TokenInformationLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2469, 0, "SetUmsThreadInformation", "SetUmsThreadInformation", 0, vec![Param::new("UmsThread", tys[37].clone(), None), Param::new("UmsThreadInfoClass", tys[13].clone(), None), Param::new("UmsThreadInformation", tys[37].clone(), None), Param::new("UmsThreadInformationLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2470, 0, "SetUnhandledExceptionFilter", "SetUnhandledExceptionFilter", 0, vec![Param::new("lpTopLevelExceptionFilter", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2471, 0, "SetUserFileEncryptionKey", "SetUserFileEncryptionKey", 0, vec![Param::new("pEncryptionCertificate", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2472, 0, "SetUserFileEncryptionKeyEx", "SetUserFileEncryptionKeyEx", 0, vec![Param::new("pEncryptionCertificate", tys[26].clone(), None), Param::new("dwCapabilities", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("pvReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2473, 0, "SetUserGeoID", "SetUserGeoID", 0, vec![Param::new("GeoId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2474, 0, "SetUserObjectInformationA", "SetUserObjectInformationA", 0, vec![Param::new("hObj", tys[47].clone(), None), Param::new("nIndex", tys[13].clone(), None), Param::new("pvInfo", tys[37].clone(), None), Param::new("nLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2475, 0, "SetUserObjectSecurity", "SetUserObjectSecurity", 0, vec![Param::new("hObj", tys[47].clone(), None), Param::new("pSIRequested", tys[39].clone(), None), Param::new("pSID", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2476, 0, "SetViewportExtEx", "SetViewportExtEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lpsz", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2477, 0, "SetViewportOrgEx", "SetViewportOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2478, 0, "SetVolumeLabelA", "SetVolumeLabelA", 0, vec![Param::new("lpRootPathName", tys[33].clone(), None), Param::new("lpVolumeName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2479, 0, "SetVolumeMountPointA", "SetVolumeMountPointA", 0, vec![Param::new("lpszVolumeMountPoint", tys[33].clone(), None), Param::new("lpszVolumeName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2480, 0, "SetWaitableTimer", "SetWaitableTimer", 0, vec![Param::new("hTimer", tys[47].clone(), None), Param::new("lpDueTime", tys[26].clone(), None), Param::new("lPeriod", tys[13].clone(), None), Param::new("pfnCompletionRoutine", tys[26].clone(), None), Param::new("lpArgToCompletionRoutine", tys[37].clone(), None), Param::new("fResume", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2481, 0, "SetWaitableTimerEx", "SetWaitableTimerEx", 0, vec![Param::new("hTimer", tys[47].clone(), None), Param::new("lpDueTime", tys[26].clone(), None), Param::new("lPeriod", tys[13].clone(), None), Param::new("pfnCompletionRoutine", tys[26].clone(), None), Param::new("lpArgToCompletionRoutine", tys[37].clone(), None), Param::new("WakeContext", tys[26].clone(), None), Param::new("TolerableDelay", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2482, 0, "SetWinEventHook", "SetWinEventHook", 0, vec![Param::new("eventMin", tys[13].clone(), None), Param::new("eventMax", tys[13].clone(), None), Param::new("hmodWinEventProc", tys[26].clone(), None), Param::new("pfnWinEventProc", tys[26].clone(), None), Param::new("idProcess", tys[13].clone(), None), Param::new("idThread", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2483, 0, "SetWinMetaFileBits", "SetWinMetaFileBits", 0, vec![Param::new("nSize", tys[13].clone(), None), Param::new("lpMeta16Data", tys[33].clone(), None), Param::new("hdcRef", tys[26].clone(), None), Param::new("lpMFP", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2484, 0, "SetWindowContextHelpId", "SetWindowContextHelpId", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2485, 0, "SetWindowDisplayAffinity", "SetWindowDisplayAffinity", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("dwAffinity", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2486, 0, "SetWindowExtEx", "SetWindowExtEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lpsz", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2487, 0, "SetWindowFeedbackSetting", "SetWindowFeedbackSetting", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("feedback", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("size", tys[13].clone(), None), Param::new("configuration", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2488, 0, "SetWindowLongA", "SetWindowLongA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), Param::new("dwNewLong", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2489, 0, "SetWindowLongPtrA", "SetWindowLongPtrA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), Param::new("dwNewLong", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2490, 0, "SetWindowOrgEx", "SetWindowOrgEx", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lppt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2491, 0, "SetWindowPlacement", "SetWindowPlacement", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpwndpl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2492, 0, "SetWindowPos", "SetWindowPos", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hWndInsertAfter", tys[26].clone(), None), Param::new("X", tys[13].clone(), None), Param::new("Y", tys[13].clone(), None), Param::new("cx", tys[13].clone(), None), Param::new("cy", tys[13].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2493, 0, "SetWindowRgn", "SetWindowRgn", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hRgn", tys[26].clone(), None), Param::new("bRedraw", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2494, 0, "SetWindowTextA", "SetWindowTextA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2495, 0, "SetWindowWord", "SetWindowWord", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nIndex", tys[13].clone(), None), Param::new("wNewWord", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_39(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2496, 0, "SetWindowsHookA", "SetWindowsHookA", 0, vec![Param::new("nFilterType", tys[13].clone(), None), Param::new("pfnFilterProc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2497, 0, "SetWindowsHookExA", "SetWindowsHookExA", 0, vec![Param::new("idHook", tys[13].clone(), None), Param::new("lpfn", tys[26].clone(), None), Param::new("hmod", tys[26].clone(), None), Param::new("dwThreadId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2498, 0, "SetWorldTransform", "SetWorldTransform", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpxf", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2499, 0, "SetXStateFeaturesMask", "SetXStateFeaturesMask", 0, vec![Param::new("Context", tys[26].clone(), None), Param::new("FeatureMask", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2500, 0, "SetupComm", "SetupComm", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("dwInQueue", tys[13].clone(), None), Param::new("dwOutQueue", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2501, 0, "ShellAboutA", "ShellAboutA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("szApp", tys[33].clone(), None), Param::new("szOtherStuff", tys[33].clone(), None), Param::new("hIcon", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2502, 0, "ShellExecuteA", "ShellExecuteA", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("lpOperation", tys[33].clone(), None), Param::new("lpFile", tys[33].clone(), None), Param::new("lpParameters", tys[33].clone(), None), Param::new("lpDirectory", tys[33].clone(), None), Param::new("nShowCmd", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2503, 0, "ShellExecuteExA", "ShellExecuteExA", 0, vec![Param::new("pExecInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2504, 0, "Shell_NotifyIconA", "Shell_NotifyIconA", 0, vec![Param::new("dwMessage", tys[13].clone(), None), Param::new("lpData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2505, 0, "Shell_NotifyIconGetRect", "Shell_NotifyIconGetRect", 0, vec![Param::new("identifier", tys[26].clone(), None), Param::new("iconLocation", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2506, 0, "ShowCaret", "ShowCaret", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2507, 0, "ShowCursor", "ShowCursor", 0, vec![Param::new("bShow", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2508, 0, "ShowOwnedPopups", "ShowOwnedPopups", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("fShow", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2509, 0, "ShowScrollBar", "ShowScrollBar", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("wBar", tys[13].clone(), None), Param::new("bShow", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2510, 0, "ShowWindow", "ShowWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nCmdShow", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2511, 0, "ShowWindowAsync", "ShowWindowAsync", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("nCmdShow", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2512, 0, "ShutdownBlockReasonCreate", "ShutdownBlockReasonCreate", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("pwszReason", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2513, 0, "ShutdownBlockReasonDestroy", "ShutdownBlockReasonDestroy", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2514, 0, "ShutdownBlockReasonQuery", "ShutdownBlockReasonQuery", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("pwszBuff", tys[28].clone(), None), Param::new("pcchBuff", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2515, 0, "SignalObjectAndWait", "SignalObjectAndWait", 0, vec![Param::new("hObjectToSignal", tys[47].clone(), None), Param::new("hObjectToWaitOn", tys[47].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), Param::new("bAlertable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2516, 0, "SizeofResource", "SizeofResource", 0, vec![Param::new("hModule", tys[26].clone(), None), Param::new("hResInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2517, 0, "SkipPointerFrameMessages", "SkipPointerFrameMessages", 0, vec![Param::new("pointerId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2518, 0, "Sleep", "Sleep", 0, vec![Param::new("dwMilliseconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2519, 0, "SleepConditionVariableCS", "SleepConditionVariableCS", 0, vec![Param::new("ConditionVariable", tys[26].clone(), None), Param::new("CriticalSection", tys[26].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2520, 0, "SleepEx", "SleepEx", 0, vec![Param::new("dwMilliseconds", tys[13].clone(), None), Param::new("bAlertable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2521, 0, "SoundSentry", "SoundSentry", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2522, 0, "StartDocA", "StartDocA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("lpdi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2523, 0, "StartDocPrinterA", "StartDocPrinterA", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("Level", tys[13].clone(), None), Param::new("pDocInfo", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2524, 0, "StartPage", "StartPage", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2525, 0, "StartPagePrinter", "StartPagePrinter", 0, vec![Param::new("hPrinter", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2526, 0, "StartServiceA", "StartServiceA", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwNumServiceArgs", tys[13].clone(), None), Param::new("lpServiceArgVectors", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2527, 0, "StartServiceCtrlDispatcherA", "StartServiceCtrlDispatcherA", 0, vec![Param::new("lpServiceStartTable", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2528, 0, "StartThreadpoolIo", "StartThreadpoolIo", 0, vec![Param::new("pio", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2529, 0, "StgConvertVariantToProperty", "StgConvertVariantToProperty", 0, vec![Param::new("pvar", tys[26].clone(), None), Param::new("CodePage", tys[11].clone(), None), Param::new("pprop", tys[26].clone(), None), Param::new("pcb", tys[39].clone(), None), Param::new("pid", tys[13].clone(), None), Param::new("fReserved", tys[15].clone(), None), Param::new("pcIndirect", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2530, 0, "StgCreateDocfile", "StgCreateDocfile", 0, vec![Param::new("pwcsName", tys[28].clone(), None), Param::new("grfMode", tys[13].clone(), None), Param::new("reserved", tys[13].clone(), None), Param::new("ppstgOpen", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2531, 0, "StgCreateDocfileOnILockBytes", "StgCreateDocfileOnILockBytes", 0, vec![Param::new("plkbyt", tys[26].clone(), None), Param::new("grfMode", tys[13].clone(), None), Param::new("reserved", tys[13].clone(), None), Param::new("ppstgOpen", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2532, 0, "StgCreatePropSetStg", "StgCreatePropSetStg", 0, vec![Param::new("pStorage", tys[26].clone(), None), Param::new("dwReserved", tys[13].clone(), None), Param::new("ppPropSetStg", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2533, 0, "StgCreatePropStg", "StgCreatePropStg", 0, vec![Param::new("pUnk", tys[26].clone(), None), Param::new("fmtid", tys[26].clone(), None), Param::new("pclsid", tys[26].clone(), None), Param::new("grfFlags", tys[13].clone(), None), Param::new("dwReserved", tys[13].clone(), None), Param::new("ppPropStg", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2534, 0, "StgCreateStorageEx", "StgCreateStorageEx", 0, vec![Param::new("pwcsName", tys[28].clone(), None), Param::new("grfMode", tys[13].clone(), None), Param::new("stgfmt", tys[13].clone(), None), Param::new("grfAttrs", tys[13].clone(), None), Param::new("pStgOptions", tys[26].clone(), None), Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("riid", tys[26].clone(), None), Param::new("ppObjectOpen", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2535, 0, "StgIsStorageFile", "StgIsStorageFile", 0, vec![Param::new("pwcsName", tys[28].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2536, 0, "StgIsStorageILockBytes", "StgIsStorageILockBytes", 0, vec![Param::new("plkbyt", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2537, 0, "StgOpenPropStg", "StgOpenPropStg", 0, vec![Param::new("pUnk", tys[26].clone(), None), Param::new("fmtid", tys[26].clone(), None), Param::new("grfFlags", tys[13].clone(), None), Param::new("dwReserved", tys[13].clone(), None), Param::new("ppPropStg", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2538, 0, "StgOpenStorage", "StgOpenStorage", 0, vec![Param::new("pwcsName", tys[28].clone(), None), Param::new("pstgPriority", tys[26].clone(), None), Param::new("grfMode", tys[13].clone(), None), Param::new("snbExclude", tys[29].clone(), None), Param::new("reserved", tys[13].clone(), None), Param::new("ppstgOpen", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2539, 0, "StgOpenStorageEx", "StgOpenStorageEx", 0, vec![Param::new("pwcsName", tys[28].clone(), None), Param::new("grfMode", tys[13].clone(), None), Param::new("stgfmt", tys[13].clone(), None), Param::new("grfAttrs", tys[13].clone(), None), Param::new("pStgOptions", tys[26].clone(), None), Param::new("pSecurityDescriptor", tys[37].clone(), None), Param::new("riid", tys[26].clone(), None), Param::new("ppObjectOpen", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2540, 0, "StgOpenStorageOnILockBytes", "StgOpenStorageOnILockBytes", 0, vec![Param::new("plkbyt", tys[26].clone(), None), Param::new("pstgPriority", tys[26].clone(), None), Param::new("grfMode", tys[13].clone(), None), Param::new("snbExclude", tys[29].clone(), None), Param::new("reserved", tys[13].clone(), None), Param::new("ppstgOpen", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2541, 0, "StgSetTimes", "StgSetTimes", 0, vec![Param::new("lpszName", tys[28].clone(), None), Param::new("pctime", tys[26].clone(), None), Param::new("patime", tys[26].clone(), None), Param::new("pmtime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2542, 0, "StretchBlt", "StretchBlt", 0, vec![Param::new("hdcDest", tys[26].clone(), None), Param::new("xDest", tys[13].clone(), None), Param::new("yDest", tys[13].clone(), None), Param::new("wDest", tys[13].clone(), None), Param::new("hDest", tys[13].clone(), None), Param::new("hdcSrc", tys[26].clone(), None), Param::new("xSrc", tys[13].clone(), None), Param::new("ySrc", tys[13].clone(), None), Param::new("wSrc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2543, 0, "StretchDIBits", "StretchDIBits", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("xDest", tys[13].clone(), None), Param::new("yDest", tys[13].clone(), None), Param::new("DestWidth", tys[13].clone(), None), Param::new("DestHeight", tys[13].clone(), None), Param::new("xSrc", tys[13].clone(), None), Param::new("ySrc", tys[13].clone(), None), Param::new("SrcWidth", tys[13].clone(), None), Param::new("SrcHeight", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2544, 0, "StrokeAndFillPath", "StrokeAndFillPath", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2545, 0, "StrokePath", "StrokePath", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2546, 0, "SubmitThreadpoolWork", "SubmitThreadpoolWork", 0, vec![Param::new("pwk", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2547, 0, "SubtractRect", "SubtractRect", 0, vec![Param::new("lprcDst", tys[26].clone(), None), Param::new("lprcSrc1", tys[26].clone(), None), Param::new("lprcSrc2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2548, 0, "SuspendThread", "SuspendThread", 0, vec![Param::new("hThread", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2549, 0, "SwapBuffers", "SwapBuffers", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2550, 0, "SwapMouseButton", "SwapMouseButton", 0, vec![Param::new("fSwap", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2551, 0, "SwitchDesktop", "SwitchDesktop", 0, vec![Param::new("hDesktop", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2552, 0, "SwitchToFiber", "SwitchToFiber", 0, vec![Param::new("lpFiber", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2553, 0, "SwitchToThisWindow", "SwitchToThisWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("fUnknown", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2554, 0, "SwitchToThread", "SwitchToThread", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2555, 0, "SystemParametersInfoA", "SystemParametersInfoA", 0, vec![Param::new("uiAction", tys[13].clone(), None), Param::new("uiParam", tys[13].clone(), None), Param::new("pvParam", tys[37].clone(), None), Param::new("fWinIni", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2556, 0, "SystemParametersInfoForDpi", "SystemParametersInfoForDpi", 0, vec![Param::new("uiAction", tys[13].clone(), None), Param::new("uiParam", tys[13].clone(), None), Param::new("pvParam", tys[37].clone(), None), Param::new("fWinIni", tys[13].clone(), None), Param::new("dpi", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2557, 0, "SystemTimeToFileTime", "SystemTimeToFileTime", 0, vec![Param::new("lpSystemTime", tys[26].clone(), None), Param::new("lpFileTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2558, 0, "SystemTimeToTzSpecificLocalTime", "SystemTimeToTzSpecificLocalTime", 0, vec![Param::new("lpTimeZoneInformation", tys[26].clone(), None), Param::new("lpUniversalTime", tys[26].clone(), None), Param::new("lpLocalTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2559, 0, "SystemTimeToTzSpecificLocalTimeEx", "SystemTimeToTzSpecificLocalTimeEx", 0, vec![Param::new("lpTimeZoneInformation", tys[26].clone(), None), Param::new("lpUniversalTime", tys[26].clone(), None), Param::new("lpLocalTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_40(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2560, 0, "TabbedTextOutA", "TabbedTextOutA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("chCount", tys[13].clone(), None), Param::new("nTabPositions", tys[13].clone(), None), Param::new("lpnTabStopPositions", tys[39].clone(), None), Param::new("nTabOrigin", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2561, 0, "TerminateJobObject", "TerminateJobObject", 0, vec![Param::new("hJob", tys[47].clone(), None), Param::new("uExitCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2562, 0, "TerminateProcess", "TerminateProcess", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("uExitCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2563, 0, "TerminateProcessOnMemoryExhaustion", "TerminateProcessOnMemoryExhaustion", 0, vec![Param::new("FailedAllocationSize", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2564, 0, "TerminateThread", "TerminateThread", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("dwExitCode", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2565, 0, "TextOutA", "TextOutA", 0, vec![Param::new("hdc", tys[26].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("c", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2566, 0, "TileWindows", "TileWindows", 0, vec![Param::new("hwndParent", tys[26].clone(), None), Param::new("wHow", tys[13].clone(), None), Param::new("lpRect", tys[26].clone(), None), Param::new("cKids", tys[13].clone(), None), Param::new("lpKids", tys[27].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2567, 0, "TlsAlloc", "TlsAlloc", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2568, 0, "TlsFree", "TlsFree", 0, vec![Param::new("dwTlsIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2569, 0, "TlsGetValue", "TlsGetValue", 0, vec![Param::new("dwTlsIndex", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2570, 0, "TlsSetValue", "TlsSetValue", 0, vec![Param::new("dwTlsIndex", tys[13].clone(), None), Param::new("lpTlsValue", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2571, 0, "ToAscii", "ToAscii", 0, vec![Param::new("uVirtKey", tys[13].clone(), None), Param::new("uScanCode", tys[13].clone(), None), Param::new("lpKeyState", tys[33].clone(), None), Param::new("lpChar", tys[28].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2572, 0, "ToAsciiEx", "ToAsciiEx", 0, vec![Param::new("uVirtKey", tys[13].clone(), None), Param::new("uScanCode", tys[13].clone(), None), Param::new("lpKeyState", tys[33].clone(), None), Param::new("lpChar", tys[28].clone(), None), Param::new("uFlags", tys[13].clone(), None), Param::new("dwhkl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2573, 0, "ToUnicode", "ToUnicode", 0, vec![Param::new("wVirtKey", tys[13].clone(), None), Param::new("wScanCode", tys[13].clone(), None), Param::new("lpKeyState", tys[33].clone(), None), Param::new("pwszBuff", tys[28].clone(), None), Param::new("cchBuff", tys[13].clone(), None), Param::new("wFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2574, 0, "ToUnicodeEx", "ToUnicodeEx", 0, vec![Param::new("wVirtKey", tys[13].clone(), None), Param::new("wScanCode", tys[13].clone(), None), Param::new("lpKeyState", tys[33].clone(), None), Param::new("pwszBuff", tys[28].clone(), None), Param::new("cchBuff", tys[13].clone(), None), Param::new("wFlags", tys[13].clone(), None), Param::new("dwhkl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2575, 0, "TrackMouseEvent", "TrackMouseEvent", 0, vec![Param::new("lpEventTrack", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2576, 0, "TrackPopupMenu", "TrackPopupMenu", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uFlags", tys[13].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("nReserved", tys[13].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("prcRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2577, 0, "TrackPopupMenuEx", "TrackPopupMenuEx", 0, vec![Param::new("hMenu", tys[26].clone(), None), Param::new("uFlags", tys[13].clone(), None), Param::new("x", tys[13].clone(), None), Param::new("y", tys[13].clone(), None), Param::new("hwnd", tys[26].clone(), None), Param::new("lptpm", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2578, 0, "TransactNamedPipe", "TransactNamedPipe", 0, vec![Param::new("hNamedPipe", tys[47].clone(), None), Param::new("lpInBuffer", tys[37].clone(), None), Param::new("nInBufferSize", tys[13].clone(), None), Param::new("lpOutBuffer", tys[37].clone(), None), Param::new("nOutBufferSize", tys[13].clone(), None), Param::new("lpBytesRead", tys[39].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2579, 0, "TranslateAcceleratorA", "TranslateAcceleratorA", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hAccTable", tys[26].clone(), None), Param::new("lpMsg", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2580, 0, "TranslateCharsetInfo", "TranslateCharsetInfo", 0, vec![Param::new("lpSrc", tys[39].clone(), None), Param::new("lpCs", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2581, 0, "TranslateMDISysAccel", "TranslateMDISysAccel", 0, vec![Param::new("hWndClient", tys[26].clone(), None), Param::new("lpMsg", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2582, 0, "TranslateMessage", "TranslateMessage", 0, vec![Param::new("lpMsg", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2583, 0, "TransmitCommChar", "TransmitCommChar", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("cChar", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2584, 0, "TransmitFile", "TransmitFile", 0, vec![Param::new("hSocket", tys[14].clone(), None), Param::new("hFile", tys[47].clone(), None), Param::new("nNumberOfBytesToWrite", tys[13].clone(), None), Param::new("nNumberOfBytesPerSend", tys[13].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), Param::new("lpTransmitBuffers", tys[26].clone(), None), Param::new("dwReserved", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2585, 0, "TransparentBlt", "TransparentBlt", 0, vec![Param::new("hdcDest", tys[26].clone(), None), Param::new("xoriginDest", tys[13].clone(), None), Param::new("yoriginDest", tys[13].clone(), None), Param::new("wDest", tys[13].clone(), None), Param::new("hDest", tys[13].clone(), None), Param::new("hdcSrc", tys[26].clone(), None), Param::new("xoriginSrc", tys[13].clone(), None), Param::new("yoriginSrc", tys[13].clone(), None), Param::new("wSrc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2586, 0, "TryAcquireSRWLockExclusive", "TryAcquireSRWLockExclusive", 0, vec![Param::new("SRWLock", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2587, 0, "TryAcquireSRWLockShared", "TryAcquireSRWLockShared", 0, vec![Param::new("SRWLock", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2588, 0, "TryEnterCriticalSection", "TryEnterCriticalSection", 0, vec![Param::new("lpCriticalSection", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2589, 0, "TrySubmitThreadpoolCallback", "TrySubmitThreadpoolCallback", 0, vec![Param::new("pfns", tys[26].clone(), None), Param::new("pv", tys[37].clone(), None), Param::new("pcbe", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2590, 0, "TzSpecificLocalTimeToSystemTime", "TzSpecificLocalTimeToSystemTime", 0, vec![Param::new("lpTimeZoneInformation", tys[26].clone(), None), Param::new("lpLocalTime", tys[26].clone(), None), Param::new("lpUniversalTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2591, 0, "TzSpecificLocalTimeToSystemTimeEx", "TzSpecificLocalTimeToSystemTimeEx", 0, vec![Param::new("lpTimeZoneInformation", tys[26].clone(), None), Param::new("lpLocalTime", tys[26].clone(), None), Param::new("lpUniversalTime", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2592, 0, "UmsThreadYield", "UmsThreadYield", 0, vec![Param::new("SchedulerParam", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2593, 0, "UnhandledExceptionFilter", "UnhandledExceptionFilter", 0, vec![Param::new("ExceptionInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2594, 0, "UnhookWinEvent", "UnhookWinEvent", 0, vec![Param::new("hWinEventHook", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2595, 0, "UnhookWindowsHook", "UnhookWindowsHook", 0, vec![Param::new("nCode", tys[13].clone(), None), Param::new("pfnFilterProc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2596, 0, "UnhookWindowsHookEx", "UnhookWindowsHookEx", 0, vec![Param::new("hhk", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2597, 0, "UnionRect", "UnionRect", 0, vec![Param::new("lprcDst", tys[26].clone(), None), Param::new("lprcSrc1", tys[26].clone(), None), Param::new("lprcSrc2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2598, 0, "UnloadKeyboardLayout", "UnloadKeyboardLayout", 0, vec![Param::new("hkl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2599, 0, "UnlockFile", "UnlockFile", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("dwFileOffsetLow", tys[13].clone(), None), Param::new("dwFileOffsetHigh", tys[13].clone(), None), Param::new("nNumberOfBytesToUnlockLow", tys[13].clone(), None), Param::new("nNumberOfBytesToUnlockHigh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2600, 0, "UnlockFileEx", "UnlockFileEx", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("dwReserved", tys[13].clone(), None), Param::new("nNumberOfBytesToUnlockLow", tys[13].clone(), None), Param::new("nNumberOfBytesToUnlockHigh", tys[13].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2601, 0, "UnlockServiceDatabase", "UnlockServiceDatabase", 0, vec![Param::new("ScLock", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2602, 0, "UnmapViewOfFile", "UnmapViewOfFile", 0, vec![Param::new("lpBaseAddress", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2603, 0, "UnmapViewOfFileEx", "UnmapViewOfFileEx", 0, vec![Param::new("BaseAddress", tys[37].clone(), None), Param::new("UnmapFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2604, 0, "UnpackDDElParam", "UnpackDDElParam", 0, vec![Param::new("msg", tys[13].clone(), None), Param::new("lParam", tys[14].clone(), None), Param::new("puiLo", tys[36].clone(), None), Param::new("puiHi", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2605, 0, "UnrealizeObject", "UnrealizeObject", 0, vec![Param::new("h", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2606, 0, "UnregisterApplicationRecoveryCallback", "UnregisterApplicationRecoveryCallback", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2607, 0, "UnregisterApplicationRestart", "UnregisterApplicationRestart", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2608, 0, "UnregisterBadMemoryNotification", "UnregisterBadMemoryNotification", 0, vec![Param::new("RegistrationHandle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2609, 0, "UnregisterClassA", "UnregisterClassA", 0, vec![Param::new("lpClassName", tys[33].clone(), None), Param::new("hInstance", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2610, 0, "UnregisterDeviceNotification", "UnregisterDeviceNotification", 0, vec![Param::new("Handle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2611, 0, "UnregisterHotKey", "UnregisterHotKey", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("id", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2612, 0, "UnregisterPointerInputTarget", "UnregisterPointerInputTarget", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pointerType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2613, 0, "UnregisterPointerInputTargetEx", "UnregisterPointerInputTargetEx", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("pointerType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2614, 0, "UnregisterPowerSettingNotification", "UnregisterPowerSettingNotification", 0, vec![Param::new("Handle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2615, 0, "UnregisterSuspendResumeNotification", "UnregisterSuspendResumeNotification", 0, vec![Param::new("Handle", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2616, 0, "UnregisterTouchWindow", "UnregisterTouchWindow", 0, vec![Param::new("hwnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2617, 0, "UnregisterWait", "UnregisterWait", 0, vec![Param::new("WaitHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2618, 0, "UnregisterWaitEx", "UnregisterWaitEx", 0, vec![Param::new("WaitHandle", tys[47].clone(), None), Param::new("CompletionEvent", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2619, 0, "UpdateColors", "UpdateColors", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2620, 0, "UpdateICMRegKeyA", "UpdateICMRegKeyA", 0, vec![Param::new("reserved", tys[13].clone(), None), Param::new("lpszCMID", tys[33].clone(), None), Param::new("lpszFileName", tys[33].clone(), None), Param::new("command", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2621, 0, "UpdateLayeredWindow", "UpdateLayeredWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hdcDst", tys[26].clone(), None), Param::new("pptDst", tys[26].clone(), None), Param::new("psize", tys[26].clone(), None), Param::new("hdcSrc", tys[26].clone(), None), Param::new("pptSrc", tys[26].clone(), None), Param::new("crKey", tys[13].clone(), None), Param::new("pblend", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2622, 0, "UpdateLayeredWindowIndirect", "UpdateLayeredWindowIndirect", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("pULWInfo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2623, 0, "UpdateProcThreadAttribute", "UpdateProcThreadAttribute", 0, vec![Param::new("lpAttributeList", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("Attribute", tys[14].clone(), None), Param::new("lpValue", tys[37].clone(), None), Param::new("cbSize", tys[14].clone(), None), Param::new("lpPreviousValue", tys[37].clone(), None), Param::new("lpReturnSize", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_41(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2624, 0, "UpdateResourceA", "UpdateResourceA", 0, vec![Param::new("hUpdate", tys[47].clone(), None), Param::new("lpType", tys[33].clone(), None), Param::new("lpName", tys[33].clone(), None), Param::new("wLanguage", tys[11].clone(), None), Param::new("lpData", tys[37].clone(), None), Param::new("cb", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2625, 0, "UpdateWindow", "UpdateWindow", 0, vec![Param::new("hWnd", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2626, 0, "UploadPrinterDriverPackageA", "UploadPrinterDriverPackageA", 0, vec![Param::new("pszServer", tys[33].clone(), None), Param::new("pszInfPath", tys[33].clone(), None), Param::new("pszEnvironment", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("hwnd", tys[26].clone(), None), Param::new("pszDestInfPath", tys[33].clone(), None), Param::new("pcchDestInfPath", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2627, 0, "UserHandleGrantAccess", "UserHandleGrantAccess", 0, vec![Param::new("hUserHandle", tys[47].clone(), None), Param::new("hJob", tys[47].clone(), None), Param::new("bGrant", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2628, 0, "UuidCompare", "UuidCompare", 0, vec![Param::new("Uuid1", tys[26].clone(), None), Param::new("Uuid2", tys[26].clone(), None), Param::new("Status", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2629, 0, "UuidCreate", "UuidCreate", 0, vec![Param::new("Uuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2630, 0, "UuidCreateNil", "UuidCreateNil", 0, vec![Param::new("NilUuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2631, 0, "UuidCreateSequential", "UuidCreateSequential", 0, vec![Param::new("Uuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2632, 0, "UuidEqual", "UuidEqual", 0, vec![Param::new("Uuid1", tys[26].clone(), None), Param::new("Uuid2", tys[26].clone(), None), Param::new("Status", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2633, 0, "UuidFromStringA", "UuidFromStringA", 0, vec![Param::new("StringUuid", tys[33].clone(), None), Param::new("Uuid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2634, 0, "UuidHash", "UuidHash", 0, vec![Param::new("Uuid", tys[26].clone(), None), Param::new("Status", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2635, 0, "UuidIsNil", "UuidIsNil", 0, vec![Param::new("Uuid", tys[26].clone(), None), Param::new("Status", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2636, 0, "UuidToStringA", "UuidToStringA", 0, vec![Param::new("Uuid", tys[26].clone(), None), Param::new("StringUuid", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2637, 0, "VARIANT_UserFree", "VARIANT_UserFree", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2638, 0, "VARIANT_UserFree64", "VARIANT_UserFree64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2639, 0, "VARIANT_UserMarshal", "VARIANT_UserMarshal", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2640, 0, "VARIANT_UserMarshal64", "VARIANT_UserMarshal64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2641, 0, "VARIANT_UserSize", "VARIANT_UserSize", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2642, 0, "VARIANT_UserSize64", "VARIANT_UserSize64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2643, 0, "VARIANT_UserUnmarshal", "VARIANT_UserUnmarshal", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2644, 0, "VARIANT_UserUnmarshal64", "VARIANT_UserUnmarshal64", 0, vec![Param::new("arg0", tys[39].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arg2", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2645, 0, "ValidateRect", "ValidateRect", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("lpRect", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2646, 0, "ValidateRgn", "ValidateRgn", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("hRgn", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2647, 0, "VerLanguageNameA", "VerLanguageNameA", 0, vec![Param::new("wLang", tys[13].clone(), None), Param::new("szLang", tys[33].clone(), None), Param::new("cchLang", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2648, 0, "VerSetConditionMask", "VerSetConditionMask", 0, vec![Param::new("ConditionMask", tys[14].clone(), None), Param::new("TypeMask", tys[13].clone(), None), Param::new("Condition", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2649, 0, "VerifyScripts", "VerifyScripts", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("lpLocaleScripts", tys[28].clone(), None), Param::new("cchLocaleScripts", tys[13].clone(), None), Param::new("lpTestScripts", tys[28].clone(), None), Param::new("cchTestScripts", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2650, 0, "VerifyVersionInfoA", "VerifyVersionInfoA", 0, vec![Param::new("lpVersionInformation", tys[26].clone(), None), Param::new("dwTypeMask", tys[13].clone(), None), Param::new("dwlConditionMask", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2651, 0, "VirtualAlloc", "VirtualAlloc", 0, vec![Param::new("lpAddress", tys[48].clone(), None), Param::new("dwSize", tys[18].clone(), None), Param::new("flAllocationType", tys[9].clone(), None), Param::new("flProtect", tys[8].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2652, 0, "VirtualAllocEx", "VirtualAllocEx", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), Param::new("flAllocationType", tys[13].clone(), None), Param::new("flProtect", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2653, 0, "VirtualAllocExNuma", "VirtualAllocExNuma", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), Param::new("flAllocationType", tys[13].clone(), None), Param::new("flProtect", tys[13].clone(), None), Param::new("nndPreferred", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2654, 0, "VirtualAllocFromApp", "VirtualAllocFromApp", 0, vec![Param::new("BaseAddress", tys[37].clone(), None), Param::new("Size", tys[14].clone(), None), Param::new("AllocationType", tys[13].clone(), None), Param::new("Protection", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2655, 0, "VirtualFree", "VirtualFree", 0, vec![Param::new("lpAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), Param::new("dwFreeType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2656, 0, "VirtualFreeEx", "VirtualFreeEx", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), Param::new("dwFreeType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2657, 0, "VirtualLock", "VirtualLock", 0, vec![Param::new("lpAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2658, 0, "VirtualProtect", "VirtualProtect", 0, vec![Param::new("lpAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), Param::new("flNewProtect", tys[13].clone(), None), Param::new("lpflOldProtect", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2659, 0, "VirtualProtectEx", "VirtualProtectEx", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), Param::new("flNewProtect", tys[13].clone(), None), Param::new("lpflOldProtect", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2660, 0, "VirtualProtectFromApp", "VirtualProtectFromApp", 0, vec![Param::new("Address", tys[37].clone(), None), Param::new("Size", tys[14].clone(), None), Param::new("NewProtection", tys[13].clone(), None), Param::new("OldProtection", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2661, 0, "VirtualQuery", "VirtualQuery", 0, vec![Param::new("lpAddress", tys[37].clone(), None), Param::new("lpBuffer", tys[26].clone(), None), Param::new("dwLength", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2662, 0, "VirtualQueryEx", "VirtualQueryEx", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpAddress", tys[37].clone(), None), Param::new("lpBuffer", tys[26].clone(), None), Param::new("dwLength", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2663, 0, "VirtualUnlock", "VirtualUnlock", 0, vec![Param::new("lpAddress", tys[37].clone(), None), Param::new("dwSize", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2664, 0, "VkKeyScanA", "VkKeyScanA", 0, vec![Param::new("ch", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2665, 0, "VkKeyScanExA", "VkKeyScanExA", 0, vec![Param::new("ch", tys[15].clone(), None), Param::new("dwhkl", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2666, 0, "WNetAddConnection2A", "WNetAddConnection2A", 0, vec![Param::new("lpNetResource", tys[26].clone(), None), Param::new("lpPassword", tys[33].clone(), None), Param::new("lpUserName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2667, 0, "WNetAddConnection3A", "WNetAddConnection3A", 0, vec![Param::new("hwndOwner", tys[26].clone(), None), Param::new("lpNetResource", tys[26].clone(), None), Param::new("lpPassword", tys[33].clone(), None), Param::new("lpUserName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2668, 0, "WNetAddConnectionA", "WNetAddConnectionA", 0, vec![Param::new("lpRemoteName", tys[33].clone(), None), Param::new("lpPassword", tys[33].clone(), None), Param::new("lpLocalName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2669, 0, "WNetCancelConnection2A", "WNetCancelConnection2A", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("fForce", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2670, 0, "WNetCancelConnectionA", "WNetCancelConnectionA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("fForce", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2671, 0, "WNetCloseEnum", "WNetCloseEnum", 0, vec![Param::new("hEnum", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2672, 0, "WNetConnectionDialog", "WNetConnectionDialog", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("dwType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2673, 0, "WNetConnectionDialog1A", "WNetConnectionDialog1A", 0, vec![Param::new("lpConnDlgStruct", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2674, 0, "WNetDisconnectDialog", "WNetDisconnectDialog", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("dwType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2675, 0, "WNetDisconnectDialog1A", "WNetDisconnectDialog1A", 0, vec![Param::new("lpConnDlgStruct", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2676, 0, "WNetEnumResourceA", "WNetEnumResourceA", 0, vec![Param::new("hEnum", tys[47].clone(), None), Param::new("lpcCount", tys[39].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("lpBufferSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2677, 0, "WNetGetConnectionA", "WNetGetConnectionA", 0, vec![Param::new("lpLocalName", tys[33].clone(), None), Param::new("lpRemoteName", tys[33].clone(), None), Param::new("lpnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2678, 0, "WNetGetLastErrorA", "WNetGetLastErrorA", 0, vec![Param::new("lpError", tys[39].clone(), None), Param::new("lpErrorBuf", tys[33].clone(), None), Param::new("nErrorBufSize", tys[13].clone(), None), Param::new("lpNameBuf", tys[33].clone(), None), Param::new("nNameBufSize", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2679, 0, "WNetGetNetworkInformationA", "WNetGetNetworkInformationA", 0, vec![Param::new("lpProvider", tys[33].clone(), None), Param::new("lpNetInfoStruct", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2680, 0, "WNetGetProviderNameA", "WNetGetProviderNameA", 0, vec![Param::new("dwNetType", tys[13].clone(), None), Param::new("lpProviderName", tys[33].clone(), None), Param::new("lpBufferSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2681, 0, "WNetGetResourceInformationA", "WNetGetResourceInformationA", 0, vec![Param::new("lpNetResource", tys[26].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("lpcbBuffer", tys[39].clone(), None), Param::new("lplpSystem", tys[34].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2682, 0, "WNetGetResourceParentA", "WNetGetResourceParentA", 0, vec![Param::new("lpNetResource", tys[26].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("lpcbBuffer", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2683, 0, "WNetGetUniversalNameA", "WNetGetUniversalNameA", 0, vec![Param::new("lpLocalPath", tys[33].clone(), None), Param::new("dwInfoLevel", tys[13].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("lpBufferSize", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2684, 0, "WNetGetUserA", "WNetGetUserA", 0, vec![Param::new("lpName", tys[33].clone(), None), Param::new("lpUserName", tys[33].clone(), None), Param::new("lpnLength", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2685, 0, "WNetOpenEnumA", "WNetOpenEnumA", 0, vec![Param::new("dwScope", tys[13].clone(), None), Param::new("dwType", tys[13].clone(), None), Param::new("dwUsage", tys[13].clone(), None), Param::new("lpNetResource", tys[26].clone(), None), Param::new("lphEnum", tys[32].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2686, 0, "WNetUseConnectionA", "WNetUseConnectionA", 0, vec![Param::new("hwndOwner", tys[26].clone(), None), Param::new("lpNetResource", tys[26].clone(), None), Param::new("lpPassword", tys[33].clone(), None), Param::new("lpUserId", tys[33].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpAccessName", tys[33].clone(), None), Param::new("lpBufferSize", tys[39].clone(), None), Param::new("lpResult", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2687, 0, "WSAAsyncGetHostByAddr", "WSAAsyncGetHostByAddr", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("wMsg", tys[13].clone(), None), Param::new("addr", tys[33].clone(), None), Param::new("len", tys[13].clone(), None), Param::new("type", tys[13].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("buflen", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_42(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2688, 0, "WSAAsyncGetHostByName", "WSAAsyncGetHostByName", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("wMsg", tys[13].clone(), None), Param::new("name", tys[33].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("buflen", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2689, 0, "WSAAsyncGetProtoByName", "WSAAsyncGetProtoByName", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("wMsg", tys[13].clone(), None), Param::new("name", tys[33].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("buflen", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2690, 0, "WSAAsyncGetProtoByNumber", "WSAAsyncGetProtoByNumber", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("wMsg", tys[13].clone(), None), Param::new("number", tys[13].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("buflen", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2691, 0, "WSAAsyncGetServByName", "WSAAsyncGetServByName", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("wMsg", tys[13].clone(), None), Param::new("name", tys[33].clone(), None), Param::new("proto", tys[33].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("buflen", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2692, 0, "WSAAsyncGetServByPort", "WSAAsyncGetServByPort", 0, vec![Param::new("hWnd", tys[26].clone(), None), Param::new("wMsg", tys[13].clone(), None), Param::new("port", tys[13].clone(), None), Param::new("proto", tys[33].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("buflen", tys[13].clone(), None), ], Some(tys[47].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2693, 0, "WSAAsyncSelect", "WSAAsyncSelect", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("hWnd", tys[26].clone(), None), Param::new("wMsg", tys[13].clone(), None), Param::new("lEvent", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2694, 0, "WSACancelAsyncRequest", "WSACancelAsyncRequest", 0, vec![Param::new("hAsyncTaskHandle", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2695, 0, "WSACancelBlockingCall", "WSACancelBlockingCall", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2696, 0, "WSACleanup", "WSACleanup", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2697, 0, "WSAGetLastError", "WSAGetLastError", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2698, 0, "WSAIsBlocking", "WSAIsBlocking", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2699, 0, "WSARecvEx", "WSARecvEx", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("len", tys[13].clone(), None), Param::new("flags", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2700, 0, "WSASetBlockingHook", "WSASetBlockingHook", 0, vec![Param::new("lpBlockFunc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2701, 0, "WSASetLastError", "WSASetLastError", 0, vec![Param::new("iError", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2702, 0, "WSAStartup", "WSAStartup", 0, vec![Param::new("wVersionRequired", tys[11].clone(), None), Param::new("lpWSAData", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2703, 0, "WSAUnhookBlockingHook", "WSAUnhookBlockingHook", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2704, 0, "WTSGetActiveConsoleSessionId", "WTSGetActiveConsoleSessionId", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2705, 0, "WaitCommEvent", "WaitCommEvent", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpEvtMask", tys[39].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2706, 0, "WaitForDebugEvent", "WaitForDebugEvent", 0, vec![Param::new("lpDebugEvent", tys[26].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2707, 0, "WaitForDebugEventEx", "WaitForDebugEventEx", 0, vec![Param::new("lpDebugEvent", tys[26].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2708, 0, "WaitForInputIdle", "WaitForInputIdle", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2709, 0, "WaitForMultipleObjects", "WaitForMultipleObjects", 0, vec![Param::new("nCount", tys[13].clone(), None), Param::new("lpHandles", tys[38].clone(), None), Param::new("bWaitAll", tys[13].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2710, 0, "WaitForMultipleObjectsEx", "WaitForMultipleObjectsEx", 0, vec![Param::new("nCount", tys[13].clone(), None), Param::new("lpHandles", tys[38].clone(), None), Param::new("bWaitAll", tys[13].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), Param::new("bAlertable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2711, 0, "WaitForPrinterChange", "WaitForPrinterChange", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("Flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2712, 0, "WaitForSingleObject", "WaitForSingleObject", 0, vec![Param::new("hHandle", tys[47].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2713, 0, "WaitForSingleObjectEx", "WaitForSingleObjectEx", 0, vec![Param::new("hHandle", tys[47].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), Param::new("bAlertable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2714, 0, "WaitForThreadpoolIoCallbacks", "WaitForThreadpoolIoCallbacks", 0, vec![Param::new("pio", tys[26].clone(), None), Param::new("fCancelPendingCallbacks", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2715, 0, "WaitForThreadpoolTimerCallbacks", "WaitForThreadpoolTimerCallbacks", 0, vec![Param::new("pti", tys[26].clone(), None), Param::new("fCancelPendingCallbacks", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2716, 0, "WaitForThreadpoolWaitCallbacks", "WaitForThreadpoolWaitCallbacks", 0, vec![Param::new("pwa", tys[26].clone(), None), Param::new("fCancelPendingCallbacks", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2717, 0, "WaitForThreadpoolWorkCallbacks", "WaitForThreadpoolWorkCallbacks", 0, vec![Param::new("pwk", tys[26].clone(), None), Param::new("fCancelPendingCallbacks", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2718, 0, "WaitMessage", "WaitMessage", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2719, 0, "WaitNamedPipeA", "WaitNamedPipeA", 0, vec![Param::new("lpNamedPipeName", tys[33].clone(), None), Param::new("nTimeOut", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2720, 0, "WaitOnAddress", "WaitOnAddress", 0, vec![Param::new("Address", tys[37].clone(), None), Param::new("CompareAddress", tys[37].clone(), None), Param::new("AddressSize", tys[14].clone(), None), Param::new("dwMilliseconds", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2721, 0, "WaitServiceState", "WaitServiceState", 0, vec![Param::new("hService", tys[26].clone(), None), Param::new("dwNotify", tys[13].clone(), None), Param::new("dwTimeout", tys[13].clone(), None), Param::new("hCancelEvent", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2722, 0, "WakeAllConditionVariable", "WakeAllConditionVariable", 0, vec![Param::new("ConditionVariable", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2723, 0, "WakeByAddressAll", "WakeByAddressAll", 0, vec![Param::new("Address", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2724, 0, "WakeByAddressSingle", "WakeByAddressSingle", 0, vec![Param::new("Address", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2725, 0, "WakeConditionVariable", "WakeConditionVariable", 0, vec![Param::new("ConditionVariable", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2726, 0, "WideCharToMultiByte", "WideCharToMultiByte", 0, vec![Param::new("CodePage", tys[13].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("lpWideCharStr", tys[28].clone(), None), Param::new("cchWideChar", tys[13].clone(), None), Param::new("lpMultiByteStr", tys[33].clone(), None), Param::new("cbMultiByte", tys[13].clone(), None), Param::new("lpDefaultChar", tys[33].clone(), None), Param::new("lpUsedDefaultChar", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2727, 0, "WidenPath", "WidenPath", 0, vec![Param::new("hdc", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2728, 0, "WinExec", "WinExec", 0, vec![Param::new("lpCmdLine", tys[33].clone(), None), Param::new("uCmdShow", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2729, 0, "WinHelpA", "WinHelpA", 0, vec![Param::new("hWndMain", tys[26].clone(), None), Param::new("lpszHelp", tys[33].clone(), None), Param::new("uCommand", tys[13].clone(), None), Param::new("dwData", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2730, 0, "WindowFromDC", "WindowFromDC", 0, vec![Param::new("hDC", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2731, 0, "WindowFromPhysicalPoint", "WindowFromPhysicalPoint", 0, vec![Param::new("Point", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2732, 0, "WindowFromPoint", "WindowFromPoint", 0, vec![Param::new("Point", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2733, 0, "Wow64DisableWow64FsRedirection", "Wow64DisableWow64FsRedirection", 0, vec![Param::new("OldValue", tys[38].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2734, 0, "Wow64EnableWow64FsRedirection", "Wow64EnableWow64FsRedirection", 0, vec![Param::new("Wow64FsEnableRedirection", tys[15].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2735, 0, "Wow64GetThreadContext", "Wow64GetThreadContext", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("lpContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2736, 0, "Wow64GetThreadSelectorEntry", "Wow64GetThreadSelectorEntry", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("dwSelector", tys[13].clone(), None), Param::new("lpSelectorEntry", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2737, 0, "Wow64RevertWow64FsRedirection", "Wow64RevertWow64FsRedirection", 0, vec![Param::new("OlValue", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2738, 0, "Wow64SetThreadContext", "Wow64SetThreadContext", 0, vec![Param::new("hThread", tys[47].clone(), None), Param::new("lpContext", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2739, 0, "Wow64SetThreadDefaultGuestMachine", "Wow64SetThreadDefaultGuestMachine", 0, vec![Param::new("Machine", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2740, 0, "Wow64SuspendThread", "Wow64SuspendThread", 0, vec![Param::new("hThread", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2741, 0, "WriteClassStg", "WriteClassStg", 0, vec![Param::new("pStg", tys[26].clone(), None), Param::new("rclsid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2742, 0, "WriteClassStm", "WriteClassStm", 0, vec![Param::new("pStm", tys[26].clone(), None), Param::new("rclsid", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2743, 0, "WriteConsoleA", "WriteConsoleA", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nNumberOfCharsToWrite", tys[13].clone(), None), Param::new("lpNumberOfCharsWritten", tys[39].clone(), None), Param::new("lpReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2744, 0, "WriteConsoleInputA", "WriteConsoleInputA", 0, vec![Param::new("hConsoleInput", tys[47].clone(), None), Param::new("lpBuffer", tys[26].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("lpNumberOfEventsWritten", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2745, 0, "WriteConsoleOutputA", "WriteConsoleOutputA", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpBuffer", tys[26].clone(), None), Param::new("dwBufferSize", tys[16].clone(), None), Param::new("dwBufferCoord", tys[16].clone(), None), Param::new("lpWriteRegion", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2746, 0, "WriteConsoleOutputAttribute", "WriteConsoleOutputAttribute", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpAttribute", tys[28].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("dwWriteCoord", tys[16].clone(), None), Param::new("lpNumberOfAttrsWritten", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2747, 0, "WriteConsoleOutputCharacterA", "WriteConsoleOutputCharacterA", 0, vec![Param::new("hConsoleOutput", tys[47].clone(), None), Param::new("lpCharacter", tys[33].clone(), None), Param::new("nLength", tys[13].clone(), None), Param::new("dwWriteCoord", tys[16].clone(), None), Param::new("lpNumberOfCharsWritten", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2748, 0, "WriteEncryptedFileRaw", "WriteEncryptedFileRaw", 0, vec![Param::new("pfImportCallback", tys[26].clone(), None), Param::new("pvCallbackContext", tys[37].clone(), None), Param::new("pvContext", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2749, 0, "WriteFile", "WriteFile", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nNumberOfBytesToWrite", tys[13].clone(), None), Param::new("lpNumberOfBytesWritten", tys[39].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2750, 0, "WriteFileEx", "WriteFileEx", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nNumberOfBytesToWrite", tys[13].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), Param::new("lpCompletionRoutine", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2751, 0, "WriteFileGather", "WriteFileGather", 0, vec![Param::new("hFile", tys[47].clone(), None), Param::new("aSegmentArray", tys[26].clone(), None), Param::new("nNumberOfBytesToWrite", tys[13].clone(), None), Param::new("lpReserved", tys[39].clone(), None), Param::new("lpOverlapped", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_43(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2752, 0, "WritePrinter", "WritePrinter", 0, vec![Param::new("hPrinter", tys[47].clone(), None), Param::new("pBuf", tys[37].clone(), None), Param::new("cbBuf", tys[13].clone(), None), Param::new("pcWritten", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2753, 0, "WritePrivateProfileSectionA", "WritePrivateProfileSectionA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2754, 0, "WritePrivateProfileStringA", "WritePrivateProfileStringA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpKeyName", tys[33].clone(), None), Param::new("lpString", tys[33].clone(), None), Param::new("lpFileName", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2755, 0, "WritePrivateProfileStructA", "WritePrivateProfileStructA", 0, vec![Param::new("lpszSection", tys[33].clone(), None), Param::new("lpszKey", tys[33].clone(), None), Param::new("lpStruct", tys[37].clone(), None), Param::new("uSizeStruct", tys[13].clone(), None), Param::new("szFile", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2756, 0, "WriteProcessMemory", "WriteProcessMemory", 0, vec![Param::new("hProcess", tys[47].clone(), None), Param::new("lpBaseAddress", tys[37].clone(), None), Param::new("lpBuffer", tys[37].clone(), None), Param::new("nSize", tys[14].clone(), None), Param::new("lpNumberOfBytesWritten", tys[36].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2757, 0, "WriteProfileSectionA", "WriteProfileSectionA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2758, 0, "WriteProfileStringA", "WriteProfileStringA", 0, vec![Param::new("lpAppName", tys[33].clone(), None), Param::new("lpKeyName", tys[33].clone(), None), Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2759, 0, "WriteTapemark", "WriteTapemark", 0, vec![Param::new("hDevice", tys[47].clone(), None), Param::new("dwTapemarkType", tys[13].clone(), None), Param::new("dwTapemarkCount", tys[13].clone(), None), Param::new("bImmediate", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2760, 0, "ZombifyActCtx", "ZombifyActCtx", 0, vec![Param::new("hActCtx", tys[47].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2761, 0, "accept", "accept", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("addr", tys[26].clone(), None), Param::new("addrlen", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2762, 0, "auxGetDevCapsA", "auxGetDevCapsA", 0, vec![Param::new("uDeviceID", tys[14].clone(), None), Param::new("pac", tys[26].clone(), None), Param::new("cbac", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2763, 0, "auxGetNumDevs", "auxGetNumDevs", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2764, 0, "auxGetVolume", "auxGetVolume", 0, vec![Param::new("uDeviceID", tys[13].clone(), None), Param::new("pdwVolume", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2765, 0, "auxOutMessage", "auxOutMessage", 0, vec![Param::new("uDeviceID", tys[13].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("dw1", tys[14].clone(), None), Param::new("dw2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2766, 0, "auxSetVolume", "auxSetVolume", 0, vec![Param::new("uDeviceID", tys[13].clone(), None), Param::new("dwVolume", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2767, 0, "bind", "bind", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("addr", tys[26].clone(), None), Param::new("namelen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2768, 0, "closesocket", "closesocket", 0, vec![Param::new("s", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2769, 0, "connect", "connect", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("name", tys[26].clone(), None), Param::new("namelen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2770, 0, "gethostbyaddr", "gethostbyaddr", 0, vec![Param::new("addr", tys[33].clone(), None), Param::new("len", tys[13].clone(), None), Param::new("type", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2771, 0, "gethostbyname", "gethostbyname", 0, vec![Param::new("name", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2772, 0, "gethostname", "gethostname", 0, vec![Param::new("name", tys[33].clone(), None), Param::new("namelen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2773, 0, "getpeername", "getpeername", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("name", tys[26].clone(), None), Param::new("namelen", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2774, 0, "getprotobyname", "getprotobyname", 0, vec![Param::new("name", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2775, 0, "getprotobynumber", "getprotobynumber", 0, vec![Param::new("proto", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2776, 0, "getservbyname", "getservbyname", 0, vec![Param::new("name", tys[33].clone(), None), Param::new("proto", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2777, 0, "getservbyport", "getservbyport", 0, vec![Param::new("port", tys[13].clone(), None), Param::new("proto", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2778, 0, "getsockname", "getsockname", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("name", tys[26].clone(), None), Param::new("namelen", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2779, 0, "getsockopt", "getsockopt", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("level", tys[13].clone(), None), Param::new("optname", tys[13].clone(), None), Param::new("optval", tys[33].clone(), None), Param::new("optlen", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2780, 0, "htonl", "htonl", 0, vec![Param::new("hostlong", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2781, 0, "htons", "htons", 0, vec![Param::new("hostshort", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2782, 0, "inet_addr", "inet_addr", 0, vec![Param::new("cp", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2783, 0, "inet_ntoa", "inet_ntoa", 0, vec![Param::new("in", tys[16].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2784, 0, "ioctlsocket", "ioctlsocket", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("cmd", tys[13].clone(), None), Param::new("argp", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2785, 0, "joyConfigChanged", "joyConfigChanged", 0, vec![Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2786, 0, "joyGetDevCapsA", "joyGetDevCapsA", 0, vec![Param::new("uJoyID", tys[14].clone(), None), Param::new("pjc", tys[26].clone(), None), Param::new("cbjc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2787, 0, "joyGetNumDevs", "joyGetNumDevs", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2788, 0, "joyGetPos", "joyGetPos", 0, vec![Param::new("uJoyID", tys[13].clone(), None), Param::new("pji", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2789, 0, "joyGetPosEx", "joyGetPosEx", 0, vec![Param::new("uJoyID", tys[13].clone(), None), Param::new("pji", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2790, 0, "joyGetThreshold", "joyGetThreshold", 0, vec![Param::new("uJoyID", tys[13].clone(), None), Param::new("puThreshold", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2791, 0, "joyReleaseCapture", "joyReleaseCapture", 0, vec![Param::new("uJoyID", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2792, 0, "joySetCapture", "joySetCapture", 0, vec![Param::new("hwnd", tys[26].clone(), None), Param::new("uJoyID", tys[13].clone(), None), Param::new("uPeriod", tys[13].clone(), None), Param::new("fChanged", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2793, 0, "joySetThreshold", "joySetThreshold", 0, vec![Param::new("uJoyID", tys[13].clone(), None), Param::new("uThreshold", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2794, 0, "keybd_event", "keybd_event", 0, vec![Param::new("bVk", tys[15].clone(), None), Param::new("bScan", tys[15].clone(), None), Param::new("dwFlags", tys[13].clone(), None), Param::new("dwExtraInfo", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2795, 0, "listen", "listen", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("backlog", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2796, 0, "lstrcatA", "lstrcatA", 0, vec![Param::new("lpString1", tys[33].clone(), None), Param::new("lpString2", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2797, 0, "lstrcmpA", "lstrcmpA", 0, vec![Param::new("lpString1", tys[33].clone(), None), Param::new("lpString2", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2798, 0, "lstrcmpiA", "lstrcmpiA", 0, vec![Param::new("lpString1", tys[33].clone(), None), Param::new("lpString2", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2799, 0, "lstrcpyA", "lstrcpyA", 0, vec![Param::new("lpString1", tys[33].clone(), None), Param::new("lpString2", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2800, 0, "lstrcpynA", "lstrcpynA", 0, vec![Param::new("lpString1", tys[33].clone(), None), Param::new("lpString2", tys[33].clone(), None), Param::new("iMaxLength", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2801, 0, "lstrlenA", "lstrlenA", 0, vec![Param::new("lpString", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2802, 0, "mciDriverNotify", "mciDriverNotify", 0, vec![Param::new("hwndCallback", tys[47].clone(), None), Param::new("wDeviceID", tys[13].clone(), None), Param::new("uStatus", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2803, 0, "mciDriverYield", "mciDriverYield", 0, vec![Param::new("wDeviceID", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2804, 0, "mciFreeCommandResource", "mciFreeCommandResource", 0, vec![Param::new("wTable", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2805, 0, "mciGetCreatorTask", "mciGetCreatorTask", 0, vec![Param::new("mciId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2806, 0, "mciGetDeviceIDA", "mciGetDeviceIDA", 0, vec![Param::new("pszDevice", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2807, 0, "mciGetDeviceIDFromElementIDA", "mciGetDeviceIDFromElementIDA", 0, vec![Param::new("dwElementID", tys[13].clone(), None), Param::new("lpstrType", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2808, 0, "mciGetDriverData", "mciGetDriverData", 0, vec![Param::new("wDeviceID", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2809, 0, "mciGetErrorStringA", "mciGetErrorStringA", 0, vec![Param::new("mcierr", tys[13].clone(), None), Param::new("pszText", tys[33].clone(), None), Param::new("cchText", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2810, 0, "mciGetYieldProc", "mciGetYieldProc", 0, vec![Param::new("mciId", tys[13].clone(), None), Param::new("pdwYieldData", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2811, 0, "mciLoadCommandResource", "mciLoadCommandResource", 0, vec![Param::new("hInstance", tys[47].clone(), None), Param::new("lpResName", tys[28].clone(), None), Param::new("wType", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2812, 0, "mciSendCommandA", "mciSendCommandA", 0, vec![Param::new("mciId", tys[13].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("dwParam1", tys[14].clone(), None), Param::new("dwParam2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2813, 0, "mciSendStringA", "mciSendStringA", 0, vec![Param::new("lpstrCommand", tys[33].clone(), None), Param::new("lpstrReturnString", tys[33].clone(), None), Param::new("uReturnLength", tys[13].clone(), None), Param::new("hwndCallback", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2814, 0, "mciSetDriverData", "mciSetDriverData", 0, vec![Param::new("wDeviceID", tys[13].clone(), None), Param::new("dwData", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2815, 0, "mciSetYieldProc", "mciSetYieldProc", 0, vec![Param::new("mciId", tys[13].clone(), None), Param::new("fpYieldProc", tys[26].clone(), None), Param::new("dwYieldData", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_44(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2816, 0, "midiConnect", "midiConnect", 0, vec![Param::new("hmi", tys[26].clone(), None), Param::new("hmo", tys[26].clone(), None), Param::new("pReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2817, 0, "midiDisconnect", "midiDisconnect", 0, vec![Param::new("hmi", tys[26].clone(), None), Param::new("hmo", tys[26].clone(), None), Param::new("pReserved", tys[37].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2818, 0, "midiInAddBuffer", "midiInAddBuffer", 0, vec![Param::new("hmi", tys[26].clone(), None), Param::new("pmh", tys[26].clone(), None), Param::new("cbmh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2819, 0, "midiInClose", "midiInClose", 0, vec![Param::new("hmi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2820, 0, "midiInGetDevCapsA", "midiInGetDevCapsA", 0, vec![Param::new("uDeviceID", tys[14].clone(), None), Param::new("pmic", tys[26].clone(), None), Param::new("cbmic", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2821, 0, "midiInGetErrorTextA", "midiInGetErrorTextA", 0, vec![Param::new("mmrError", tys[13].clone(), None), Param::new("pszText", tys[33].clone(), None), Param::new("cchText", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2822, 0, "midiInGetID", "midiInGetID", 0, vec![Param::new("hmi", tys[26].clone(), None), Param::new("puDeviceID", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2823, 0, "midiInGetNumDevs", "midiInGetNumDevs", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2824, 0, "midiInMessage", "midiInMessage", 0, vec![Param::new("hmi", tys[26].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("dw1", tys[14].clone(), None), Param::new("dw2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2825, 0, "midiInOpen", "midiInOpen", 0, vec![Param::new("phmi", tys[27].clone(), None), Param::new("uDeviceID", tys[13].clone(), None), Param::new("dwCallback", tys[14].clone(), None), Param::new("dwInstance", tys[14].clone(), None), Param::new("fdwOpen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2826, 0, "midiInPrepareHeader", "midiInPrepareHeader", 0, vec![Param::new("hmi", tys[26].clone(), None), Param::new("pmh", tys[26].clone(), None), Param::new("cbmh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2827, 0, "midiInReset", "midiInReset", 0, vec![Param::new("hmi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2828, 0, "midiInStart", "midiInStart", 0, vec![Param::new("hmi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2829, 0, "midiInStop", "midiInStop", 0, vec![Param::new("hmi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2830, 0, "midiInUnprepareHeader", "midiInUnprepareHeader", 0, vec![Param::new("hmi", tys[26].clone(), None), Param::new("pmh", tys[26].clone(), None), Param::new("cbmh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2831, 0, "midiOutCacheDrumPatches", "midiOutCacheDrumPatches", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("uPatch", tys[13].clone(), None), Param::new("pwkya", tys[28].clone(), None), Param::new("fuCache", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2832, 0, "midiOutCachePatches", "midiOutCachePatches", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("uBank", tys[13].clone(), None), Param::new("pwpa", tys[28].clone(), None), Param::new("fuCache", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2833, 0, "midiOutClose", "midiOutClose", 0, vec![Param::new("hmo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2834, 0, "midiOutGetDevCapsA", "midiOutGetDevCapsA", 0, vec![Param::new("uDeviceID", tys[14].clone(), None), Param::new("pmoc", tys[26].clone(), None), Param::new("cbmoc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2835, 0, "midiOutGetErrorTextA", "midiOutGetErrorTextA", 0, vec![Param::new("mmrError", tys[13].clone(), None), Param::new("pszText", tys[33].clone(), None), Param::new("cchText", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2836, 0, "midiOutGetID", "midiOutGetID", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("puDeviceID", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2837, 0, "midiOutGetNumDevs", "midiOutGetNumDevs", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2838, 0, "midiOutGetVolume", "midiOutGetVolume", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("pdwVolume", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2839, 0, "midiOutLongMsg", "midiOutLongMsg", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("pmh", tys[26].clone(), None), Param::new("cbmh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2840, 0, "midiOutMessage", "midiOutMessage", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("dw1", tys[14].clone(), None), Param::new("dw2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2841, 0, "midiOutOpen", "midiOutOpen", 0, vec![Param::new("phmo", tys[27].clone(), None), Param::new("uDeviceID", tys[13].clone(), None), Param::new("dwCallback", tys[14].clone(), None), Param::new("dwInstance", tys[14].clone(), None), Param::new("fdwOpen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2842, 0, "midiOutPrepareHeader", "midiOutPrepareHeader", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("pmh", tys[26].clone(), None), Param::new("cbmh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2843, 0, "midiOutReset", "midiOutReset", 0, vec![Param::new("hmo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2844, 0, "midiOutSetVolume", "midiOutSetVolume", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("dwVolume", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2845, 0, "midiOutShortMsg", "midiOutShortMsg", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("dwMsg", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2846, 0, "midiOutUnprepareHeader", "midiOutUnprepareHeader", 0, vec![Param::new("hmo", tys[26].clone(), None), Param::new("pmh", tys[26].clone(), None), Param::new("cbmh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2847, 0, "midiStreamClose", "midiStreamClose", 0, vec![Param::new("hms", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2848, 0, "midiStreamOpen", "midiStreamOpen", 0, vec![Param::new("phms", tys[27].clone(), None), Param::new("puDeviceID", tys[39].clone(), None), Param::new("cMidi", tys[13].clone(), None), Param::new("dwCallback", tys[14].clone(), None), Param::new("dwInstance", tys[14].clone(), None), Param::new("fdwOpen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2849, 0, "midiStreamOut", "midiStreamOut", 0, vec![Param::new("hms", tys[26].clone(), None), Param::new("pmh", tys[26].clone(), None), Param::new("cbmh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2850, 0, "midiStreamPause", "midiStreamPause", 0, vec![Param::new("hms", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2851, 0, "midiStreamPosition", "midiStreamPosition", 0, vec![Param::new("hms", tys[26].clone(), None), Param::new("lpmmt", tys[26].clone(), None), Param::new("cbmmt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2852, 0, "midiStreamProperty", "midiStreamProperty", 0, vec![Param::new("hms", tys[26].clone(), None), Param::new("lppropdata", tys[33].clone(), None), Param::new("dwProperty", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2853, 0, "midiStreamRestart", "midiStreamRestart", 0, vec![Param::new("hms", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2854, 0, "midiStreamStop", "midiStreamStop", 0, vec![Param::new("hms", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2855, 0, "mixerClose", "mixerClose", 0, vec![Param::new("hmx", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2856, 0, "mixerGetControlDetailsA", "mixerGetControlDetailsA", 0, vec![Param::new("hmxobj", tys[26].clone(), None), Param::new("pmxcd", tys[26].clone(), None), Param::new("fdwDetails", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2857, 0, "mixerGetDevCapsA", "mixerGetDevCapsA", 0, vec![Param::new("uMxId", tys[14].clone(), None), Param::new("pmxcaps", tys[26].clone(), None), Param::new("cbmxcaps", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2858, 0, "mixerGetID", "mixerGetID", 0, vec![Param::new("hmxobj", tys[26].clone(), None), Param::new("puMxId", tys[39].clone(), None), Param::new("fdwId", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2859, 0, "mixerGetLineControlsA", "mixerGetLineControlsA", 0, vec![Param::new("hmxobj", tys[26].clone(), None), Param::new("pmxlc", tys[26].clone(), None), Param::new("fdwControls", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2860, 0, "mixerGetLineInfoA", "mixerGetLineInfoA", 0, vec![Param::new("hmxobj", tys[26].clone(), None), Param::new("pmxl", tys[26].clone(), None), Param::new("fdwInfo", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2861, 0, "mixerGetNumDevs", "mixerGetNumDevs", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2862, 0, "mixerMessage", "mixerMessage", 0, vec![Param::new("hmx", tys[26].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("dwParam1", tys[14].clone(), None), Param::new("dwParam2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2863, 0, "mixerOpen", "mixerOpen", 0, vec![Param::new("phmx", tys[27].clone(), None), Param::new("uMxId", tys[13].clone(), None), Param::new("dwCallback", tys[14].clone(), None), Param::new("dwInstance", tys[14].clone(), None), Param::new("fdwOpen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2864, 0, "mixerSetControlDetails", "mixerSetControlDetails", 0, vec![Param::new("hmxobj", tys[26].clone(), None), Param::new("pmxcd", tys[26].clone(), None), Param::new("fdwDetails", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2865, 0, "mmDrvInstall", "mmDrvInstall", 0, vec![Param::new("hDriver", tys[26].clone(), None), Param::new("wszDrvEntry", tys[28].clone(), None), Param::new("drvMessage", tys[26].clone(), None), Param::new("wFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2866, 0, "mmioAdvance", "mmioAdvance", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("pmmioinfo", tys[26].clone(), None), Param::new("fuAdvance", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2867, 0, "mmioAscend", "mmioAscend", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("pmmcki", tys[26].clone(), None), Param::new("fuAscend", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2868, 0, "mmioClose", "mmioClose", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("fuClose", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2869, 0, "mmioCreateChunk", "mmioCreateChunk", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("pmmcki", tys[26].clone(), None), Param::new("fuCreate", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2870, 0, "mmioDescend", "mmioDescend", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("pmmcki", tys[26].clone(), None), Param::new("pmmckiParent", tys[26].clone(), None), Param::new("fuDescend", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2871, 0, "mmioFlush", "mmioFlush", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("fuFlush", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2872, 0, "mmioGetInfo", "mmioGetInfo", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("pmmioinfo", tys[26].clone(), None), Param::new("fuInfo", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2873, 0, "mmioInstallIOProcA", "mmioInstallIOProcA", 0, vec![Param::new("fccIOProc", tys[13].clone(), None), Param::new("pIOProc", tys[26].clone(), None), Param::new("dwFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2874, 0, "mmioOpenA", "mmioOpenA", 0, vec![Param::new("pszFileName", tys[33].clone(), None), Param::new("pmmioinfo", tys[26].clone(), None), Param::new("fdwOpen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2875, 0, "mmioRead", "mmioRead", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("pch", tys[33].clone(), None), Param::new("cch", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2876, 0, "mmioRenameA", "mmioRenameA", 0, vec![Param::new("pszFileName", tys[33].clone(), None), Param::new("pszNewFileName", tys[33].clone(), None), Param::new("pmmioinfo", tys[26].clone(), None), Param::new("fdwRename", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2877, 0, "mmioSeek", "mmioSeek", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("lOffset", tys[13].clone(), None), Param::new("iOrigin", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2878, 0, "mmioSendMessage", "mmioSendMessage", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("lParam1", tys[14].clone(), None), Param::new("lParam2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2879, 0, "mmioSetBuffer", "mmioSetBuffer", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("pchBuffer", tys[33].clone(), None), Param::new("cchBuffer", tys[13].clone(), None), Param::new("fuBuffer", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_45(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2880, 0, "mmioSetInfo", "mmioSetInfo", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("pmmioinfo", tys[26].clone(), None), Param::new("fuInfo", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2881, 0, "mmioStringToFOURCCA", "mmioStringToFOURCCA", 0, vec![Param::new("sz", tys[33].clone(), None), Param::new("uFlags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2882, 0, "mmioWrite", "mmioWrite", 0, vec![Param::new("hmmio", tys[26].clone(), None), Param::new("pch", tys[33].clone(), None), Param::new("cch", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2883, 0, "mouse_event", "mouse_event", 0, vec![Param::new("dwFlags", tys[13].clone(), None), Param::new("dx", tys[13].clone(), None), Param::new("dy", tys[13].clone(), None), Param::new("dwData", tys[13].clone(), None), Param::new("dwExtraInfo", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2884, 0, "ntohl", "ntohl", 0, vec![Param::new("netlong", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2885, 0, "ntohs", "ntohs", 0, vec![Param::new("netshort", tys[11].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2886, 0, "recv", "recv", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("len", tys[13].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2887, 0, "recvfrom", "recvfrom", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("len", tys[13].clone(), None), Param::new("flags", tys[13].clone(), None), Param::new("from", tys[26].clone(), None), Param::new("fromlen", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2888, 0, "select", "select", 0, vec![Param::new("nfds", tys[13].clone(), None), Param::new("readfds", tys[26].clone(), None), Param::new("writefds", tys[26].clone(), None), Param::new("exceptfds", tys[26].clone(), None), Param::new("timeout", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2889, 0, "send", "send", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("len", tys[13].clone(), None), Param::new("flags", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2890, 0, "sendto", "sendto", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("buf", tys[33].clone(), None), Param::new("len", tys[13].clone(), None), Param::new("flags", tys[13].clone(), None), Param::new("to", tys[26].clone(), None), Param::new("tolen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2891, 0, "setsockopt", "setsockopt", 0, vec![Param::new("s", tys[14].clone(), None), Param::new("level", tys[13].clone(), None), Param::new("optname", tys[13].clone(), None), Param::new("optval", tys[33].clone(), None), Param::new("optlen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2892, 0, "sndPlaySoundA", "sndPlaySoundA", 0, vec![Param::new("pszSound", tys[33].clone(), None), Param::new("fuSound", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2893, 0, "socket", "socket", 0, vec![Param::new("af", tys[13].clone(), None), Param::new("type", tys[13].clone(), None), Param::new("protocol", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2894, 0, "syz_builtin0", "syz_builtin0", 0, vec![Param::new("a", tys[23].clone(), None), ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2895, 0, "syz_builtin1", "syz_builtin1", 0, vec![Param::new("a", tys[35].clone(), None), ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2896, 0, "syz_execute_func", "syz_execute_func", 0, vec![Param::new("text", tys[24].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2897, 0, "timeBeginPeriod", "timeBeginPeriod", 0, vec![Param::new("uPeriod", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2898, 0, "timeEndPeriod", "timeEndPeriod", 0, vec![Param::new("uPeriod", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2899, 0, "timeGetDevCaps", "timeGetDevCaps", 0, vec![Param::new("ptc", tys[26].clone(), None), Param::new("cbtc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2900, 0, "timeGetSystemTime", "timeGetSystemTime", 0, vec![Param::new("pmmt", tys[26].clone(), None), Param::new("cbmmt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2901, 0, "timeGetTime", "timeGetTime", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2902, 0, "timeKillEvent", "timeKillEvent", 0, vec![Param::new("uTimerID", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2903, 0, "timeSetEvent", "timeSetEvent", 0, vec![Param::new("uDelay", tys[13].clone(), None), Param::new("uResolution", tys[13].clone(), None), Param::new("fptc", tys[26].clone(), None), Param::new("dwUser", tys[14].clone(), None), Param::new("fuEvent", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2904, 0, "waveInAddBuffer", "waveInAddBuffer", 0, vec![Param::new("hwi", tys[26].clone(), None), Param::new("pwh", tys[26].clone(), None), Param::new("cbwh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2905, 0, "waveInClose", "waveInClose", 0, vec![Param::new("hwi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2906, 0, "waveInGetDevCapsA", "waveInGetDevCapsA", 0, vec![Param::new("uDeviceID", tys[14].clone(), None), Param::new("pwic", tys[26].clone(), None), Param::new("cbwic", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2907, 0, "waveInGetErrorTextA", "waveInGetErrorTextA", 0, vec![Param::new("mmrError", tys[13].clone(), None), Param::new("pszText", tys[33].clone(), None), Param::new("cchText", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2908, 0, "waveInGetID", "waveInGetID", 0, vec![Param::new("hwi", tys[26].clone(), None), Param::new("puDeviceID", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2909, 0, "waveInGetNumDevs", "waveInGetNumDevs", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2910, 0, "waveInGetPosition", "waveInGetPosition", 0, vec![Param::new("hwi", tys[26].clone(), None), Param::new("pmmt", tys[26].clone(), None), Param::new("cbmmt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2911, 0, "waveInMessage", "waveInMessage", 0, vec![Param::new("hwi", tys[26].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("dw1", tys[14].clone(), None), Param::new("dw2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2912, 0, "waveInOpen", "waveInOpen", 0, vec![Param::new("phwi", tys[27].clone(), None), Param::new("uDeviceID", tys[13].clone(), None), Param::new("pwfx", tys[26].clone(), None), Param::new("dwCallback", tys[14].clone(), None), Param::new("dwInstance", tys[14].clone(), None), Param::new("fdwOpen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2913, 0, "waveInPrepareHeader", "waveInPrepareHeader", 0, vec![Param::new("hwi", tys[26].clone(), None), Param::new("pwh", tys[26].clone(), None), Param::new("cbwh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2914, 0, "waveInReset", "waveInReset", 0, vec![Param::new("hwi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2915, 0, "waveInStart", "waveInStart", 0, vec![Param::new("hwi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2916, 0, "waveInStop", "waveInStop", 0, vec![Param::new("hwi", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2917, 0, "waveInUnprepareHeader", "waveInUnprepareHeader", 0, vec![Param::new("hwi", tys[26].clone(), None), Param::new("pwh", tys[26].clone(), None), Param::new("cbwh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2918, 0, "waveOutBreakLoop", "waveOutBreakLoop", 0, vec![Param::new("hwo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2919, 0, "waveOutClose", "waveOutClose", 0, vec![Param::new("hwo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2920, 0, "waveOutGetDevCapsA", "waveOutGetDevCapsA", 0, vec![Param::new("uDeviceID", tys[14].clone(), None), Param::new("pwoc", tys[26].clone(), None), Param::new("cbwoc", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2921, 0, "waveOutGetErrorTextA", "waveOutGetErrorTextA", 0, vec![Param::new("mmrError", tys[13].clone(), None), Param::new("pszText", tys[33].clone(), None), Param::new("cchText", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2922, 0, "waveOutGetID", "waveOutGetID", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("puDeviceID", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2923, 0, "waveOutGetNumDevs", "waveOutGetNumDevs", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2924, 0, "waveOutGetPitch", "waveOutGetPitch", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("pdwPitch", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2925, 0, "waveOutGetPlaybackRate", "waveOutGetPlaybackRate", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("pdwRate", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2926, 0, "waveOutGetPosition", "waveOutGetPosition", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("pmmt", tys[26].clone(), None), Param::new("cbmmt", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2927, 0, "waveOutGetVolume", "waveOutGetVolume", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("pdwVolume", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2928, 0, "waveOutMessage", "waveOutMessage", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("uMsg", tys[13].clone(), None), Param::new("dw1", tys[14].clone(), None), Param::new("dw2", tys[14].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2929, 0, "waveOutOpen", "waveOutOpen", 0, vec![Param::new("phwo", tys[27].clone(), None), Param::new("uDeviceID", tys[13].clone(), None), Param::new("pwfx", tys[26].clone(), None), Param::new("dwCallback", tys[14].clone(), None), Param::new("dwInstance", tys[14].clone(), None), Param::new("fdwOpen", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2930, 0, "waveOutPause", "waveOutPause", 0, vec![Param::new("hwo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2931, 0, "waveOutPrepareHeader", "waveOutPrepareHeader", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("pwh", tys[26].clone(), None), Param::new("cbwh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2932, 0, "waveOutReset", "waveOutReset", 0, vec![Param::new("hwo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2933, 0, "waveOutRestart", "waveOutRestart", 0, vec![Param::new("hwo", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2934, 0, "waveOutSetPitch", "waveOutSetPitch", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("dwPitch", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2935, 0, "waveOutSetPlaybackRate", "waveOutSetPlaybackRate", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("dwRate", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2936, 0, "waveOutSetVolume", "waveOutSetVolume", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("dwVolume", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2937, 0, "waveOutUnprepareHeader", "waveOutUnprepareHeader", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("pwh", tys[26].clone(), None), Param::new("cbwh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2938, 0, "waveOutWrite", "waveOutWrite", 0, vec![Param::new("hwo", tys[26].clone(), None), Param::new("pwh", tys[26].clone(), None), Param::new("cbwh", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2939, 0, "wglCopyContext", "wglCopyContext", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), Param::new("arg2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2940, 0, "wglCreateContext", "wglCreateContext", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2941, 0, "wglCreateLayerContext", "wglCreateLayerContext", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2942, 0, "wglDeleteContext", "wglDeleteContext", 0, vec![Param::new("arg0", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2943, 0, "wglDescribeLayerPlane", "wglDescribeLayerPlane", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("arg3", tys[13].clone(), None), Param::new("arg4", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_46(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(2944, 0, "wglGetCurrentContext", "wglGetCurrentContext", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2945, 0, "wglGetCurrentDC", "wglGetCurrentDC", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2946, 0, "wglGetLayerPaletteEntries", "wglGetLayerPaletteEntries", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("arg3", tys[13].clone(), None), Param::new("arg4", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2947, 0, "wglGetProcAddress", "wglGetProcAddress", 0, vec![Param::new("arg0", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2948, 0, "wglMakeCurrent", "wglMakeCurrent", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2949, 0, "wglRealizeLayerPalette", "wglRealizeLayerPalette", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2950, 0, "wglSetLayerPaletteEntries", "wglSetLayerPaletteEntries", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("arg3", tys[13].clone(), None), Param::new("arg4", tys[39].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2951, 0, "wglShareLists", "wglShareLists", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2952, 0, "wglSwapLayerBuffers", "wglSwapLayerBuffers", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2953, 0, "wglSwapMultipleBuffers", "wglSwapMultipleBuffers", 0, vec![Param::new("arg0", tys[13].clone(), None), Param::new("arg1", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2954, 0, "wglUseFontBitmapsA", "wglUseFontBitmapsA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("arg3", tys[13].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2955, 0, "wglUseFontOutlinesA", "wglUseFontOutlinesA", 0, vec![Param::new("arg0", tys[26].clone(), None), Param::new("arg1", tys[13].clone(), None), Param::new("arg2", tys[13].clone(), None), Param::new("arg3", tys[13].clone(), None), Param::new("arg4", tys[16].clone(), None), Param::new("arg5", tys[16].clone(), None), Param::new("arg6", tys[13].clone(), None), Param::new("arg7", tys[26].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2956, 0, "wsprintfA", "wsprintfA", 0, vec![Param::new("arg0", tys[33].clone(), None), Param::new("arg1", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2957, 0, "wvsprintfA", "wvsprintfA", 0, vec![Param::new("arg0", tys[33].clone(), None), Param::new("arg1", tys[33].clone(), None), Param::new("arglist", tys[33].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
pub fn syscalls() -> (Vec<Syscall>, Vec<Rc<Type>>){
	let tys = types();
	let mut calls = Vec::new();
	syscalls_0(&mut calls, &tys[..]);
	syscalls_1(&mut calls, &tys[..]);
	syscalls_2(&mut calls, &tys[..]);
	syscalls_3(&mut calls, &tys[..]);
	syscalls_4(&mut calls, &tys[..]);
	syscalls_5(&mut calls, &tys[..]);
	syscalls_6(&mut calls, &tys[..]);
	syscalls_7(&mut calls, &tys[..]);
	syscalls_8(&mut calls, &tys[..]);
	syscalls_9(&mut calls, &tys[..]);
	syscalls_10(&mut calls, &tys[..]);
	syscalls_11(&mut calls, &tys[..]);
	syscalls_12(&mut calls, &tys[..]);
	syscalls_13(&mut calls, &tys[..]);
	syscalls_14(&mut calls, &tys[..]);
	syscalls_15(&mut calls, &tys[..]);
	syscalls_16(&mut calls, &tys[..]);
	syscalls_17(&mut calls, &tys[..]);
	syscalls_18(&mut calls, &tys[..]);
	syscalls_19(&mut calls, &tys[..]);
	syscalls_20(&mut calls, &tys[..]);
	syscalls_21(&mut calls, &tys[..]);
	syscalls_22(&mut calls, &tys[..]);
	syscalls_23(&mut calls, &tys[..]);
	syscalls_24(&mut calls, &tys[..]);
	syscalls_25(&mut calls, &tys[..]);
	syscalls_26(&mut calls, &tys[..]);
	syscalls_27(&mut calls, &tys[..]);
	syscalls_28(&mut calls, &tys[..]);
	syscalls_29(&mut calls, &tys[..]);
	syscalls_30(&mut calls, &tys[..]);
	syscalls_31(&mut calls, &tys[..]);
	syscalls_32(&mut calls, &tys[..]);
	syscalls_33(&mut calls, &tys[..]);
	syscalls_34(&mut calls, &tys[..]);
	syscalls_35(&mut calls, &tys[..]);
	syscalls_36(&mut calls, &tys[..]);
	syscalls_37(&mut calls, &tys[..]);
	syscalls_38(&mut calls, &tys[..]);
	syscalls_39(&mut calls, &tys[..]);
	syscalls_40(&mut calls, &tys[..]);
	syscalls_41(&mut calls, &tys[..]);
	syscalls_42(&mut calls, &tys[..]);
	syscalls_43(&mut calls, &tys[..]);
	syscalls_44(&mut calls, &tys[..]);
	syscalls_45(&mut calls, &tys[..]);
	syscalls_46(&mut calls, &tys[..]);
	(calls, tys)
}

fn types_0(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(0, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(50), range:None})));
	tys.push(Rc::new(Type::new(1, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRand, ""))));
	tys.push(Rc::new(Type::new(2, "filename", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))));
	tys.push(Rc::new(Type::new(3, "text", 0, 1, false, true, TypeKind::new_buffer(BufferKind::Text(TextKind::Target),""))));
	tys.push(Rc::new(Type::new(4, "pad", 4, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(5, "file_access_rights", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 1, 2, 2, 4, 4, 4, 8, 16, 32, 32, 64, 128, 256, 65536, 131072, 262144, 524288, 1048576, 2032127, ], false))));
	tys.push(Rc::new(Type::new(6, "file_attributes", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, 32, 128, 256, 4096, 16384, 65536, 131072, 196608, 262144, 524288, 1048576, 2097152, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648, ], false))));
	tys.push(Rc::new(Type::new(7, "file_create_disposition", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, ], false))));
	tys.push(Rc::new(Type::new(8, "protect_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 536870912, 1073741824, 1073741824, 2147483648, ], false))));
	tys.push(Rc::new(Type::new(9, "allocation_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4096, 8192, 524288, 1048576, 2097152, 4194304, 16777216, 536870912, ], true))));
	tys.push(Rc::new(Type::new(10, "file_share_mode", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, ], true))));
	tys.push(Rc::new(Type::new(11, "int16", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(12, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((0, 1)), align: 0})));
	tys.push(Rc::new(Type::new(13, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(14, "int64", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(15, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(16, "intptr", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(17, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(18, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["lpAddress", ]))));
	tys.push(Rc::new(Type::new(19, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(52)})));
	tys.push(Rc::new(Type::new(20, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(51)})));
	tys.push(Rc::new(Type::new(21, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(2)})));
	tys.push(Rc::new(Type::new(22, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(0)})));
	tys.push(Rc::new(Type::new(23, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(49)})));
	tys.push(Rc::new(Type::new(24, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(3)})));
	tys.push(Rc::new(Type::new(25, "ptr64", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(0)})));
	tys.push(Rc::new(Type::new(26, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(16)})));
	tys.push(Rc::new(Type::new(27, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(26)})));
	tys.push(Rc::new(Type::new(28, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(11)})));
	tys.push(Rc::new(Type::new(29, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(28)})));
	tys.push(Rc::new(Type::new(30, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(38)})));
	tys.push(Rc::new(Type::new(31, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(27)})));
	tys.push(Rc::new(Type::new(32, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(47)})));
	tys.push(Rc::new(Type::new(33, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(15)})));
	tys.push(Rc::new(Type::new(34, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(33)})));
	tys.push(Rc::new(Type::new(35, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(50)})));
	tys.push(Rc::new(Type::new(36, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(14)})));
	tys.push(Rc::new(Type::new(37, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(1)})));
	tys.push(Rc::new(Type::new(38, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(37)})));
	tys.push(Rc::new(Type::new(39, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(13)})));
	tys.push(Rc::new(Type::new(40, "ANYRES16", 2, 2, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES16", vec!["ANYRES16", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(41, "ANYRES32", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES32", vec!["ANYRES32", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(42, "ANYRES64", 18, 1, false, false, TypeKind::Res{fmt: BinFmt::StrHex, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(43, "ANYRES64", 20, 1, false, false, TypeKind::Res{fmt: BinFmt::StrDec, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(44, "ANYRES64", 23, 1, false, false, TypeKind::Res{fmt: BinFmt::StrOct, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(45, "ANYRES64", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(46, "HANDLE", 8, 8, true, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("HANDLE", vec!["HANDLE", ], vec![18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(47, "HANDLE", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("HANDLE", vec!["HANDLE", ], vec![18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(48, "vma", 8, 8, false, false, TypeKind::Vma{begin: 0, end: 0})));
	tys.push(Rc::new(Type::new(49, "ANYPTRS", 8, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYPTR".to_string()), ty: TypeRef::Id(22), dir: None }, Field{ name: String::into_boxed_str("ANYPTR64".to_string()), ty: TypeRef::Id(25), dir: None }, ]))));
	tys.push(Rc::new(Type::new(50, "ANYUNION", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYBLOB".to_string()), ty: TypeRef::Id(1), dir: None }, Field{ name: String::into_boxed_str("ANYRES16".to_string()), ty: TypeRef::Id(40), dir: None }, Field{ name: String::into_boxed_str("ANYRES32".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("ANYRES64".to_string()), ty: TypeRef::Id(45), dir: None }, Field{ name: String::into_boxed_str("ANYRESDEC".to_string()), ty: TypeRef::Id(43), dir: None }, Field{ name: String::into_boxed_str("ANYRESHEX".to_string()), ty: TypeRef::Id(42), dir: None }, Field{ name: String::into_boxed_str("ANYRESOCT".to_string()), ty: TypeRef::Id(44), dir: None }, ]))));
	tys.push(Rc::new(Type::new(51, "SECURITY_ATTRIBUTES", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("nLength".to_string()), ty: TypeRef::Id(17), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(4), dir: None }, Field{ name: String::into_boxed_str("lpSecurityDescriptor".to_string()), ty: TypeRef::Id(19), dir: None }, Field{ name: String::into_boxed_str("bInheritHandle".to_string()), ty: TypeRef::Id(12), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(4), dir: None }, ]))));
	tys.push(Rc::new(Type::new(52, "SECURITY_DESCRIPTOR", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("stub".to_string()), ty: TypeRef::Id(13), dir: None }, ]))));
}
fn types() -> Vec<Rc<Type>>{
	let mut tys = Vec::new();
	types_0(&mut tys);
	tys
}

pub static REVISION : &str = "eff0528f457e685691b4f2456a12ff26fe2b49f9";
