//! System call information of openbsd/amd64
//! AUTOGENERATED FILE. DO NOT EDIT.
use std::rc::Rc;
use hlang::ast::*;


pub const OS: &str = "openbsd";
pub const ARCH: &str = "amd64";
pub const PTR_SIZE: usize = 8;
pub const PARGE_SIZE: usize = 4096;
pub const NUM_PARGS: usize = 4096;
pub const DATA_OFFSET: usize = 536870912;
pub const LITTLE_ENDIAN: bool = true;

fn syscalls_0(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(0, 30, "accept", "accept", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("peer", tys[663].clone(), None), Param::new("peerlen", tys[678].clone(), None), ], Some(tys[745].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(1, 30, "accept$inet", "accept", 0, vec![Param::new("fd", tys[746].clone(), None), Param::new("peer", tys[660].clone(), None), Param::new("peerlen", tys[678].clone(), None), ], Some(tys[746].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(2, 30, "accept$inet6", "accept", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("peer", tys[662].clone(), None), Param::new("peerlen", tys[678].clone(), None), ], Some(tys[747].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(3, 30, "accept$unix", "accept", 0, vec![Param::new("fd", tys[748].clone(), None), Param::new("peer", tys[666].clone(), None), Param::new("peerlen", tys[678].clone(), None), ], Some(tys[748].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(4, 51, "acct", "acct", 0, vec![Param::new("path", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(5, 104, "bind", "bind", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("addr", tys[547].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(6, 104, "bind$inet", "bind", 0, vec![Param::new("fd", tys[746].clone(), None), Param::new("addr", tys[541].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(7, 104, "bind$inet6", "bind", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("addr", tys[546].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(8, 104, "bind$unix", "bind", 0, vec![Param::new("fd", tys[748].clone(), None), Param::new("addr", tys[653].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(9, 12, "chdir", "chdir", 0, vec![Param::new("dir", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(10, 34, "chflags", "chflags", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("flags", tys[416].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(11, 107, "chflagsat", "chflagsat", 0, vec![Param::new("dirfd", tys[728].clone(), None), Param::new("file", tys[553].clone(), None), Param::new("flags", tys[416].clone(), None), Param::new("atflags", tys[417].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(12, 15, "chmod", "chmod", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("mode", tys[444].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(13, 16, "chown", "chown", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("uid", tys[750].clone(), None), Param::new("gid", tys[739].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(14, 61, "chroot", "chroot", 0, vec![Param::new("dir", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(15, 89, "clock_getres", "clock_getres", 0, vec![Param::new("id", tys[335].clone(), None), Param::new("tp", tys[695].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(16, 87, "clock_gettime", "clock_gettime", 0, vec![Param::new("id", tys[335].clone(), None), Param::new("tp", tys[695].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(17, 88, "clock_settime", "clock_settime", 0, vec![Param::new("id", tys[335].clone(), None), Param::new("tp", tys[581].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(18, 6, "close", "close", 0, vec![Param::new("fd", tys[726].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(19, 98, "connect", "connect", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("addr", tys[547].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(20, 98, "connect$inet", "connect", 0, vec![Param::new("fd", tys[746].clone(), None), Param::new("addr", tys[541].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(21, 98, "connect$inet6", "connect", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("addr", tys[546].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(22, 98, "connect$unix", "connect", 0, vec![Param::new("fd", tys[748].clone(), None), Param::new("addr", tys[653].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(23, 41, "dup", "dup", 0, vec![Param::new("oldfd", tys[726].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(24, 90, "dup2", "dup2", 0, vec![Param::new("oldfd", tys[726].clone(), None), Param::new("newfd", tys[726].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(25, 59, "execve", "execve", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("argv", tys[591].clone(), None), Param::new("envp", tys[591].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(26, 313, "faccessat", "faccessat", 0, vec![Param::new("dirfd", tys[728].clone(), None), Param::new("pathname", tys[553].clone(), None), Param::new("mode", tys[444].clone(), None), Param::new("flags", tys[427].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(27, 13, "fchdir", "fchdir", 0, vec![Param::new("fd", tys[726].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(28, 35, "fchflags", "fchflags", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("flags", tys[416].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(29, 124, "fchmod", "fchmod", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("mode", tys[444].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(30, 314, "fchmodat", "fchmodat", 0, vec![Param::new("dirfd", tys[728].clone(), None), Param::new("file", tys[553].clone(), None), Param::new("mode", tys[444].clone(), None), Param::new("flags", tys[415].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(31, 123, "fchown", "fchown", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("uid", tys[750].clone(), None), Param::new("gid", tys[739].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(32, 315, "fchownat", "fchownat", 0, vec![Param::new("dirfd", tys[728].clone(), None), Param::new("file", tys[553].clone(), None), Param::new("uid", tys[750].clone(), None), Param::new("gid", tys[739].clone(), None), Param::new("flags", tys[415].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(33, 92, "fcntl$dupfd", "fcntl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[356].clone(), None), Param::new("arg", tys[726].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(34, 92, "fcntl$getflags", "fcntl", 1, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[357].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(35, 92, "fcntl$getown", "fcntl", 1, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[316].clone(), None), ], Some(tys[743].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(36, 92, "fcntl$lock", "fcntl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[358].clone(), None), Param::new("lock", tys[617].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(37, 92, "fcntl$setflags", "fcntl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[268].clone(), None), Param::new("flags", tys[428].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(38, 92, "fcntl$setown", "fcntl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[317].clone(), None), Param::new("pid", tys[743].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(39, 92, "fcntl$setstatus", "fcntl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[287].clone(), None), Param::new("flags", tys[359].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(40, 131, "flock", "flock", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("op", tys[429].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(41, 95, "fsync", "fsync", 0, vec![Param::new("fd", tys[726].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(42, 201, "ftruncate", "ftruncate", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("pad", tys[321].clone(), None), Param::new("len", tys[477].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(43, 99, "getdents", "getdents", 0, vec![Param::new("fd", tys[728].clone(), None), Param::new("ent", tys[706].clone(), None), Param::new("count", tys[506].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(44, 43, "getegid", "getegid", 0, vec![], Some(tys[739].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(45, 25, "geteuid", "geteuid", 0, vec![], Some(tys[750].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(46, 47, "getgid", "getgid", 0, vec![], Some(tys[739].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(47, 79, "getgroups", "getgroups", 0, vec![Param::new("size", tys[509].clone(), None), Param::new("list", tys[708].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(48, 70, "getitimer", "getitimer", 0, vec![Param::new("which", tys[361].clone(), None), Param::new("cur", tys[712].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(49, 31, "getpeername", "getpeername", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("peer", tys[677].clone(), None), Param::new("peerlen", tys[678].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(50, 31, "getpeername$inet", "getpeername", 0, vec![Param::new("fd", tys[746].clone(), None), Param::new("peer", tys[671].clone(), None), Param::new("peerlen", tys[678].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(51, 31, "getpeername$inet6", "getpeername", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("peer", tys[675].clone(), None), Param::new("peerlen", tys[678].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(52, 31, "getpeername$unix", "getpeername", 0, vec![Param::new("fd", tys[748].clone(), None), Param::new("peer", tys[713].clone(), None), Param::new("peerlen", tys[678].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(53, 207, "getpgid", "getpgid", 0, vec![Param::new("pid", tys[743].clone(), None), ], Some(tys[743].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(54, 81, "getpgrp", "getpgrp", 0, vec![], Some(tys[743].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(55, 20, "getpid", "getpid", 0, vec![], Some(tys[743].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(56, 39, "getppid", "getppid", 0, vec![], Some(tys[743].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(57, 194, "getrlimit", "getrlimit", 0, vec![Param::new("res", tys[389].clone(), None), Param::new("rlim", tys[714].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(58, 19, "getrusage", "getrusage", 0, vec![Param::new("who", tys[390].clone(), None), Param::new("usage", tys[715].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(59, 32, "getsockname", "getsockname", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("addr", tys[677].clone(), None), Param::new("addrlen", tys[716].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(60, 32, "getsockname$inet", "getsockname", 0, vec![Param::new("fd", tys[746].clone(), None), Param::new("addr", tys[671].clone(), None), Param::new("addrlen", tys[716].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(61, 32, "getsockname$inet6", "getsockname", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("addr", tys[675].clone(), None), Param::new("addrlen", tys[716].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(62, 32, "getsockname$unix", "getsockname", 0, vec![Param::new("fd", tys[748].clone(), None), Param::new("addr", tys[713].clone(), None), Param::new("addrlen", tys[716].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(63, 118, "getsockopt", "getsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[466].clone(), None), Param::new("optname", tys[466].clone(), None), Param::new("optval", tys[706].clone(), None), Param::new("optlen", tys[717].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_1(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(64, 118, "getsockopt$SO_PEERCRED", "getsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[160].clone(), None), Param::new("optname", tys[152].clone(), None), Param::new("optval", tys[718].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(65, 118, "getsockopt$inet_opts", "getsockopt", 0, vec![Param::new("fd", tys[746].clone(), None), Param::new("level", tys[165].clone(), None), Param::new("optname", tys[453].clone(), None), Param::new("optval", tys[706].clone(), None), Param::new("optlen", tys[717].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(66, 118, "getsockopt$sock_cred", "getsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[160].clone(), None), Param::new("optname", tys[152].clone(), None), Param::new("optval", tys[718].clone(), None), Param::new("optlen", tys[717].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(67, 118, "getsockopt$sock_int", "getsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[160].clone(), None), Param::new("optname", tys[398].clone(), None), Param::new("optval", tys[674].clone(), None), Param::new("optlen", tys[717].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(68, 118, "getsockopt$sock_linger", "getsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[160].clone(), None), Param::new("optname", tys[142].clone(), None), Param::new("optval", tys[668].clone(), None), Param::new("optlen", tys[717].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(69, 118, "getsockopt$sock_timeval", "getsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[160].clone(), None), Param::new("optname", tys[399].clone(), None), Param::new("optval", tys[710].clone(), None), Param::new("optlen", tys[717].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(70, 24, "getuid", "getuid", 0, vec![], Some(tys[750].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(71, 54, "ioctl$BIOCFLUSH", "ioctl", 1, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[288].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(72, 54, "ioctl$BIOCGBLEN", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[168].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(73, 54, "ioctl$BIOCGDIRFILT", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[173].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(74, 54, "ioctl$BIOCGDLTLIST", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[270].clone(), None), Param::new("arg", tys[670].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(75, 54, "ioctl$BIOCGETIF", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[202].clone(), None), Param::new("arg", tys[672].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(76, 54, "ioctl$BIOCGFILDROP", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[172].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(77, 54, "ioctl$BIOCGHDRCMPLT", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[171].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(78, 54, "ioctl$BIOCGRSIG", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[170].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(79, 54, "ioctl$BIOCGRTIMEOUT", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[198].clone(), None), Param::new("arg", tys[710].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(80, 54, "ioctl$BIOCGSTATS", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[191].clone(), None), Param::new("arg", tys[673].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(81, 54, "ioctl$BIOCIMMEDIATE", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[207].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(82, 54, "ioctl$BIOCLOCK", "ioctl", 1, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[290].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(83, 54, "ioctl$BIOCPROMISC", "ioctl", 1, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[289].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(84, 54, "ioctl$BIOCSBLEN", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[269].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(85, 54, "ioctl$BIOCSDIRFILT", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[212].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(86, 54, "ioctl$BIOCSDLT", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[211].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(87, 54, "ioctl$BIOCSETF", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[245].clone(), None), Param::new("arg", tys[544].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(88, 54, "ioctl$BIOCSETIF", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[256].clone(), None), Param::new("arg", tys[545].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(89, 54, "ioctl$BIOCSETWF", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[247].clone(), None), Param::new("arg", tys[544].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(90, 54, "ioctl$BIOCSFILDROP", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[210].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(91, 54, "ioctl$BIOCSHDRCMPLT", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[209].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(92, 54, "ioctl$BIOCSRSIG", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[208].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(93, 54, "ioctl$BIOCSRTIMEOUT", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[246].clone(), None), Param::new("arg", tys[651].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(94, 54, "ioctl$BIOCVERSION", "ioctl", 0, vec![Param::new("fd", tys[727].clone(), None), Param::new("cmd", tys[169].clone(), None), Param::new("arg", tys[676].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(95, 54, "ioctl$DIOCMAP", "ioctl", 0, vec![Param::new("fd", tys[729].clone(), None), Param::new("cmd", tys[273].clone(), None), Param::new("arg", tys[548].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(96, 54, "ioctl$FIOASYNC", "ioctl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[222].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(97, 54, "ioctl$FIOGETOWN", "ioctl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[181].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(98, 54, "ioctl$FIONBIO", "ioctl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[223].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(99, 54, "ioctl$FIONREAD", "ioctl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[182].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(100, 54, "ioctl$FIOSETOWN", "ioctl", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("cmd", tys[221].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(101, 54, "ioctl$KDDISABIO", "ioctl", 1, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[294].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(102, 54, "ioctl$KDENABIO", "ioctl", 1, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[293].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(103, 54, "ioctl$KDGETLED", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[175].clone(), None), Param::new("arg", tys[549].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(104, 54, "ioctl$KDGKBMODE", "ioctl", 1, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[174].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(105, 54, "ioctl$KDMKTONE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[291].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(106, 54, "ioctl$KDSETLED", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[295].clone(), None), Param::new("arg", tys[550].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(107, 54, "ioctl$KDSETMODE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[292].clone(), None), Param::new("arg", tys[551].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(108, 54, "ioctl$KDSETRAD", "ioctl", 1, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[296].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(109, 54, "ioctl$LIOCSFD", "ioctl", 0, vec![Param::new("fd", tys[730].clone(), None), Param::new("cmd", tys[224].clone(), None), Param::new("arg", tys[538].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(110, 54, "ioctl$PCIOCGETROM", "ioctl", 0, vec![Param::new("fd", tys[732].clone(), None), Param::new("cmd", tys[276].clone(), None), Param::new("arg", tys[679].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(111, 54, "ioctl$PCIOCREAD", "ioctl", 0, vec![Param::new("fd", tys[732].clone(), None), Param::new("cmd", tys[274].clone(), None), Param::new("arg", tys[680].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(112, 54, "ioctl$PCIOCWRITE", "ioctl", 0, vec![Param::new("fd", tys[732].clone(), None), Param::new("cmd", tys[275].clone(), None), Param::new("arg", tys[552].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(113, 54, "ioctl$SPKRTONE", "ioctl", 0, vec![Param::new("fd", tys[733].clone(), None), Param::new("cmd", tys[233].clone(), None), Param::new("arg", tys[554].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(114, 54, "ioctl$SPKRTUNE", "ioctl", 0, vec![Param::new("fd", tys[733].clone(), None), Param::new("cmd", tys[297].clone(), None), Param::new("arg", tys[554].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(115, 54, "ioctl$TIOCCBRK", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[311].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(116, 54, "ioctl$TIOCCDTR", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[309].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(117, 54, "ioctl$TIOCCHKVERAUTH", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[302].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(118, 54, "ioctl$TIOCCLRVERAUTH", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[301].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(119, 54, "ioctl$TIOCCONS", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[229].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(120, 54, "ioctl$TIOCDRAIN", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[303].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(121, 54, "ioctl$TIOCEXCL", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[299].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(122, 54, "ioctl$TIOCFLUSH", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[225].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(123, 54, "ioctl$TIOCGETA", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[203].clone(), None), Param::new("arg", tys[681].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(124, 54, "ioctl$TIOCGETD", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[183].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(125, 54, "ioctl$TIOCGFLAGS", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[184].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(126, 54, "ioctl$TIOCGTSTAMP", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[201].clone(), None), Param::new("arg", tys[710].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(127, 54, "ioctl$TIOCGWINSZ", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[192].clone(), None), Param::new("arg", tys[682].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_2(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(128, 54, "ioctl$TIOCMBIC", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[230].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(129, 54, "ioctl$TIOCMBIS", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[231].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(130, 54, "ioctl$TIOCMGET", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[185].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(131, 54, "ioctl$TIOCMSET", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[232].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(132, 54, "ioctl$TIOCNOTTY", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[308].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(133, 54, "ioctl$TIOCNXCL", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[300].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(134, 54, "ioctl$TIOCOUTQ", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[186].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(135, 54, "ioctl$TIOCSBRK", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[312].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(136, 54, "ioctl$TIOCSCTTY", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[304].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(137, 54, "ioctl$TIOCSDTR", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[310].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(138, 54, "ioctl$TIOCSETA", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[258].clone(), None), Param::new("arg", tys[555].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(139, 54, "ioctl$TIOCSETAF", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[260].clone(), None), Param::new("arg", tys[555].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(140, 54, "ioctl$TIOCSETAW", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[259].clone(), None), Param::new("arg", tys[555].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(141, 54, "ioctl$TIOCSETD", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[226].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(142, 54, "ioctl$TIOCSETVERAUTH", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[227].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(143, 54, "ioctl$TIOCSFLAGS", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[228].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(144, 54, "ioctl$TIOCSPGRP", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[187].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(145, 54, "ioctl$TIOCSTART", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[306].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(146, 54, "ioctl$TIOCSTAT", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[305].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(147, 54, "ioctl$TIOCSTOP", "ioctl", 1, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[307].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(148, 54, "ioctl$TIOCSTSTAMP", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[237].clone(), None), Param::new("arg", tys[557].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(149, 54, "ioctl$TIOCSWINSZ", "ioctl", 0, vec![Param::new("fd", tys[734].clone(), None), Param::new("cmd", tys[238].clone(), None), Param::new("arg", tys[556].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(150, 54, "ioctl$VMM_IOC_CREATE", "ioctl", 0, vec![Param::new("fd", tys[735].clone(), None), Param::new("cmd", tys[285].clone(), None), Param::new("arg", tys[558].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(151, 54, "ioctl$VMM_IOC_INFO", "ioctl", 0, vec![Param::new("fd", tys[735].clone(), None), Param::new("cmd", tys[278].clone(), None), Param::new("arg", tys[683].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(152, 54, "ioctl$VMM_IOC_INTR", "ioctl", 0, vec![Param::new("fd", tys[735].clone(), None), Param::new("cmd", tys[240].clone(), None), Param::new("arg", tys[559].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(153, 54, "ioctl$VMM_IOC_READREGS", "ioctl", 0, vec![Param::new("fd", tys[735].clone(), None), Param::new("cmd", tys[284].clone(), None), Param::new("arg", tys[684].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(154, 54, "ioctl$VMM_IOC_RESETCPU", "ioctl", 0, vec![Param::new("fd", tys[735].clone(), None), Param::new("cmd", tys[265].clone(), None), Param::new("arg", tys[561].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(155, 54, "ioctl$VMM_IOC_RUN", "ioctl", 0, vec![Param::new("fd", tys[735].clone(), None), Param::new("cmd", tys[279].clone(), None), Param::new("arg", tys[562].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(156, 54, "ioctl$VMM_IOC_TERM", "ioctl", 0, vec![Param::new("fd", tys[735].clone(), None), Param::new("cmd", tys[213].clone(), None), Param::new("arg", tys[563].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(157, 54, "ioctl$VMM_IOC_WRITEREGS", "ioctl", 0, vec![Param::new("fd", tys[735].clone(), None), Param::new("cmd", tys[266].clone(), None), Param::new("arg", tys[560].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(158, 54, "ioctl$VT_ACTIVATE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[314].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(159, 54, "ioctl$VT_GETACTIVE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[189].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(160, 54, "ioctl$VT_GETMODE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[193].clone(), None), Param::new("arg", tys[686].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(161, 54, "ioctl$VT_GETSTATE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[190].clone(), None), Param::new("arg", tys[687].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(162, 54, "ioctl$VT_OPENQRY", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[188].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(163, 54, "ioctl$VT_RELDISP", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[313].clone(), None), Param::new("arg", tys[565].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(164, 54, "ioctl$VT_SETMODE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[239].clone(), None), Param::new("arg", tys[564].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(165, 54, "ioctl$VT_WAITACTIVE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[315].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(166, 54, "ioctl$WSDISPLAYIO_ADDSCREEN", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[257].clone(), None), Param::new("arg", tys[566].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(167, 54, "ioctl$WSDISPLAYIO_DELFONT", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[262].clone(), None), Param::new("arg", tys[567].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(168, 54, "ioctl$WSDISPLAYIO_DELSCREEN", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[234].clone(), None), Param::new("arg", tys[568].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(169, 54, "ioctl$WSDISPLAYIO_GBURNER", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[197].clone(), None), Param::new("arg", tys[689].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(170, 54, "ioctl$WSDISPLAYIO_GETEMULTYPE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[277].clone(), None), Param::new("arg", tys[570].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(171, 54, "ioctl$WSDISPLAYIO_GETSCREEN", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[280].clone(), None), Param::new("arg", tys[566].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(172, 54, "ioctl$WSDISPLAYIO_GETSCREENTYPE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[281].clone(), None), Param::new("arg", tys[571].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(173, 54, "ioctl$WSDISPLAYIO_GMODE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[180].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(174, 54, "ioctl$WSDISPLAYIO_GVIDEO", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[179].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(175, 54, "ioctl$WSDISPLAYIO_LDFONT", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[261].clone(), None), Param::new("arg", tys[567].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(176, 54, "ioctl$WSDISPLAYIO_LSFONT", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[282].clone(), None), Param::new("arg", tys[688].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(177, 54, "ioctl$WSDISPLAYIO_SBURNER", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[244].clone(), None), Param::new("arg", tys[569].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(178, 54, "ioctl$WSDISPLAYIO_SETSCREEN", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[220].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(179, 54, "ioctl$WSDISPLAYIO_SMODE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[219].clone(), None), Param::new("arg", tys[572].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(180, 54, "ioctl$WSDISPLAYIO_SVIDEO", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[218].clone(), None), Param::new("arg", tys[573].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(181, 54, "ioctl$WSDISPLAYIO_USEFONT", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[263].clone(), None), Param::new("arg", tys[567].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(182, 54, "ioctl$WSDISPLAYIO_WSMOUSED", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[254].clone(), None), Param::new("arg", tys[574].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(183, 54, "ioctl$WSKBDIO_BELL", "ioctl", 1, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[298].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(184, 54, "ioctl$WSKBDIO_COMPLEXBELL", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[248].clone(), None), Param::new("arg", tys[575].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(185, 54, "ioctl$WSKBDIO_GETBACKLIGHT", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[196].clone(), None), Param::new("arg", tys[691].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(186, 54, "ioctl$WSKBDIO_GETBELL", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[199].clone(), None), Param::new("arg", tys[690].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(187, 54, "ioctl$WSKBDIO_GETDEFAULTBELL", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[200].clone(), None), Param::new("arg", tys[690].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(188, 54, "ioctl$WSKBDIO_GETDEFAULTKEYREPEAT", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[195].clone(), None), Param::new("arg", tys[692].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(189, 54, "ioctl$WSKBDIO_GETENCODING", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[176].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(190, 54, "ioctl$WSKBDIO_GETENCODINGS", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[272].clone(), None), Param::new("arg", tys[693].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(191, 54, "ioctl$WSKBDIO_GETKEYREPEAT", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[194].clone(), None), Param::new("arg", tys[692].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_3(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(192, 54, "ioctl$WSKBDIO_GETMAP", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[271].clone(), None), Param::new("arg", tys[694].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(193, 54, "ioctl$WSKBDIO_GETMODE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[177].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(194, 54, "ioctl$WSKBDIO_SETBACKLIGHT", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[243].clone(), None), Param::new("arg", tys[576].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(195, 54, "ioctl$WSKBDIO_SETBELL", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[249].clone(), None), Param::new("arg", tys[575].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(196, 54, "ioctl$WSKBDIO_SETDEFAULTBELL", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[250].clone(), None), Param::new("arg", tys[575].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(197, 54, "ioctl$WSKBDIO_SETDEFAULTKEYREPEAT", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[242].clone(), None), Param::new("arg", tys[577].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(198, 54, "ioctl$WSKBDIO_SETENCODING", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[214].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(199, 54, "ioctl$WSKBDIO_SETKEYREPEAT", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[241].clone(), None), Param::new("arg", tys[577].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(200, 54, "ioctl$WSKBDIO_SETMAP", "ioctl", 0, vec![Param::new("fd", tys[737].clone(), None), Param::new("cmd", tys[251].clone(), None), Param::new("arg", tys[579].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(201, 54, "ioctl$WSKBDIO_SETMODE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[215].clone(), None), Param::new("arg", tys[580].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(202, 54, "ioctl$WSMOUSEIO_GCALIBCOORDS", "ioctl", 0, vec![Param::new("fd", tys[738].clone(), None), Param::new("cmd", tys[204].clone(), None), Param::new("arg", tys[696].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(203, 54, "ioctl$WSMOUSEIO_GETPARAMS", "ioctl", 0, vec![Param::new("fd", tys[738].clone(), None), Param::new("cmd", tys[252].clone(), None), Param::new("arg", tys[697].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(204, 54, "ioctl$WSMOUSEIO_GTYPE", "ioctl", 0, vec![Param::new("fd", tys[738].clone(), None), Param::new("cmd", tys[178].clone(), None), Param::new("arg", tys[674].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(205, 54, "ioctl$WSMOUSEIO_SCALIBCOORDS", "ioctl", 0, vec![Param::new("fd", tys[738].clone(), None), Param::new("cmd", tys[264].clone(), None), Param::new("arg", tys[582].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(206, 54, "ioctl$WSMOUSEIO_SETMODE", "ioctl", 0, vec![Param::new("fd", tys[738].clone(), None), Param::new("cmd", tys[217].clone(), None), Param::new("arg", tys[585].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(207, 54, "ioctl$WSMOUSEIO_SETPARAMS", "ioctl", 0, vec![Param::new("fd", tys[738].clone(), None), Param::new("cmd", tys[253].clone(), None), Param::new("arg", tys[584].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(208, 54, "ioctl$WSMOUSEIO_SRES", "ioctl", 0, vec![Param::new("fd", tys[738].clone(), None), Param::new("cmd", tys[216].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(209, 54, "ioctl$WSMUXIO_ADD_DEVICE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[235].clone(), None), Param::new("arg", tys[586].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(210, 54, "ioctl$WSMUXIO_INJECTEVENT", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[255].clone(), None), Param::new("arg", tys[574].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(211, 54, "ioctl$WSMUXIO_LIST_DEVICES", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[283].clone(), None), Param::new("arg", tys[587].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(212, 54, "ioctl$WSMUXIO_REMOVE_DEVICE", "ioctl", 0, vec![Param::new("fd", tys[736].clone(), None), Param::new("cmd", tys[236].clone(), None), Param::new("arg", tys[586].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(213, 72, "kevent", "kevent", 0, vec![Param::new("kd", tys[731].clone(), None), Param::new("changelist", tys[588].clone(), None), Param::new("nchanges", tys[466].clone(), None), Param::new("eventlist", tys[588].clone(), None), Param::new("nevents", tys[466].clone(), None), Param::new("timeout", tys[581].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(214, 269, "kqueue", "kqueue", 0, vec![], Some(tys[731].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(215, 45, "ktrace", "ktrace", 0, vec![Param::new("tracefile", tys[553].clone(), None), Param::new("ops", tys[382].clone(), None), Param::new("trpoints", tys[432].clone(), None), Param::new("pid", tys[743].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(216, 254, "lchown", "lchown", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("uid", tys[750].clone(), None), Param::new("gid", tys[739].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(217, 9, "link", "link", 0, vec![Param::new("old", tys[553].clone(), None), Param::new("new", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(218, 317, "linkat", "linkat", 0, vec![Param::new("oldfd", tys[728].clone(), None), Param::new("old", tys[553].clone(), None), Param::new("newfd", tys[728].clone(), None), Param::new("new", tys[553].clone(), None), Param::new("flags", tys[433].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(219, 106, "listen", "listen", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("backlog", tys[466].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(220, 199, "lseek", "lseek", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("pad", tys[321].clone(), None), Param::new("offset", tys[477].clone(), None), Param::new("whence", tys[392].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(221, 40, "lstat", "lstat", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("statbuf", tys[698].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(222, 75, "madvise", "madvise", 0, vec![Param::new("addr", tys[751].clone(), None), Param::new("len", tys[504].clone(), None), Param::new("advice", tys[383].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(223, 250, "minherit", "minherit", 0, vec![Param::new("addr", tys[751].clone(), None), Param::new("len", tys[504].clone(), None), Param::new("inherit", tys[373].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(224, 136, "mkdir", "mkdir", 0, vec![Param::new("path", tys[553].clone(), None), Param::new("mode", tys[444].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(225, 318, "mkdirat", "mkdirat", 0, vec![Param::new("fd", tys[728].clone(), None), Param::new("path", tys[553].clone(), None), Param::new("mode", tys[444].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(226, 14, "mknod", "mknod", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("mode", tys[384].clone(), None), Param::new("dev", tys[466].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(227, 14, "mknod$loop", "mknod", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("mode", tys[384].clone(), None), Param::new("dev", tys[528].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(228, 320, "mknodat", "mknodat", 0, vec![Param::new("dirfd", tys[728].clone(), None), Param::new("file", tys[553].clone(), None), Param::new("mode", tys[384].clone(), None), Param::new("dev", tys[466].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(229, 203, "mlock", "mlock", 0, vec![Param::new("addr", tys[751].clone(), None), Param::new("size", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(230, 271, "mlockall", "mlockall", 0, vec![Param::new("flags", tys[436].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(231, 197, "mmap", "mmap", 0, vec![Param::new("addr", tys[751].clone(), None), Param::new("len", tys[504].clone(), None), Param::new("prot", tys[385].clone(), None), Param::new("flags", tys[437].clone(), None), Param::new("fd", tys[726].clone(), None), Param::new("pad", tys[321].clone(), None), Param::new("offset", tys[477].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(232, 74, "mprotect", "mprotect", 0, vec![Param::new("addr", tys[751].clone(), None), Param::new("len", tys[504].clone(), None), Param::new("prot", tys[385].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(233, 286, "mquery", "mquery", 0, vec![Param::new("addr", tys[751].clone(), None), Param::new("len", tys[504].clone(), None), Param::new("prot", tys[385].clone(), None), Param::new("flags", tys[438].clone(), None), Param::new("fd", tys[726].clone(), None), Param::new("offset", tys[477].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(234, 297, "msgctl$IPC_RMID", "msgctl", 1, vec![Param::new("msqid", tys[740].clone(), None), Param::new("cmd", tys[321].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(235, 297, "msgctl$IPC_SET", "msgctl", 0, vec![Param::new("msqid", tys[740].clone(), None), Param::new("cmd", tys[206].clone(), None), Param::new("buf", tys[590].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(236, 297, "msgctl$IPC_STAT", "msgctl", 0, vec![Param::new("msqid", tys[740].clone(), None), Param::new("cmd", tys[268].clone(), None), Param::new("buf", tys[706].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(237, 225, "msgget", "msgget", 0, vec![Param::new("key", tys[532].clone(), None), Param::new("flags", tys[439].clone(), None), ], Some(tys[740].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(238, 225, "msgget$private", "msgget", 0, vec![Param::new("key", tys[321].clone(), None), Param::new("flags", tys[439].clone(), None), ], Some(tys[740].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(239, 227, "msgrcv", "msgrcv", 0, vec![Param::new("msqid", tys[740].clone(), None), Param::new("msgp", tys[699].clone(), None), Param::new("sz", tys[513].clone(), None), Param::new("typ", tys[386].clone(), None), Param::new("flags", tys[440].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(240, 226, "msgsnd", "msgsnd", 0, vec![Param::new("msqid", tys[740].clone(), None), Param::new("msgp", tys[592].clone(), None), Param::new("sz", tys[513].clone(), None), Param::new("flags", tys[441].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(241, 256, "msync", "msync", 0, vec![Param::new("addr", tys[751].clone(), None), Param::new("len", tys[504].clone(), None), Param::new("flags", tys[442].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(242, 204, "munlock", "munlock", 0, vec![Param::new("addr", tys[751].clone(), None), Param::new("size", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(243, 272, "munlockall", "munlockall", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(244, 73, "munmap", "munmap", 0, vec![Param::new("addr", tys[751].clone(), None), Param::new("len", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(245, 91, "nanosleep", "nanosleep", 0, vec![Param::new("req", tys[581].clone(), None), Param::new("rem", tys[664].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(246, 5, "open", "open", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[444].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(247, 5, "open$dir", "open", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[444].clone(), None), ], Some(tys[728].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(248, 321, "openat", "openat", 0, vec![Param::new("fd", tys[728].clone(), None), Param::new("file", tys[553].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[444].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(249, 321, "openat$bpf", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[593].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[727].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(250, 321, "openat$diskmap", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[594].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[729].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(251, 321, "openat$klog", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[595].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[730].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(252, 321, "openat$null", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[596].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(253, 321, "openat$pci", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[597].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[732].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(254, 321, "openat$pf", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[598].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(255, 321, "openat$speaker", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[599].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[733].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_4(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(256, 321, "openat$tty", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[600].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[734].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(257, 321, "openat$vmm", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[601].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[735].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(258, 321, "openat$wsdisplay", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[602].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[736].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(259, 321, "openat$wskbd", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[603].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[737].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(260, 321, "openat$wsmouse", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[604].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[738].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(261, 321, "openat$wsmuxkbd", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[605].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(262, 321, "openat$wsmuxmouse", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[606].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(263, 321, "openat$zero", "openat", 0, vec![Param::new("fd", tys[205].clone(), None), Param::new("file", tys[607].clone(), None), Param::new("flags", tys[387].clone(), None), Param::new("mode", tys[321].clone(), None), ], Some(tys[726].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(264, 263, "pipe", "pipe", 0, vec![Param::new("pipefd", tys[700].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(265, 101, "pipe2", "pipe2", 0, vec![Param::new("pipefd", tys[700].clone(), None), Param::new("flags", tys[445].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(266, 108, "pledge", "pledge", 0, vec![Param::new("promises", tys[589].clone(), None), Param::new("execpromises", tys[589].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(267, 252, "poll", "poll", 0, vec![Param::new("fds", tys[608].clone(), None), Param::new("nfds", tys[507].clone(), None), Param::new("timeout", tys[466].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(268, 173, "pread", "pread", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("buf", tys[635].clone(), None), Param::new("nbyte", tys[505].clone(), None), Param::new("pad", tys[321].clone(), None), Param::new("off", tys[477].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(269, 267, "preadv", "preadv", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("vec", tys[609].clone(), None), Param::new("vlen", tys[523].clone(), None), Param::new("pad", tys[321].clone(), None), Param::new("off", tys[477].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(270, 174, "pwrite", "pwrite", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("buf", tys[635].clone(), None), Param::new("nbyte", tys[505].clone(), None), Param::new("pad", tys[321].clone(), None), Param::new("off", tys[477].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(271, 268, "pwritev", "pwritev", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("vec", tys[610].clone(), None), Param::new("vlen", tys[523].clone(), None), Param::new("pad", tys[321].clone(), None), Param::new("off", tys[477].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(272, 3, "read", "read", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("buf", tys[706].clone(), None), Param::new("count", tys[505].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(273, 58, "readlink", "readlink", 0, vec![Param::new("path", tys[553].clone(), None), Param::new("buf", tys[706].clone(), None), Param::new("siz", tys[505].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(274, 322, "readlinkat", "readlinkat", 0, vec![Param::new("fd", tys[728].clone(), None), Param::new("path", tys[553].clone(), None), Param::new("buf", tys[706].clone(), None), Param::new("siz", tys[505].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(275, 120, "readv", "readv", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("vec", tys[609].clone(), None), Param::new("vlen", tys[523].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(276, 29, "recvfrom", "recvfrom", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("buf", tys[706].clone(), None), Param::new("len", tys[505].clone(), None), Param::new("f", tys[446].clone(), None), Param::new("addr", tys[535].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(277, 29, "recvfrom$inet", "recvfrom", 0, vec![Param::new("fd", tys[746].clone(), None), Param::new("buf", tys[706].clone(), None), Param::new("len", tys[505].clone(), None), Param::new("f", tys[446].clone(), None), Param::new("addr", tys[533].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(278, 29, "recvfrom$inet6", "recvfrom", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("buf", tys[706].clone(), None), Param::new("len", tys[505].clone(), None), Param::new("f", tys[446].clone(), None), Param::new("addr", tys[534].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(279, 29, "recvfrom$unix", "recvfrom", 0, vec![Param::new("fd", tys[748].clone(), None), Param::new("buf", tys[706].clone(), None), Param::new("len", tys[505].clone(), None), Param::new("f", tys[446].clone(), None), Param::new("addr", tys[537].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(280, 27, "recvmsg", "recvmsg", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("msg", tys[701].clone(), None), Param::new("f", tys[446].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(281, 128, "rename", "rename", 0, vec![Param::new("old", tys[553].clone(), None), Param::new("new", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(282, 323, "renameat", "renameat", 0, vec![Param::new("oldfd", tys[728].clone(), None), Param::new("old", tys[553].clone(), None), Param::new("newfd", tys[728].clone(), None), Param::new("new", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(283, 137, "rmdir", "rmdir", 0, vec![Param::new("path", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(284, 71, "select", "select", 0, vec![Param::new("n", tys[508].clone(), None), Param::new("inp", tys[702].clone(), None), Param::new("outp", tys[702].clone(), None), Param::new("exp", tys[702].clone(), None), Param::new("tvp", tys[711].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(285, 295, "semctl$GETALL", "semctl", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[321].clone(), None), Param::new("cmd", tys[317].clone(), None), Param::new("arg", tys[706].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(286, 295, "semctl$GETNCNT", "semctl", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[394].clone(), None), Param::new("cmd", tys[286].clone(), None), Param::new("arg", tys[706].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(287, 295, "semctl$GETPID", "semctl", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[394].clone(), None), Param::new("cmd", tys[287].clone(), None), Param::new("arg", tys[706].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(288, 295, "semctl$GETVAL", "semctl", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[394].clone(), None), Param::new("cmd", tys[316].clone(), None), Param::new("arg", tys[706].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(289, 295, "semctl$GETZCNT", "semctl", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[394].clone(), None), Param::new("cmd", tys[318].clone(), None), Param::new("arg", tys[706].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(290, 295, "semctl$IPC_RMID", "semctl", 1, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[321].clone(), None), Param::new("cmd", tys[321].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(291, 295, "semctl$IPC_SET", "semctl", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[321].clone(), None), Param::new("cmd", tys[206].clone(), None), Param::new("arg", tys[611].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(292, 295, "semctl$IPC_STAT", "semctl", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[321].clone(), None), Param::new("cmd", tys[268].clone(), None), Param::new("arg", tys[706].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(293, 295, "semctl$SETALL", "semctl", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[321].clone(), None), Param::new("cmd", tys[320].clone(), None), Param::new("arg", tys[612].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(294, 295, "semctl$SETVAL", "semctl", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("semnum", tys[394].clone(), None), Param::new("cmd", tys[319].clone(), None), Param::new("arg", tys[542].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(295, 221, "semget", "semget", 0, vec![Param::new("key", tys[531].clone(), None), Param::new("nsems", tys[394].clone(), None), Param::new("flags", tys[447].clone(), None), ], Some(tys[741].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(296, 221, "semget$private", "semget", 0, vec![Param::new("key", tys[321].clone(), None), Param::new("nsems", tys[394].clone(), None), Param::new("flags", tys[447].clone(), None), ], Some(tys[741].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(297, 290, "semop", "semop", 0, vec![Param::new("semid", tys[741].clone(), None), Param::new("ops", tys[613].clone(), None), Param::new("nops", tys[516].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(298, 28, "sendmsg", "sendmsg", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("msg", tys[615].clone(), None), Param::new("f", tys[450].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(299, 28, "sendmsg$unix", "sendmsg", 0, vec![Param::new("fd", tys[748].clone(), None), Param::new("msg", tys[616].clone(), None), Param::new("f", tys[450].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(300, 112, "sendsyslog", "sendsyslog", 0, vec![Param::new("msg", tys[635].clone(), None), Param::new("len", tys[510].clone(), None), Param::new("flags", tys[434].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(301, 133, "sendto", "sendto", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("buf", tys[635].clone(), None), Param::new("len", tys[505].clone(), None), Param::new("f", tys[450].clone(), None), Param::new("addr", tys[535].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(302, 133, "sendto$inet", "sendto", 0, vec![Param::new("fd", tys[746].clone(), None), Param::new("buf", tys[635].clone(), None), Param::new("len", tys[505].clone(), None), Param::new("f", tys[450].clone(), None), Param::new("addr", tys[533].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(303, 133, "sendto$inet6", "sendto", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("buf", tys[635].clone(), None), Param::new("len", tys[505].clone(), None), Param::new("f", tys[450].clone(), None), Param::new("addr", tys[534].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(304, 133, "sendto$unix", "sendto", 0, vec![Param::new("fd", tys[748].clone(), None), Param::new("buf", tys[635].clone(), None), Param::new("len", tys[505].clone(), None), Param::new("f", tys[450].clone(), None), Param::new("addr", tys[537].clone(), None), Param::new("addrlen", tys[504].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(305, 182, "setegid", "setegid", 0, vec![Param::new("egid", tys[739].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(306, 183, "seteuid", "seteuid", 0, vec![Param::new("euid", tys[750].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(307, 181, "setgid", "setgid", 0, vec![Param::new("gid", tys[739].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(308, 80, "setgroups", "setgroups", 0, vec![Param::new("size", tys[509].clone(), None), Param::new("list", tys[647].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(309, 69, "setitimer", "setitimer", 0, vec![Param::new("which", tys[361].clone(), None), Param::new("new", tys[652].clone(), None), Param::new("old", tys[665].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(310, 82, "setpgid", "setpgid", 0, vec![Param::new("pid", tys[743].clone(), None), Param::new("pgid", tys[743].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(311, 127, "setregid", "setregid", 0, vec![Param::new("rgid", tys[739].clone(), None), Param::new("egid", tys[739].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(312, 126, "setreuid", "setreuid", 0, vec![Param::new("ruid", tys[750].clone(), None), Param::new("euid", tys[750].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(313, 195, "setrlimit", "setrlimit", 0, vec![Param::new("res", tys[389].clone(), None), Param::new("rlim", tys[654].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(314, 105, "setsockopt", "setsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[466].clone(), None), Param::new("optname", tys[466].clone(), None), Param::new("optval", tys[635].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(315, 105, "setsockopt$inet6_MRT6_ADD_MFC", "setsockopt", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("level", tys[153].clone(), None), Param::new("optname", tys[137].clone(), None), Param::new("optval", tys[618].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(316, 105, "setsockopt$inet6_MRT6_ADD_MIF", "setsockopt", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("level", tys[153].clone(), None), Param::new("optname", tys[136].clone(), None), Param::new("optval", tys[619].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(317, 105, "setsockopt$inet6_MRT6_DEL_MFC", "setsockopt", 0, vec![Param::new("fd", tys[747].clone(), None), Param::new("level", tys[153].clone(), None), Param::new("optname", tys[138].clone(), None), Param::new("optval", tys[618].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(318, 105, "setsockopt$inet_opts", "setsockopt", 0, vec![Param::new("fd", tys[746].clone(), None), Param::new("level", tys[165].clone(), None), Param::new("optname", tys[453].clone(), None), Param::new("optval", tys[635].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(319, 105, "setsockopt$sock_cred", "setsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[160].clone(), None), Param::new("optname", tys[152].clone(), None), Param::new("optval", tys[655].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_5(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(320, 105, "setsockopt$sock_int", "setsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[160].clone(), None), Param::new("optname", tys[398].clone(), None), Param::new("optval", tys[542].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(321, 105, "setsockopt$sock_linger", "setsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[160].clone(), None), Param::new("optname", tys[142].clone(), None), Param::new("optval", tys[539].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(322, 105, "setsockopt$sock_timeval", "setsockopt", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("level", tys[160].clone(), None), Param::new("optname", tys[399].clone(), None), Param::new("optval", tys[651].clone(), None), Param::new("optlen", tys[517].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(323, 23, "setuid", "setuid", 0, vec![Param::new("uid", tys[750].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(324, 228, "shmat", "shmat", 0, vec![Param::new("shmid", tys[742].clone(), None), Param::new("addr", tys[751].clone(), None), Param::new("flags", tys[451].clone(), None), ], Some(tys[744].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(325, 296, "shmctl$IPC_RMID", "shmctl", 1, vec![Param::new("shmid", tys[742].clone(), None), Param::new("cmd", tys[321].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(326, 296, "shmctl$IPC_SET", "shmctl", 0, vec![Param::new("shmid", tys[742].clone(), None), Param::new("cmd", tys[206].clone(), None), Param::new("buf", tys[620].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(327, 296, "shmctl$IPC_STAT", "shmctl", 0, vec![Param::new("shmid", tys[742].clone(), None), Param::new("cmd", tys[268].clone(), None), Param::new("buf", tys[706].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(328, 296, "shmctl$SHM_LOCK", "shmctl", 1, vec![Param::new("shmid", tys[742].clone(), None), Param::new("cmd", tys[286].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(329, 296, "shmctl$SHM_UNLOCK", "shmctl", 1, vec![Param::new("shmid", tys[742].clone(), None), Param::new("cmd", tys[287].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(330, 230, "shmdt", "shmdt", 0, vec![Param::new("addr", tys[744].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(331, 289, "shmget", "shmget", 0, vec![Param::new("key", tys[530].clone(), None), Param::new("size", tys[520].clone(), None), Param::new("flags", tys[452].clone(), None), Param::new("unused", tys[751].clone(), None), ], Some(tys[742].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(332, 289, "shmget$private", "shmget", 0, vec![Param::new("key", tys[321].clone(), None), Param::new("size", tys[520].clone(), None), Param::new("flags", tys[452].clone(), None), Param::new("unused", tys[751].clone(), None), ], Some(tys[742].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(333, 134, "shutdown", "shutdown", 0, vec![Param::new("fd", tys[745].clone(), None), Param::new("how", tys[395].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(334, 97, "socket", "socket", 0, vec![Param::new("domain", tys[396].clone(), None), Param::new("type", tys[397].clone(), None), Param::new("proto", tys[476].clone(), None), ], Some(tys[745].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(335, 97, "socket$inet", "socket", 0, vec![Param::new("domain", tys[268].clone(), None), Param::new("type", tys[397].clone(), None), Param::new("proto", tys[476].clone(), None), ], Some(tys[746].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(336, 97, "socket$inet6", "socket", 0, vec![Param::new("domain", tys[267].clone(), None), Param::new("type", tys[397].clone(), None), Param::new("proto", tys[476].clone(), None), ], Some(tys[747].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(337, 97, "socket$unix", "socket", 0, vec![Param::new("domain", tys[206].clone(), None), Param::new("type", tys[403].clone(), None), Param::new("proto", tys[121].clone(), None), ], Some(tys[748].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(338, 135, "socketpair", "socketpair", 0, vec![Param::new("domain", tys[396].clone(), None), Param::new("type", tys[397].clone(), None), Param::new("proto", tys[476].clone(), None), Param::new("fds", tys[703].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(339, 135, "socketpair$unix", "socketpair", 0, vec![Param::new("domain", tys[206].clone(), None), Param::new("type", tys[403].clone(), None), Param::new("proto", tys[121].clone(), None), Param::new("fds", tys[704].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(340, 38, "stat", "stat", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("statbuf", tys[698].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(341, 57, "symlink", "symlink", 0, vec![Param::new("old", tys[553].clone(), None), Param::new("new", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(342, 324, "symlinkat", "symlinkat", 0, vec![Param::new("old", tys[553].clone(), None), Param::new("newfd", tys[728].clone(), None), Param::new("new", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(343, 36, "sync", "sync", 0, vec![], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(344, 202, "sysctl$ddb", "sysctl", 0, vec![Param::new("name", tys[621].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(345, 202, "sysctl$fs", "sysctl", 0, vec![Param::new("name", tys[622].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(346, 202, "sysctl$hw", "sysctl", 0, vec![Param::new("name", tys[623].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(347, 202, "sysctl$kern", "sysctl", 0, vec![Param::new("name", tys[624].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(348, 202, "sysctl$machdep", "sysctl", 0, vec![Param::new("name", tys[625].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(349, 202, "sysctl$net_inet6_icmp6", "sysctl", 0, vec![Param::new("name", tys[626].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(350, 202, "sysctl$net_inet6_ip6", "sysctl", 0, vec![Param::new("name", tys[627].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(351, 202, "sysctl$net_inet_ah", "sysctl", 0, vec![Param::new("name", tys[628].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(352, 202, "sysctl$net_inet_carp", "sysctl", 0, vec![Param::new("name", tys[629].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(353, 202, "sysctl$net_inet_divert", "sysctl", 0, vec![Param::new("name", tys[630].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(354, 202, "sysctl$net_inet_esp", "sysctl", 0, vec![Param::new("name", tys[631].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(355, 202, "sysctl$net_inet_etherip", "sysctl", 0, vec![Param::new("name", tys[632].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(356, 202, "sysctl$net_inet_gre", "sysctl", 0, vec![Param::new("name", tys[633].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(357, 202, "sysctl$net_inet_icmp", "sysctl", 0, vec![Param::new("name", tys[634].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(358, 202, "sysctl$net_inet_ip", "sysctl", 0, vec![Param::new("name", tys[636].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(359, 202, "sysctl$net_inet_ipcomp", "sysctl", 0, vec![Param::new("name", tys[637].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(360, 202, "sysctl$net_inet_ipip", "sysctl", 0, vec![Param::new("name", tys[638].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(361, 202, "sysctl$net_inet_tcp", "sysctl", 0, vec![Param::new("name", tys[639].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(362, 202, "sysctl$net_inet_udp", "sysctl", 0, vec![Param::new("name", tys[640].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(363, 202, "sysctl$net_mpls", "sysctl", 0, vec![Param::new("name", tys[641].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(364, 202, "sysctl$net_pipex", "sysctl", 0, vec![Param::new("name", tys[642].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(365, 202, "sysctl$vfs_ffs", "sysctl", 0, vec![Param::new("name", tys[643].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(366, 202, "sysctl$vfs_fuse", "sysctl", 0, vec![Param::new("name", tys[644].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(367, 202, "sysctl$vfs_nfs", "sysctl", 0, vec![Param::new("name", tys[645].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(368, 202, "sysctl$vm", "sysctl", 0, vec![Param::new("name", tys[646].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(369, 202, "sysctl$vm_swapencrypt", "sysctl", 0, vec![Param::new("name", tys[648].clone(), None), Param::new("namelen", tys[482].clone(), None), Param::new("oldp", tys[707].clone(), None), Param::new("oldlenp", tys[705].clone(), None), Param::new("newp", tys[635].clone(), None), Param::new("newlen", tys[514].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(370, 0, "syz_builtin0", "syz_builtin0", 0, vec![Param::new("a", tys[650].clone(), None), ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(371, 0, "syz_builtin1", "syz_builtin1", 0, vec![Param::new("a", tys[709].clone(), None), ], None,SyscallAttr{ disable: true, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(372, 0, "syz_emit_ethernet", "syz_emit_ethernet", 0, vec![Param::new("len", tys[518].clone(), None), Param::new("packet", tys[656].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(373, 0, "syz_execute_func", "syz_execute_func", 0, vec![Param::new("text", tys[657].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(374, 0, "syz_extract_tcp_res", "syz_extract_tcp_res", 0, vec![Param::new("res", tys[719].clone(), None), Param::new("seq_inc", tys[466].clone(), None), Param::new("ack_inc", tys[466].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(375, 0, "syz_extract_tcp_res$synack", "syz_extract_tcp_res", 0, vec![Param::new("res", tys[719].clone(), None), Param::new("seq_inc", tys[145].clone(), None), Param::new("ack_inc", tys[165].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(376, 0, "syz_open_pts", "syz_open_pts", 0, vec![], Some(tys[734].clone()), SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(377, 200, "truncate", "truncate", 0, vec![Param::new("file", tys[553].clone(), None), Param::new("pad", tys[321].clone(), None), Param::new("len", tys[477].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(378, 10, "unlink", "unlink", 0, vec![Param::new("path", tys[553].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(379, 325, "unlinkat", "unlinkat", 0, vec![Param::new("fd", tys[728].clone(), None), Param::new("path", tys[553].clone(), None), Param::new("flags", tys[404].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(380, 114, "unveil", "unveil", 0, vec![Param::new("path", tys[553].clone(), None), Param::new("permissions", tys[658].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(381, 84, "utimensat", "utimensat", 0, vec![Param::new("dir", tys[728].clone(), None), Param::new("pathname", tys[553].clone(), None), Param::new("times", tys[652].clone(), None), Param::new("flags", tys[405].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(382, 76, "utimes", "utimes", 0, vec![Param::new("filename", tys[553].clone(), None), Param::new("times", tys[652].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(383, 11, "wait4", "wait4", 0, vec![Param::new("pid", tys[743].clone(), None), Param::new("status", tys[661].clone(), None), Param::new("options", tys[454].clone(), None), Param::new("ru", tys[667].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
fn syscalls_6(calls: &mut Vec<Syscall>, tys: &[Rc<Type>]){
	calls.push(Syscall::new(384, 4, "write", "write", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("buf", tys[635].clone(), None), Param::new("count", tys[505].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
	calls.push(Syscall::new(385, 121, "writev", "writev", 0, vec![Param::new("fd", tys[726].clone(), None), Param::new("vec", tys[610].clone(), None), Param::new("vlen", tys[523].clone(), None), ], None,SyscallAttr{ disable: false, timeout: 0, prog_tmout: 0, ignore_ret: false, brk_ret: false}));
}
pub fn syscalls() -> (Vec<Syscall>, Vec<Rc<Type>>){
	let tys = types();
	let mut calls = Vec::new();
	syscalls_0(&mut calls, &tys[..]);
	syscalls_1(&mut calls, &tys[..]);
	syscalls_2(&mut calls, &tys[..]);
	syscalls_3(&mut calls, &tys[..]);
	syscalls_4(&mut calls, &tys[..]);
	syscalls_5(&mut calls, &tys[..]);
	syscalls_6(&mut calls, &tys[..]);
	(calls, tys)
}

fn types_0(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(0, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(121), range:None})));
	tys.push(Rc::new(Type::new(1, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(941), range:Some((0, 1))})));
	tys.push(Rc::new(Type::new(2, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(940), range:Some((0, 1))})));
	tys.push(Rc::new(Type::new(3, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(854), range:None})));
	tys.push(Rc::new(Type::new(4, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(845), range:None})));
	tys.push(Rc::new(Type::new(5, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(919), range:None})));
	tys.push(Rc::new(Type::new(6, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(858), range:None})));
	tys.push(Rc::new(Type::new(7, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(876), range:None})));
	tys.push(Rc::new(Type::new(8, "array", 0, 1, false, true, TypeKind::Array{elem: TypeRef::Id(826), range:None})));
	tys.push(Rc::new(Type::new(9, "array", 0, 2, false, true, TypeKind::Array{elem: TypeRef::Id(462), range:None})));
	tys.push(Rc::new(Type::new(10, "array", 0, 2, false, true, TypeKind::Array{elem: TypeRef::Id(957), range:None})));
	tys.push(Rc::new(Type::new(11, "array", 0, 2, false, true, TypeKind::Array{elem: TypeRef::Id(901), range:None})));
	tys.push(Rc::new(Type::new(12, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(466), range:None})));
	tys.push(Rc::new(Type::new(13, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(758), range:None})));
	tys.push(Rc::new(Type::new(14, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(739), range:None})));
	tys.push(Rc::new(Type::new(15, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(972), range:None})));
	tys.push(Rc::new(Type::new(16, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(726), range:None})));
	tys.push(Rc::new(Type::new(17, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(897), range:None})));
	tys.push(Rc::new(Type::new(18, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(467), range:None})));
	tys.push(Rc::new(Type::new(19, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(841), range:Some((0, 1))})));
	tys.push(Rc::new(Type::new(20, "array", 0, 4, false, true, TypeKind::Array{elem: TypeRef::Id(841), range:None})));
	tys.push(Rc::new(Type::new(21, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(882), range:None})));
	tys.push(Rc::new(Type::new(22, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(589), range:None})));
	tys.push(Rc::new(Type::new(23, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(839), range:None})));
	tys.push(Rc::new(Type::new(24, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(838), range:None})));
	tys.push(Rc::new(Type::new(25, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(763), range:None})));
	tys.push(Rc::new(Type::new(26, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(764), range:None})));
	tys.push(Rc::new(Type::new(27, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(754), range:None})));
	tys.push(Rc::new(Type::new(28, "array", 0, 8, false, true, TypeKind::Array{elem: TypeRef::Id(867), range:None})));
	tys.push(Rc::new(Type::new(29, "array", 10, 1, false, false, TypeKind::Array{elem: TypeRef::Id(121), range:Some((10, 10))})));
	tys.push(Rc::new(Type::new(30, "array", 12, 1, false, false, TypeKind::Array{elem: TypeRef::Id(121), range:Some((12, 12))})));
	tys.push(Rc::new(Type::new(31, "array", 13, 1, false, false, TypeKind::Array{elem: TypeRef::Id(121), range:Some((13, 13))})));
	tys.push(Rc::new(Type::new(32, "array", 144, 8, false, false, TypeKind::Array{elem: TypeRef::Id(468), range:Some((18, 18))})));
	tys.push(Rc::new(Type::new(33, "array", 16, 1, false, false, TypeKind::Array{elem: TypeRef::Id(121), range:Some((16, 16))})));
	tys.push(Rc::new(Type::new(34, "array", 192, 8, false, false, TypeKind::Array{elem: TypeRef::Id(939), range:Some((8, 8))})));
	tys.push(Rc::new(Type::new(35, "array", 2, 1, false, false, TypeKind::Array{elem: TypeRef::Id(112), range:Some((2, 2))})));
	tys.push(Rc::new(Type::new(36, "array", 24, 1, false, false, TypeKind::Array{elem: TypeRef::Id(62), range:Some((4, 4))})));
	tys.push(Rc::new(Type::new(37, "array", 256, 4, false, false, TypeKind::Array{elem: TypeRef::Id(969), range:Some((16, 16))})));
	tys.push(Rc::new(Type::new(38, "array", 256, 4, false, false, TypeKind::Array{elem: TypeRef::Id(974), range:Some((32, 32))})));
	tys.push(Rc::new(Type::new(39, "array", 3, 1, false, false, TypeKind::Array{elem: TypeRef::Id(121), range:Some((3, 3))})));
	tys.push(Rc::new(Type::new(40, "array", 32, 4, false, false, TypeKind::Array{elem: TypeRef::Id(466), range:Some((8, 8))})));
	tys.push(Rc::new(Type::new(41, "array", 384, 8, false, false, TypeKind::Array{elem: TypeRef::Id(948), range:Some((16, 16))})));
	tys.push(Rc::new(Type::new(42, "array", 4, 1, false, false, TypeKind::Array{elem: TypeRef::Id(121), range:Some((4, 4))})));
	tys.push(Rc::new(Type::new(43, "array", 48, 8, false, false, TypeKind::Array{elem: TypeRef::Id(468), range:Some((6, 6))})));
	tys.push(Rc::new(Type::new(44, "array", 5, 1, false, false, TypeKind::Array{elem: TypeRef::Id(102), range:Some((5, 5))})));
	tys.push(Rc::new(Type::new(45, "array", 512, 1, false, false, TypeKind::Array{elem: TypeRef::Id(59), range:Some((4, 4))})));
	tys.push(Rc::new(Type::new(46, "array", 56, 8, false, false, TypeKind::Array{elem: TypeRef::Id(468), range:Some((7, 7))})));
	tys.push(Rc::new(Type::new(47, "array", 6, 1, false, false, TypeKind::Array{elem: TypeRef::Id(121), range:Some((6, 6))})));
	tys.push(Rc::new(Type::new(48, "array", 6, 1, false, false, TypeKind::Array{elem: TypeRef::Id(112), range:Some((6, 6))})));
	tys.push(Rc::new(Type::new(49, "array", 8, 1, false, false, TypeKind::Array{elem: TypeRef::Id(121), range:Some((8, 8))})));
	tys.push(Rc::new(Type::new(50, "array", 80, 8, false, false, TypeKind::Array{elem: TypeRef::Id(468), range:Some((10, 10))})));
	tys.push(Rc::new(Type::new(51, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRange(0, 16), ""))));
	tys.push(Rc::new(Type::new(52, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRange(0, 8), ""))));
	tys.push(Rc::new(Type::new(53, "array", 0, 1, false, true, TypeKind::new_buffer(BufferKind::BlobRand, ""))));
	tys.push(Rc::new(Type::new(54, "array", 16, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(16, 16), ""))));
	tys.push(Rc::new(Type::new(55, "array", 20, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(20, 20), ""))));
	tys.push(Rc::new(Type::new(56, "array", 3, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(3, 3), ""))));
	tys.push(Rc::new(Type::new(57, "array", 6, 1, false, false, TypeKind::new_buffer(BufferKind::BlobRange(6, 6), ""))));
	tys.push(Rc::new(Type::new(58, "filename", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))));
	tys.push(Rc::new(Type::new(59, "filename", 128, 1, false, false, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))));
	tys.push(Rc::new(Type::new(60, "filename", 16, 1, false, false, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))));
	tys.push(Rc::new(Type::new(61, "filename", 32, 1, false, false, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))));
	tys.push(Rc::new(Type::new(62, "filename", 6, 1, false, false, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))));
	tys.push(Rc::new(Type::new(63, "filename", 64, 1, false, false, TypeKind::new_buffer(BufferKind::new_fname(vec![], false),""))));
}
fn types_1(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(64, "string", 0, 1, false, true, TypeKind::new_buffer(BufferKind::new_str(vec![], false), ""))));
	tys.push(Rc::new(Type::new(65, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/klog\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(66, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/null\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(67, "string", 10, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/zero\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(68, "string", 11, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/wskbd\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(69, "string", 12, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/wskbd0\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(70, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/diskmap\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(71, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/speaker\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(72, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/ttyCcfg\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(73, "string", 13, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/wsmouse\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(74, "string", 14, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/wsmouse0\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(75, "string", 2, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"r\x00"##, br##"W\x00"##, br##"x\x00"##, br##"c\x00"##, ], false), "unveil_permissions"))));
	tys.push(Rc::new(Type::new(76, "string", 8, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/pf\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(77, "string", 9, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/bpf\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(78, "string", 9, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/pci\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(79, "string", 9, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/tty\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(80, "string", 9, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"/dev/vmm\x00"##, ], false), ""))));
	tys.push(Rc::new(Type::new(81, "stringnoz", 3, 1, false, false, TypeKind::new_buffer(BufferKind::new_str(vec![br##"tap"##, ], true), ""))));
	tys.push(Rc::new(Type::new(82, "text", 0, 1, false, true, TypeKind::new_buffer(BufferKind::Text(TextKind::Target),""))));
	tys.push(Rc::new(Type::new(83, "const", 0, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 1, bitfield_len: 2, bitfield_unit: 1, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(84, "const", 0, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 1, bitfield_len: 3, bitfield_unit: 1, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(85, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, val: 4, pad: false})));
	tys.push(Rc::new(Type::new(86, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, val: 6, pad: false})));
	tys.push(Rc::new(Type::new(87, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 11, pad: false})));
	tys.push(Rc::new(Type::new(88, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 128, pad: false})));
	tys.push(Rc::new(Type::new(89, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 129, pad: false})));
	tys.push(Rc::new(Type::new(90, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 12, pad: false})));
	tys.push(Rc::new(Type::new(91, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 131, pad: false})));
	tys.push(Rc::new(Type::new(92, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 133, pad: false})));
	tys.push(Rc::new(Type::new(93, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 134, pad: false})));
	tys.push(Rc::new(Type::new(94, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 135, pad: false})));
	tys.push(Rc::new(Type::new(95, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 136, pad: false})));
	tys.push(Rc::new(Type::new(96, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 137, pad: false})));
	tys.push(Rc::new(Type::new(97, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 13, pad: false})));
	tys.push(Rc::new(Type::new(98, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 148, pad: false})));
	tys.push(Rc::new(Type::new(99, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 14, pad: false})));
	tys.push(Rc::new(Type::new(100, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 15, pad: false})));
	tys.push(Rc::new(Type::new(101, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 16, pad: false})));
	tys.push(Rc::new(Type::new(102, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 170, pad: false})));
	tys.push(Rc::new(Type::new(103, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 172, pad: false})));
	tys.push(Rc::new(Type::new(104, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 17, pad: false})));
	tys.push(Rc::new(Type::new(105, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 187, pad: false})));
	tys.push(Rc::new(Type::new(106, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 18, pad: false})));
	tys.push(Rc::new(Type::new(107, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 194, pad: false})));
	tys.push(Rc::new(Type::new(108, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 19, pad: false})));
	tys.push(Rc::new(Type::new(109, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(110, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 20, pad: false})));
	tys.push(Rc::new(Type::new(111, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 254, pad: false})));
	tys.push(Rc::new(Type::new(112, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 255, pad: false})));
	tys.push(Rc::new(Type::new(113, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})));
	tys.push(Rc::new(Type::new(114, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3, pad: false})));
	tys.push(Rc::new(Type::new(115, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4, pad: false})));
	tys.push(Rc::new(Type::new(116, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5, pad: false})));
	tys.push(Rc::new(Type::new(117, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 68, pad: false})));
	tys.push(Rc::new(Type::new(118, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6, pad: false})));
	tys.push(Rc::new(Type::new(119, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7, pad: false})));
	tys.push(Rc::new(Type::new(120, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8, pad: false})));
	tys.push(Rc::new(Type::new(121, "const", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(122, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(123, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2048, pad: false})));
	tys.push(Rc::new(Type::new(124, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2054, pad: false})));
	tys.push(Rc::new(Type::new(125, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 33024, pad: false})));
	tys.push(Rc::new(Type::new(126, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 34525, pad: false})));
	tys.push(Rc::new(Type::new(127, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 34984, pad: false})));
}
fn types_2(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(128, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 24, pad: false})));
	tys.push(Rc::new(Type::new(129, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})));
	tys.push(Rc::new(Type::new(130, "const", 2, 2, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(131, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2130706433, pad: false})));
	tys.push(Rc::new(Type::new(132, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3758096385, pad: false})));
	tys.push(Rc::new(Type::new(133, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3758096386, pad: false})));
	tys.push(Rc::new(Type::new(134, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4294967295, pad: false})));
	tys.push(Rc::new(Type::new(135, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(136, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 102, pad: false})));
	tys.push(Rc::new(Type::new(137, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 104, pad: false})));
	tys.push(Rc::new(Type::new(138, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 105, pad: false})));
	tys.push(Rc::new(Type::new(139, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 108, pad: false})));
	tys.push(Rc::new(Type::new(140, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 10, pad: false})));
	tys.push(Rc::new(Type::new(141, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 112, pad: false})));
	tys.push(Rc::new(Type::new(142, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 128, pad: false})));
	tys.push(Rc::new(Type::new(143, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 17, pad: false})));
	tys.push(Rc::new(Type::new(144, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 18, pad: false})));
	tys.push(Rc::new(Type::new(145, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(146, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 24, pad: false})));
	tys.push(Rc::new(Type::new(147, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 258, pad: false})));
	tys.push(Rc::new(Type::new(148, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})));
	tys.push(Rc::new(Type::new(149, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 33, pad: false})));
	tys.push(Rc::new(Type::new(150, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 35, pad: false})));
	tys.push(Rc::new(Type::new(151, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3, pad: false})));
	tys.push(Rc::new(Type::new(152, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4130, pad: false})));
	tys.push(Rc::new(Type::new(153, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 41, pad: false})));
	tys.push(Rc::new(Type::new(154, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 47, pad: false})));
	tys.push(Rc::new(Type::new(155, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4, pad: false})));
	tys.push(Rc::new(Type::new(156, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 50, pad: false})));
	tys.push(Rc::new(Type::new(157, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 51, pad: false})));
	tys.push(Rc::new(Type::new(158, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 58, pad: false})));
	tys.push(Rc::new(Type::new(159, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5, pad: false})));
	tys.push(Rc::new(Type::new(160, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 65535, pad: false})));
	tys.push(Rc::new(Type::new(161, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6, pad: false})));
	tys.push(Rc::new(Type::new(162, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7, pad: false})));
	tys.push(Rc::new(Type::new(163, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 97, pad: false})));
	tys.push(Rc::new(Type::new(164, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 9, pad: false})));
	tys.push(Rc::new(Type::new(165, "const", 4, 4, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(166, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(167, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(168, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074020966, pad: false})));
	tys.push(Rc::new(Type::new(169, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074020977, pad: false})));
	tys.push(Rc::new(Type::new(170, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074020979, pad: false})));
	tys.push(Rc::new(Type::new(171, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074020980, pad: false})));
	tys.push(Rc::new(Type::new(172, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074020984, pad: false})));
	tys.push(Rc::new(Type::new(173, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074020988, pad: false})));
	tys.push(Rc::new(Type::new(174, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074023174, pad: false})));
	tys.push(Rc::new(Type::new(175, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074023233, pad: false})));
	tys.push(Rc::new(Type::new(176, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074026255, pad: false})));
	tys.push(Rc::new(Type::new(177, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074026260, pad: false})));
	tys.push(Rc::new(Type::new(178, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074026272, pad: false})));
	tys.push(Rc::new(Type::new(179, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074026308, pad: false})));
	tys.push(Rc::new(Type::new(180, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074026315, pad: false})));
	tys.push(Rc::new(Type::new(181, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074030203, pad: false})));
	tys.push(Rc::new(Type::new(182, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074030207, pad: false})));
	tys.push(Rc::new(Type::new(183, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074033690, pad: false})));
	tys.push(Rc::new(Type::new(184, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074033757, pad: false})));
	tys.push(Rc::new(Type::new(185, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074033770, pad: false})));
	tys.push(Rc::new(Type::new(186, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074033779, pad: false})));
	tys.push(Rc::new(Type::new(187, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074033783, pad: false})));
	tys.push(Rc::new(Type::new(188, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074034177, pad: false})));
	tys.push(Rc::new(Type::new(189, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074034183, pad: false})));
	tys.push(Rc::new(Type::new(190, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074165348, pad: false})));
	tys.push(Rc::new(Type::new(191, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074283119, pad: false})));
}
fn types_3(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(192, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074295912, pad: false})));
	tys.push(Rc::new(Type::new(193, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074296323, pad: false})));
	tys.push(Rc::new(Type::new(194, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074550536, pad: false})));
	tys.push(Rc::new(Type::new(195, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074550538, pad: false})));
	tys.push(Rc::new(Type::new(196, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074550545, pad: false})));
	tys.push(Rc::new(Type::new(197, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074550610, pad: false})));
	tys.push(Rc::new(Type::new(198, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074807406, pad: false})));
	tys.push(Rc::new(Type::new(199, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074812676, pad: false})));
	tys.push(Rc::new(Type::new(200, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074812678, pad: false})));
	tys.push(Rc::new(Type::new(201, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1074820187, pad: false})));
	tys.push(Rc::new(Type::new(202, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1075855979, pad: false})));
	tys.push(Rc::new(Type::new(203, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1076655123, pad: false})));
	tys.push(Rc::new(Type::new(204, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1092638501, pad: false})));
	tys.push(Rc::new(Type::new(205, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 18446744073709551516, pad: false})));
	tys.push(Rc::new(Type::new(206, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 1, pad: false})));
	tys.push(Rc::new(Type::new(207, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147762800, pad: false})));
	tys.push(Rc::new(Type::new(208, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147762802, pad: false})));
	tys.push(Rc::new(Type::new(209, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147762805, pad: false})));
	tys.push(Rc::new(Type::new(210, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147762809, pad: false})));
	tys.push(Rc::new(Type::new(211, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147762810, pad: false})));
	tys.push(Rc::new(Type::new(212, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147762813, pad: false})));
	tys.push(Rc::new(Type::new(213, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147767812, pad: false})));
	tys.push(Rc::new(Type::new(214, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147768080, pad: false})));
	tys.push(Rc::new(Type::new(215, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147768083, pad: false})));
	tys.push(Rc::new(Type::new(216, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147768097, pad: false})));
	tys.push(Rc::new(Type::new(217, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147768102, pad: false})));
	tys.push(Rc::new(Type::new(218, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147768133, pad: false})));
	tys.push(Rc::new(Type::new(219, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147768140, pad: false})));
	tys.push(Rc::new(Type::new(220, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147768150, pad: false})));
	tys.push(Rc::new(Type::new(221, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147772028, pad: false})));
	tys.push(Rc::new(Type::new(222, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147772029, pad: false})));
	tys.push(Rc::new(Type::new(223, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147772030, pad: false})));
	tys.push(Rc::new(Type::new(224, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147773567, pad: false})));
	tys.push(Rc::new(Type::new(225, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147775504, pad: false})));
	tys.push(Rc::new(Type::new(226, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147775515, pad: false})));
	tys.push(Rc::new(Type::new(227, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147775516, pad: false})));
	tys.push(Rc::new(Type::new(228, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147775580, pad: false})));
	tys.push(Rc::new(Type::new(229, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147775586, pad: false})));
	tys.push(Rc::new(Type::new(230, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147775595, pad: false})));
	tys.push(Rc::new(Type::new(231, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147775596, pad: false})));
	tys.push(Rc::new(Type::new(232, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2147775597, pad: false})));
	tys.push(Rc::new(Type::new(233, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148029185, pad: false})));
	tys.push(Rc::new(Type::new(234, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148030292, pad: false})));
	tys.push(Rc::new(Type::new(235, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148030305, pad: false})));
	tys.push(Rc::new(Type::new(236, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148030306, pad: false})));
	tys.push(Rc::new(Type::new(237, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148037722, pad: false})));
	tys.push(Rc::new(Type::new(238, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148037735, pad: false})));
	tys.push(Rc::new(Type::new(239, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148038146, pad: false})));
	tys.push(Rc::new(Type::new(240, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148292102, pad: false})));
	tys.push(Rc::new(Type::new(241, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148292359, pad: false})));
	tys.push(Rc::new(Type::new(242, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148292361, pad: false})));
	tys.push(Rc::new(Type::new(243, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148292370, pad: false})));
	tys.push(Rc::new(Type::new(244, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148292433, pad: false})));
	tys.push(Rc::new(Type::new(245, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148549223, pad: false})));
	tys.push(Rc::new(Type::new(246, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148549229, pad: false})));
	tys.push(Rc::new(Type::new(247, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148549239, pad: false})));
	tys.push(Rc::new(Type::new(248, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148554498, pad: false})));
	tys.push(Rc::new(Type::new(249, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148554499, pad: false})));
	tys.push(Rc::new(Type::new(250, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148554501, pad: false})));
	tys.push(Rc::new(Type::new(251, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148554510, pad: false})));
	tys.push(Rc::new(Type::new(252, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148554535, pad: false})));
	tys.push(Rc::new(Type::new(253, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2148554536, pad: false})));
	tys.push(Rc::new(Type::new(254, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2149078872, pad: false})));
	tys.push(Rc::new(Type::new(255, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2149078880, pad: false})));
}
fn types_4(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(256, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2149597804, pad: false})));
	tys.push(Rc::new(Type::new(257, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2149865299, pad: false})));
	tys.push(Rc::new(Type::new(258, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2150396948, pad: false})));
	tys.push(Rc::new(Type::new(259, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2150396949, pad: false})));
	tys.push(Rc::new(Type::new(260, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2150396950, pad: false})));
	tys.push(Rc::new(Type::new(261, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2153273165, pad: false})));
	tys.push(Rc::new(Type::new(262, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2153273167, pad: false})));
	tys.push(Rc::new(Type::new(263, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2153273168, pad: false})));
	tys.push(Rc::new(Type::new(264, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2166380324, pad: false})));
	tys.push(Rc::new(Type::new(265, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2185254405, pad: false})));
	tys.push(Rc::new(Type::new(266, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2185778696, pad: false})));
	tys.push(Rc::new(Type::new(267, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 24, pad: false})));
	tys.push(Rc::new(Type::new(268, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 2, pad: false})));
	tys.push(Rc::new(Type::new(269, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3221504614, pad: false})));
	tys.push(Rc::new(Type::new(270, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222291067, pad: false})));
	tys.push(Rc::new(Type::new(271, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222296333, pad: false})));
	tys.push(Rc::new(Type::new(272, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222296341, pad: false})));
	tys.push(Rc::new(Type::new(273, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222299767, pad: false})));
	tys.push(Rc::new(Type::new(274, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222302722, pad: false})));
	tys.push(Rc::new(Type::new(275, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222302723, pad: false})));
	tys.push(Rc::new(Type::new(276, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222302725, pad: false})));
	tys.push(Rc::new(Type::new(277, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222558558, pad: false})));
	tys.push(Rc::new(Type::new(278, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3222820355, pad: false})));
	tys.push(Rc::new(Type::new(279, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3223344642, pad: false})));
	tys.push(Rc::new(Type::new(280, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3223607125, pad: false})));
	tys.push(Rc::new(Type::new(281, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3223869277, pad: false})));
	tys.push(Rc::new(Type::new(282, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3227014990, pad: false})));
	tys.push(Rc::new(Type::new(283, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3238287203, pad: false})));
	tys.push(Rc::new(Type::new(284, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3259520519, pad: false})));
	tys.push(Rc::new(Type::new(285, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3305133569, pad: false})));
	tys.push(Rc::new(Type::new(286, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 3, pad: false})));
	tys.push(Rc::new(Type::new(287, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 4, pad: false})));
	tys.push(Rc::new(Type::new(288, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536887912, pad: false})));
	tys.push(Rc::new(Type::new(289, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536887913, pad: false})));
	tys.push(Rc::new(Type::new(290, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536887926, pad: false})));
	tys.push(Rc::new(Type::new(291, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536890120, pad: false})));
	tys.push(Rc::new(Type::new(292, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536890122, pad: false})));
	tys.push(Rc::new(Type::new(293, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536890172, pad: false})));
	tys.push(Rc::new(Type::new(294, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536890173, pad: false})));
	tys.push(Rc::new(Type::new(295, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536890178, pad: false})));
	tys.push(Rc::new(Type::new(296, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536890179, pad: false})));
	tys.push(Rc::new(Type::new(297, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536892162, pad: false})));
	tys.push(Rc::new(Type::new(298, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536893185, pad: false})));
	tys.push(Rc::new(Type::new(299, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900621, pad: false})));
	tys.push(Rc::new(Type::new(300, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900622, pad: false})));
	tys.push(Rc::new(Type::new(301, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900637, pad: false})));
	tys.push(Rc::new(Type::new(302, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900638, pad: false})));
	tys.push(Rc::new(Type::new(303, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900702, pad: false})));
	tys.push(Rc::new(Type::new(304, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900705, pad: false})));
	tys.push(Rc::new(Type::new(305, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900709, pad: false})));
	tys.push(Rc::new(Type::new(306, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900718, pad: false})));
	tys.push(Rc::new(Type::new(307, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900719, pad: false})));
	tys.push(Rc::new(Type::new(308, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900721, pad: false})));
	tys.push(Rc::new(Type::new(309, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900728, pad: false})));
	tys.push(Rc::new(Type::new(310, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900729, pad: false})));
	tys.push(Rc::new(Type::new(311, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900730, pad: false})));
	tys.push(Rc::new(Type::new(312, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536900731, pad: false})));
	tys.push(Rc::new(Type::new(313, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536901124, pad: false})));
	tys.push(Rc::new(Type::new(314, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536901125, pad: false})));
	tys.push(Rc::new(Type::new(315, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 536901126, pad: false})));
	tys.push(Rc::new(Type::new(316, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 5, pad: false})));
	tys.push(Rc::new(Type::new(317, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 6, pad: false})));
	tys.push(Rc::new(Type::new(318, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 7, pad: false})));
	tys.push(Rc::new(Type::new(319, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 8, pad: false})));
}
fn types_5(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(320, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 9, pad: false})));
	tys.push(Rc::new(Type::new(321, "const", 8, 8, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(322, "ipv6_routing_types", 1, 1, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: false})));
	tys.push(Rc::new(Type::new(323, "pad", 1, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(324, "pad", 27, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(325, "pad", 2, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(326, "pad", 4, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(327, "pad", 5, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(328, "pad", 6, 0, false, false, TypeKind::Const{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, val: 0, pad: true})));
	tys.push(Rc::new(Type::new(329, "csum", 2, 2, false, false, TypeKind::new_csum(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, CsumKind::Inet, Some(r##"parent"##), 0))));
	tys.push(Rc::new(Type::new(330, "csum", 2, 2, false, false, TypeKind::new_csum(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, CsumKind::Pseudo, Some(r##"parent"##), 17))));
	tys.push(Rc::new(Type::new(331, "csum", 2, 2, false, false, TypeKind::new_csum(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, CsumKind::Pseudo, Some(r##"parent"##), 58))));
	tys.push(Rc::new(Type::new(332, "csum", 2, 2, false, false, TypeKind::new_csum(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, CsumKind::Pseudo, Some(r##"tcp_packet"##), 6))));
	tys.push(Rc::new(Type::new(333, "arp_hrds", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 6, 15, 24, ], false))));
	tys.push(Rc::new(Type::new(334, "arp_ops", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 8, 9, ], false))));
	tys.push(Rc::new(Type::new(335, "clock_id", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(336, "cmsg_levels", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 65535, ], false))));
	tys.push(Rc::new(Type::new(337, "ctl_ddb_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 7, 8, ], false))));
	tys.push(Rc::new(Type::new(338, "ctl_hw_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, ], false))));
	tys.push(Rc::new(Type::new(339, "ctl_kern_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 88, ], false))));
	tys.push(Rc::new(Type::new(340, "ctl_net_inet6_icmp6_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![3, 8, 9, 10, 14, 15, 16, 17, 18, ], false))));
	tys.push(Rc::new(Type::new(341, "ctl_net_inet6_ip6_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 5, 8, 9, 10, 11, 14, 15, 16, 17, 18, 21, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, ], false))));
	tys.push(Rc::new(Type::new(342, "ctl_net_inet_carp_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(343, "ctl_net_inet_divert_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(344, "ctl_net_inet_esp_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(345, "ctl_net_inet_icmp_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 7, ], false))));
	tys.push(Rc::new(Type::new(346, "ctl_net_inet_ip_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, ], false))));
	tys.push(Rc::new(Type::new(347, "ctl_net_inet_tcp_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, ], false))));
	tys.push(Rc::new(Type::new(348, "ctl_net_inet_udp_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, ], false))));
	tys.push(Rc::new(Type::new(349, "ctl_net_mpls_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2, 3, 5, 6, ], false))));
	tys.push(Rc::new(Type::new(350, "ctl_net_pipex_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(351, "ctl_vfs_ffs_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ], false))));
	tys.push(Rc::new(Type::new(352, "ctl_vfs_fuse_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(353, "ctl_vm_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, ], false))));
	tys.push(Rc::new(Type::new(354, "ctl_vm_swapencrypt_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(355, "ether_types", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4, 512, 512, 1280, 1536, 1537, 1632, 1633, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2304, 2560, 2561, 2989, 2990, 2991, 4660, 5632, 6537, 6549, 15360, 15361, 15362, 15363, 15364, 15365, 15366, 15367, 15368, 15369, 15370, 15371, 15372, 15373, 16962, 16972, 17185, 19522, 21000, 24576, 24577, 24578, 24579, 24580, 24581, 24582, 24583, 24584, 24585, 25944, 25945, 28672, 28673, 28674, 28675, 28677, 28679, 28681, 28720, 28721, 28724, 32771, 32772, 32773, 32774, 32776, 32784, 32787, 32788, 32789, 32790, 32793, 32814, 32815, 32821, 32822, 32823, 32824, 32825, 32826, 32827, 32828, 32829, 32830, 32831, 32832, 32833, 32836, 32840, 32841, 32859, 32860, 32861, 32864, 32866, 32871, 32872, 32873, 32874, 32876, 32877, 32890, 32891, 32892, 32896, 32923, 32927, 32966, 32967, 32981, 32989, 33010, 33011, 33015, 33024, 33026, 33027, 33067, 33072, 33072, 33073, 33079, 33080, 33087, 33093, 33094, 33095, 33096, 33097, 33098, 33100, 33103, 33104, 33149, 33150, 33152, 33153, 33165, 33169, 33680, 34091, 34178, 34523, 34525, 34526, 34527, 34617, 34618, 34667, 34668, 34669, 34824, 34825, 34827, 34848, 34887, 34888, 34902, 34915, 34916, 34952, 34958, 34984, 36864, 36865, 36866, 36867, 43690, 64245, 65280, ], false))));
	tys.push(Rc::new(Type::new(356, "fcntl_dupfd", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 10, ], false))));
	tys.push(Rc::new(Type::new(357, "fcntl_getflags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 3, ], false))));
	tys.push(Rc::new(Type::new(358, "fcntl_lock", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![7, 8, 9, ], false))));
	tys.push(Rc::new(Type::new(359, "fcntl_status", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4, 8, 64, 128, 128, ], false))));
	tys.push(Rc::new(Type::new(360, "flock_type", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(361, "getitimer_which", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(362, "icmp_dest_unreach_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, ], false))));
	tys.push(Rc::new(Type::new(363, "icmp_parameter_prob_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(364, "icmp_redirect_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(365, "icmp_time_exceeded_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(366, "icmp_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 30, 31, 32, 33, 34, 35, 36, 39, 40, ], false))));
	tys.push(Rc::new(Type::new(367, "icmpv6_dest_unreach_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(368, "icmpv6_mld_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![130, 131, ], false))));
	tys.push(Rc::new(Type::new(369, "icmpv6_ndisc_option_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 24, 25, 31, ], false))));
	tys.push(Rc::new(Type::new(370, "icmpv6_ni_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![139, 140, ], false))));
	tys.push(Rc::new(Type::new(371, "icmpv6_param_prob_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(372, "icmpv6_time_exceed_codes", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(373, "inherit_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(374, "ipv4_option_timestamp_flags", 0, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, vec![0, 1, 3, ], false))));
	tys.push(Rc::new(Type::new(375, "ipv4_option_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 7, 68, 130, 131, 136, 137, 148, ], false))));
	tys.push(Rc::new(Type::new(376, "ipv4_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 6, 8, 12, 17, 22, 29, 41, 43, 44, 46, 47, 50, 51, 55, 58, 59, 60, 80, 97, 98, 103, 108, 112, 136, 137, 240, 255, ], false))));
	tys.push(Rc::new(Type::new(377, "ipv6_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 6, 8, 12, 17, 22, 29, 41, 43, 44, 46, 47, 50, 51, 55, 58, 59, 60, 80, 97, 98, 103, 108, 112, 136, 137, 240, 255, ], false))));
	tys.push(Rc::new(Type::new(378, "kd_getled_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(379, "kd_mode_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(380, "kevent_fflags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 1, 1, 1, 2, 2, 2, 4, 4, 8, 16, 32, 64, 128, 1048575, 536870912, 1073741824, 2147483648, 4026531840, ], false))));
	tys.push(Rc::new(Type::new(381, "kevent_filter", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![18446744073709551608, 18446744073709551609, 18446744073709551610, 18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614, 18446744073709551615, ], false))));
	tys.push(Rc::new(Type::new(382, "ktrace_op_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, ], false))));
	tys.push(Rc::new(Type::new(383, "madvise_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 6, ], false))));
}
fn types_6(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(384, "mknod_mode", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 4096, 8192, 24576, 32768, 49152, 61440, ], false))));
	tys.push(Rc::new(Type::new(385, "mmap_prot", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, ], false))));
	tys.push(Rc::new(Type::new(386, "msgbuf_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(387, "open_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 8, 16, 32, 64, 128, 128, 128, 256, 512, 1024, 2048, 32768, 65536, 131072, ], false))));
	tys.push(Rc::new(Type::new(388, "pollfd_events", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 4, 8, 16, 32, 64, 128, 256, ], false))));
	tys.push(Rc::new(Type::new(389, "rlimit_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 3, 4, 5, 6, 7, 8, ], false))));
	tys.push(Rc::new(Type::new(390, "rusage_who", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 18446744073709551615, ], false))));
	tys.push(Rc::new(Type::new(391, "seek_whence", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(392, "seek_whence", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(393, "sem_sem_id", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(394, "sem_sem_id", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, ], false))));
	tys.push(Rc::new(Type::new(395, "shutdown_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(396, "socket_domain", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 6, 16, 24, 32, ], false))));
	tys.push(Rc::new(Type::new(397, "socket_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, 4, 5, 16384, 32768, ], false))));
	tys.push(Rc::new(Type::new(398, "sockopt_opt_sock_int", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 4, 8, 16, 32, 128, 256, 512, 2048, 4097, 4098, 4099, 4100, 4103, 4104, ], false))));
	tys.push(Rc::new(Type::new(399, "sockopt_opt_sock_timeval", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4101, 4102, ], false))));
	tys.push(Rc::new(Type::new(400, "tcp_flags", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 4, 8, 16, 32, 64, 128, ], false))));
	tys.push(Rc::new(Type::new(401, "tcp_option_types", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 8, 19, ], false))));
	tys.push(Rc::new(Type::new(402, "unix_socket_family", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(403, "unix_socket_type", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 5, ], false))));
	tys.push(Rc::new(Type::new(404, "unlinkat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 8, ], false))));
	tys.push(Rc::new(Type::new(405, "utimensat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 2, ], false))));
	tys.push(Rc::new(Type::new(406, "vt_mode_flags", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(407, "vt_reldisp_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(408, "wsdisplay_font_encoding_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(409, "wsdisplay_font_order_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(410, "wsdisplay_mode_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, ], false))));
	tys.push(Rc::new(Type::new(411, "wsdisplay_svideo_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(412, "wsmouse_mode_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, ], false))));
	tys.push(Rc::new(Type::new(413, "wsmousecfg_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 36, 37, 38, 64, 65, 66, 67, 68, 69, 70, 71, 72, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 256, 257, ], false))));
	tys.push(Rc::new(Type::new(414, "wsmux_device_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 3, ], false))));
	tys.push(Rc::new(Type::new(415, "at_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2, 4, ], true))));
	tys.push(Rc::new(Type::new(416, "chflags_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 65536, 131072, 262144, ], true))));
	tys.push(Rc::new(Type::new(417, "chflagsat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2, ], true))));
	tys.push(Rc::new(Type::new(418, "ctl_fs_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(419, "ctl_machdep_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(420, "ctl_net_inet_ah_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(421, "ctl_net_inet_etherip_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(422, "ctl_net_inet_gre_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(423, "ctl_net_inet_ipcomp_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(424, "ctl_net_inet_ipip_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(425, "ctl_vfs_nfs_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(426, "dk_diskmap_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(427, "faccessat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(428, "fcntl_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(429, "flock_op", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, ], true))));
	tys.push(Rc::new(Type::new(430, "kd_setled_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, ], true))));
	tys.push(Rc::new(Type::new(431, "kevent_flags", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, ], true))));
	tys.push(Rc::new(Type::new(432, "ktrace_trace_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2, 4, 8, 16, 32, 256, 512, 1024, 2048, 4096, 1073741824, ], true))));
	tys.push(Rc::new(Type::new(433, "linkat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4, ], true))));
	tys.push(Rc::new(Type::new(434, "log_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, ], true))));
	tys.push(Rc::new(Type::new(435, "mif6c_flags", 1, 1, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(436, "mlockall_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(437, "mmap_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 16, 2048, 4096, 8192, 16384, ], true))));
	tys.push(Rc::new(Type::new(438, "mquery_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![16, ], true))));
	tys.push(Rc::new(Type::new(439, "msgget_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, ], true))));
	tys.push(Rc::new(Type::new(440, "msgrcv_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2048, 4096, ], true))));
	tys.push(Rc::new(Type::new(441, "msgsnd_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2048, ], true))));
	tys.push(Rc::new(Type::new(442, "msync_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, ], true))));
	tys.push(Rc::new(Type::new(443, "open_mode", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, ], true))));
	tys.push(Rc::new(Type::new(444, "open_mode", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, ], true))));
	tys.push(Rc::new(Type::new(445, "pipe_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4, 65536, ], true))));
	tys.push(Rc::new(Type::new(446, "recv_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 64, 2048, ], true))));
	tys.push(Rc::new(Type::new(447, "semget_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, ], true))));
}
fn types_7(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(448, "semop_flags", 2, 2, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![2048, 4096, ], true))));
	tys.push(Rc::new(Type::new(449, "send_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 1024, ], true))));
	tys.push(Rc::new(Type::new(450, "send_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 1024, ], true))));
	tys.push(Rc::new(Type::new(451, "shmat_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![4096, 8192, ], true))));
	tys.push(Rc::new(Type::new(452, "shmget_flags", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, ], true))));
	tys.push(Rc::new(Type::new(453, "sockopt_opt_ip_opts", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(454, "wait_options", 8, 8, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 8, ], true))));
	tys.push(Rc::new(Type::new(455, "wsdisplay_burner_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, 4, 8, ], true))));
	tys.push(Rc::new(Type::new(456, "wsdisplay_delscreendata_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, 2, ], true))));
	tys.push(Rc::new(Type::new(457, "wskbd_mode_flags", 4, 4, false, false, TypeKind::new_flags(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, vec![1, ], true))));
	tys.push(Rc::new(Type::new(458, "int16", 0, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 3, bitfield_unit: 2, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(459, "int16", 0, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 3, bitfield_len: 1, bitfield_unit: 2, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(460, "int16", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 12, bitfield_unit: 2, bitfield_unit_off: 0}, range: Some((0, 4)), align: 0})));
	tys.push(Rc::new(Type::new(461, "int16", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((4, 65535)), align: 0})));
	tys.push(Rc::new(Type::new(462, "int16", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(463, "int16be", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((100, 104)), align: 0})));
	tys.push(Rc::new(Type::new(464, "int16be", 2, 2, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(465, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: Some((100, 104)), align: 0})));
	tys.push(Rc::new(Type::new(466, "int32", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(467, "int32be", 4, 4, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(468, "int64", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(469, "int64be", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(470, "int8", 0, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 1, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(471, "int8", 0, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 2, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(472, "int8", 0, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(473, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 2, bitfield_len: 6, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(474, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 3, bitfield_len: 5, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(475, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(476, "int8", 1, 1, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(477, "intptr", 8, 8, false, false, TypeKind::Int{int_fmt:IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, range: None, align: 0})));
	tys.push(Rc::new(Type::new(478, "bytesize", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["ctrl", ]))));
	tys.push(Rc::new(Type::new(479, "bytesize", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 8, false, vec!["msg_control", ]))));
	tys.push(Rc::new(Type::new(480, "bytesize4", 0, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, 32, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(481, "bytesize4", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 4, bitfield_len: 4, bitfield_unit: 1, bitfield_unit_off: 0}, 32, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(482, "bytesize4", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 32, false, vec!["name", ]))));
	tys.push(Rc::new(Type::new(483, "bytesize8", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 64, false, vec!["data", ]))));
	tys.push(Rc::new(Type::new(484, "bytesize8", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 64, false, vec!["options", ]))));
	tys.push(Rc::new(Type::new(485, "bytesize8", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 64, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(486, "len", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["ar_spa", ]))));
	tys.push(Rc::new(Type::new(487, "len", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["data", ]))));
	tys.push(Rc::new(Type::new(488, "len", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["pad", ]))));
	tys.push(Rc::new(Type::new(489, "len", 1, 1, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(490, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["ipv4_packet", ]))));
	tys.push(Rc::new(Type::new(491, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(492, "len", 2, 2, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["payload", ]))));
	tys.push(Rc::new(Type::new(493, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["addr", ]))));
	tys.push(Rc::new(Type::new(494, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["bf_insns", ]))));
	tys.push(Rc::new(Type::new(495, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["bfl_list", ]))));
	tys.push(Rc::new(Type::new(496, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["encodings", ]))));
	tys.push(Rc::new(Type::new(497, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["map", ]))));
	tys.push(Rc::new(Type::new(498, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msg_name", ]))));
	tys.push(Rc::new(Type::new(499, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["optval", ]))));
	tys.push(Rc::new(Type::new(500, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["params", ]))));
	tys.push(Rc::new(Type::new(501, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["peer", ]))));
	tys.push(Rc::new(Type::new(502, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["pr_rom", ]))));
	tys.push(Rc::new(Type::new(503, "len", 4, 4, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["samples", ]))));
	tys.push(Rc::new(Type::new(504, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["addr", ]))));
	tys.push(Rc::new(Type::new(505, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["buf", ]))));
	tys.push(Rc::new(Type::new(506, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["ent", ]))));
	tys.push(Rc::new(Type::new(507, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["fds", ]))));
	tys.push(Rc::new(Type::new(508, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["inp", ]))));
	tys.push(Rc::new(Type::new(509, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["list", ]))));
	tys.push(Rc::new(Type::new(510, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msg", ]))));
	tys.push(Rc::new(Type::new(511, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msg_control", ]))));
}
fn types_8(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(512, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msg_iov", ]))));
	tys.push(Rc::new(Type::new(513, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["msgp", ]))));
	tys.push(Rc::new(Type::new(514, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["newp", ]))));
	tys.push(Rc::new(Type::new(515, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["oldp", ]))));
	tys.push(Rc::new(Type::new(516, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["ops", ]))));
	tys.push(Rc::new(Type::new(517, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["optval", ]))));
	tys.push(Rc::new(Type::new(518, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["packet", ]))));
	tys.push(Rc::new(Type::new(519, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["parent", ]))));
	tys.push(Rc::new(Type::new(520, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["unused", ]))));
	tys.push(Rc::new(Type::new(521, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["vcp_disks", ]))));
	tys.push(Rc::new(Type::new(522, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["vcp_memranges", ]))));
	tys.push(Rc::new(Type::new(523, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["vec", ]))));
	tys.push(Rc::new(Type::new(524, "len", 8, 8, false, false, TypeKind::new_len(IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, 0, false, vec!["vip_info", ]))));
	tys.push(Rc::new(Type::new(525, "proc", 1, 1, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 0, per_proc: 1})));
	tys.push(Rc::new(Type::new(526, "proc", 1, 1, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 48, per_proc: 1})));
	tys.push(Rc::new(Type::new(527, "proc", 2, 2, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::BigEndian, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 20000, per_proc: 4})));
	tys.push(Rc::new(Type::new(528, "proc", 4, 4, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 1792, per_proc: 2})));
	tys.push(Rc::new(Type::new(529, "proc", 4, 4, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 20000, per_proc: 4})));
	tys.push(Rc::new(Type::new(530, "proc", 8, 8, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 2039339027, per_proc: 4})));
	tys.push(Rc::new(Type::new(531, "proc", 8, 8, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 2039359027, per_proc: 4})));
	tys.push(Rc::new(Type::new(532, "proc", 8, 8, false, false, TypeKind::Proc{int_fmt: IntFmt{fmt:BinFmt::Native, bitfield_off: 0, bitfield_len: 0, bitfield_unit: 0, bitfield_unit_off: 0}, start: 2039379027, per_proc: 4})));
	tys.push(Rc::new(Type::new(533, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(906)})));
	tys.push(Rc::new(Type::new(534, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(907)})));
	tys.push(Rc::new(Type::new(535, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(908)})));
	tys.push(Rc::new(Type::new(536, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(26)})));
	tys.push(Rc::new(Type::new(537, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(909)})));
	tys.push(Rc::new(Type::new(538, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(745)})));
	tys.push(Rc::new(Type::new(539, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(884)})));
	tys.push(Rc::new(Type::new(540, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(12)})));
	tys.push(Rc::new(Type::new(541, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(906)})));
	tys.push(Rc::new(Type::new(542, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(466)})));
	tys.push(Rc::new(Type::new(543, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(13)})));
	tys.push(Rc::new(Type::new(544, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(760)})));
	tys.push(Rc::new(Type::new(545, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(837)})));
	tys.push(Rc::new(Type::new(546, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(907)})));
	tys.push(Rc::new(Type::new(547, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(908)})));
	tys.push(Rc::new(Type::new(548, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(793)})));
	tys.push(Rc::new(Type::new(549, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(378)})));
	tys.push(Rc::new(Type::new(550, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(430)})));
	tys.push(Rc::new(Type::new(551, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(379)})));
	tys.push(Rc::new(Type::new(552, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(893)})));
	tys.push(Rc::new(Type::new(553, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(58)})));
	tys.push(Rc::new(Type::new(554, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(931)})));
	tys.push(Rc::new(Type::new(555, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(928)})));
	tys.push(Rc::new(Type::new(556, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(955)})));
	tys.push(Rc::new(Type::new(557, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(932)})));
	tys.push(Rc::new(Type::new(558, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(943)})));
	tys.push(Rc::new(Type::new(559, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(947)})));
	tys.push(Rc::new(Type::new(560, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(951)})));
	tys.push(Rc::new(Type::new(561, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(949)})));
	tys.push(Rc::new(Type::new(562, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(950)})));
	tys.push(Rc::new(Type::new(563, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(952)})));
	tys.push(Rc::new(Type::new(564, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(953)})));
	tys.push(Rc::new(Type::new(565, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(407)})));
	tys.push(Rc::new(Type::new(566, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(958)})));
	tys.push(Rc::new(Type::new(567, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(962)})));
	tys.push(Rc::new(Type::new(568, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(960)})));
	tys.push(Rc::new(Type::new(569, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(959)})));
	tys.push(Rc::new(Type::new(570, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(961)})));
	tys.push(Rc::new(Type::new(571, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(963)})));
	tys.push(Rc::new(Type::new(572, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(410)})));
	tys.push(Rc::new(Type::new(573, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(411)})));
	tys.push(Rc::new(Type::new(574, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(956)})));
	tys.push(Rc::new(Type::new(575, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(965)})));
}
fn types_9(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(576, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(964)})));
	tys.push(Rc::new(Type::new(577, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(967)})));
	tys.push(Rc::new(Type::new(578, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(10)})));
	tys.push(Rc::new(Type::new(579, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(968)})));
	tys.push(Rc::new(Type::new(580, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(457)})));
	tys.push(Rc::new(Type::new(581, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(929)})));
	tys.push(Rc::new(Type::new(582, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(970)})));
	tys.push(Rc::new(Type::new(583, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(15)})));
	tys.push(Rc::new(Type::new(584, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(973)})));
	tys.push(Rc::new(Type::new(585, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(971)})));
	tys.push(Rc::new(Type::new(586, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(974)})));
	tys.push(Rc::new(Type::new(587, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(975)})));
	tys.push(Rc::new(Type::new(588, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(21)})));
	tys.push(Rc::new(Type::new(589, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(64)})));
	tys.push(Rc::new(Type::new(590, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(892)})));
	tys.push(Rc::new(Type::new(591, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(22)})));
	tys.push(Rc::new(Type::new(592, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(890)})));
	tys.push(Rc::new(Type::new(593, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(77)})));
	tys.push(Rc::new(Type::new(594, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(70)})));
	tys.push(Rc::new(Type::new(595, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(65)})));
	tys.push(Rc::new(Type::new(596, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(66)})));
	tys.push(Rc::new(Type::new(597, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(78)})));
	tys.push(Rc::new(Type::new(598, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(76)})));
	tys.push(Rc::new(Type::new(599, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(71)})));
	tys.push(Rc::new(Type::new(600, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(79)})));
	tys.push(Rc::new(Type::new(601, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(80)})));
	tys.push(Rc::new(Type::new(602, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(72)})));
	tys.push(Rc::new(Type::new(603, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(69)})));
	tys.push(Rc::new(Type::new(604, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(74)})));
	tys.push(Rc::new(Type::new(605, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(68)})));
	tys.push(Rc::new(Type::new(606, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(73)})));
	tys.push(Rc::new(Type::new(607, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(67)})));
	tys.push(Rc::new(Type::new(608, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(17)})));
	tys.push(Rc::new(Type::new(609, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(23)})));
	tys.push(Rc::new(Type::new(610, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(24)})));
	tys.push(Rc::new(Type::new(611, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(902)})));
	tys.push(Rc::new(Type::new(612, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(9)})));
	tys.push(Rc::new(Type::new(613, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(11)})));
	tys.push(Rc::new(Type::new(614, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(25)})));
	tys.push(Rc::new(Type::new(615, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(903)})));
	tys.push(Rc::new(Type::new(616, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(891)})));
	tys.push(Rc::new(Type::new(617, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(802)})));
	tys.push(Rc::new(Type::new(618, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(888)})));
	tys.push(Rc::new(Type::new(619, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(889)})));
	tys.push(Rc::new(Type::new(620, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(904)})));
	tys.push(Rc::new(Type::new(621, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(767)})));
	tys.push(Rc::new(Type::new(622, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(768)})));
	tys.push(Rc::new(Type::new(623, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(769)})));
	tys.push(Rc::new(Type::new(624, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(770)})));
	tys.push(Rc::new(Type::new(625, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(771)})));
	tys.push(Rc::new(Type::new(626, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(772)})));
	tys.push(Rc::new(Type::new(627, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(773)})));
	tys.push(Rc::new(Type::new(628, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(774)})));
	tys.push(Rc::new(Type::new(629, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(775)})));
	tys.push(Rc::new(Type::new(630, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(776)})));
	tys.push(Rc::new(Type::new(631, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(777)})));
	tys.push(Rc::new(Type::new(632, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(778)})));
	tys.push(Rc::new(Type::new(633, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(779)})));
	tys.push(Rc::new(Type::new(634, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(780)})));
	tys.push(Rc::new(Type::new(635, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(53)})));
	tys.push(Rc::new(Type::new(636, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(781)})));
	tys.push(Rc::new(Type::new(637, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(782)})));
	tys.push(Rc::new(Type::new(638, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(783)})));
	tys.push(Rc::new(Type::new(639, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(784)})));
}
fn types_10(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(640, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(785)})));
	tys.push(Rc::new(Type::new(641, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(786)})));
	tys.push(Rc::new(Type::new(642, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(787)})));
	tys.push(Rc::new(Type::new(643, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(788)})));
	tys.push(Rc::new(Type::new(644, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(789)})));
	tys.push(Rc::new(Type::new(645, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(790)})));
	tys.push(Rc::new(Type::new(646, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(791)})));
	tys.push(Rc::new(Type::new(647, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(14)})));
	tys.push(Rc::new(Type::new(648, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(792)})));
	tys.push(Rc::new(Type::new(649, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(27)})));
	tys.push(Rc::new(Type::new(650, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(753)})));
	tys.push(Rc::new(Type::new(651, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(930)})));
	tys.push(Rc::new(Type::new(652, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(881)})));
	tys.push(Rc::new(Type::new(653, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(909)})));
	tys.push(Rc::new(Type::new(654, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(899)})));
	tys.push(Rc::new(Type::new(655, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(933)})));
	tys.push(Rc::new(Type::new(656, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(799)})));
	tys.push(Rc::new(Type::new(657, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(82)})));
	tys.push(Rc::new(Type::new(658, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(75)})));
	tys.push(Rc::new(Type::new(659, "ptr64", 8, 8, false, false, TypeKind::Ptr{dir: Dir::In, elem: TypeRef::Id(27)})));
	tys.push(Rc::new(Type::new(660, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(906)})));
	tys.push(Rc::new(Type::new(661, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(466)})));
	tys.push(Rc::new(Type::new(662, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(907)})));
	tys.push(Rc::new(Type::new(663, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(908)})));
	tys.push(Rc::new(Type::new(664, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(929)})));
	tys.push(Rc::new(Type::new(665, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(881)})));
	tys.push(Rc::new(Type::new(666, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(909)})));
	tys.push(Rc::new(Type::new(667, "ptr", 8, 8, true, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(900)})));
	tys.push(Rc::new(Type::new(668, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(884)})));
	tys.push(Rc::new(Type::new(669, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(12)})));
	tys.push(Rc::new(Type::new(670, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(759)})));
	tys.push(Rc::new(Type::new(671, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(906)})));
	tys.push(Rc::new(Type::new(672, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(836)})));
	tys.push(Rc::new(Type::new(673, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(761)})));
	tys.push(Rc::new(Type::new(674, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(466)})));
	tys.push(Rc::new(Type::new(675, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(907)})));
	tys.push(Rc::new(Type::new(676, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(762)})));
	tys.push(Rc::new(Type::new(677, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(908)})));
	tys.push(Rc::new(Type::new(678, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(501)})));
	tys.push(Rc::new(Type::new(679, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(894)})));
	tys.push(Rc::new(Type::new(680, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(893)})));
	tys.push(Rc::new(Type::new(681, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(928)})));
	tys.push(Rc::new(Type::new(682, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(955)})));
	tys.push(Rc::new(Type::new(683, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(946)})));
	tys.push(Rc::new(Type::new(684, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(951)})));
	tys.push(Rc::new(Type::new(685, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(944)})));
	tys.push(Rc::new(Type::new(686, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(953)})));
	tys.push(Rc::new(Type::new(687, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(954)})));
	tys.push(Rc::new(Type::new(688, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(962)})));
	tys.push(Rc::new(Type::new(689, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(959)})));
	tys.push(Rc::new(Type::new(690, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(965)})));
	tys.push(Rc::new(Type::new(691, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(964)})));
	tys.push(Rc::new(Type::new(692, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(967)})));
	tys.push(Rc::new(Type::new(693, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(966)})));
	tys.push(Rc::new(Type::new(694, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(968)})));
	tys.push(Rc::new(Type::new(695, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(929)})));
	tys.push(Rc::new(Type::new(696, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(970)})));
	tys.push(Rc::new(Type::new(697, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(973)})));
	tys.push(Rc::new(Type::new(698, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(912)})));
	tys.push(Rc::new(Type::new(699, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(890)})));
	tys.push(Rc::new(Type::new(700, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(896)})));
	tys.push(Rc::new(Type::new(701, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(898)})));
	tys.push(Rc::new(Type::new(702, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(801)})));
	tys.push(Rc::new(Type::new(703, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(905)})));
}
fn types_11(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(704, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(937)})));
	tys.push(Rc::new(Type::new(705, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(515)})));
	tys.push(Rc::new(Type::new(706, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(53)})));
	tys.push(Rc::new(Type::new(707, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(53)})));
	tys.push(Rc::new(Type::new(708, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(14)})));
	tys.push(Rc::new(Type::new(709, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(754)})));
	tys.push(Rc::new(Type::new(710, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(930)})));
	tys.push(Rc::new(Type::new(711, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(930)})));
	tys.push(Rc::new(Type::new(712, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(881)})));
	tys.push(Rc::new(Type::new(713, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(909)})));
	tys.push(Rc::new(Type::new(714, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(899)})));
	tys.push(Rc::new(Type::new(715, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(900)})));
	tys.push(Rc::new(Type::new(716, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(493)})));
	tys.push(Rc::new(Type::new(717, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::InOut, elem: TypeRef::Id(499)})));
	tys.push(Rc::new(Type::new(718, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(933)})));
	tys.push(Rc::new(Type::new(719, "ptr", 8, 8, false, false, TypeKind::Ptr{dir: Dir::Out, elem: TypeRef::Id(923)})));
	tys.push(Rc::new(Type::new(720, "ANYRES16", 2, 2, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES16", vec!["ANYRES16", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(721, "ANYRES32", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES32", vec!["ANYRES32", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(722, "ANYRES64", 18, 1, false, false, TypeKind::Res{fmt: BinFmt::StrHex, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(723, "ANYRES64", 20, 1, false, false, TypeKind::Res{fmt: BinFmt::StrDec, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(724, "ANYRES64", 23, 1, false, false, TypeKind::Res{fmt: BinFmt::StrOct, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(725, "ANYRES64", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ANYRES64", vec!["ANYRES64", ], vec![18446744073709551615, 0, ])})));
	tys.push(Rc::new(Type::new(726, "fd", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd", vec!["fd", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(727, "fd_bpf", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_bpf", vec!["fd", "fd_bpf", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(728, "fd_dir", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_dir", vec!["fd", "fd_dir", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(729, "fd_diskmap", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_diskmap", vec!["fd", "fd_diskmap", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(730, "fd_klog", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_klog", vec!["fd", "fd_klog", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(731, "fd_kqueue", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_kqueue", vec!["fd", "fd_kqueue", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(732, "fd_pci", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_pci", vec!["fd", "fd_pci", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(733, "fd_speaker", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_speaker", vec!["fd", "fd_speaker", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(734, "fd_tty", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_tty", vec!["fd", "fd_tty", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(735, "fd_vmm", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_vmm", vec!["fd", "fd_vmm", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(736, "fd_wsdisplay", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_wsdisplay", vec!["fd", "fd_wsdisplay", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(737, "fd_wskbd", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_wskbd", vec!["fd", "fd_wskbd", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(738, "fd_wsmouse", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("fd_wsmouse", vec!["fd", "fd_wsmouse", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(739, "gid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("gid", vec!["gid", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(740, "ipc_msq", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ipc_msq", vec!["ipc", "ipc_msq", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(741, "ipc_sem", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ipc_sem", vec!["ipc", "ipc_sem", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(742, "ipc_shm", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("ipc_shm", vec!["ipc", "ipc_shm", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(743, "pid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("pid", vec!["pid", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(744, "shmaddr", 8, 8, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("shmaddr", vec!["shmaddr", ], vec![0, ])})));
	tys.push(Rc::new(Type::new(745, "sock", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock", vec!["fd", "sock", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(746, "sock_in", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_in", vec!["fd", "sock", "sock_in", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(747, "sock_in6", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_in6", vec!["fd", "sock", "sock_in6", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(748, "sock_unix", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("sock_unix", vec!["fd", "sock", "sock_unix", ], vec![18446744073709551615, 18446744073709551516, ])})));
	tys.push(Rc::new(Type::new(749, "tcp_seq_num", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("tcp_seq_num", vec!["tcp_seq_num", ], vec![1094861636, ])})));
	tys.push(Rc::new(Type::new(750, "uid", 4, 4, false, false, TypeKind::Res{fmt: BinFmt::Native, desc: ResDesc::new("uid", vec!["uid", ], vec![0, 18446744073709551615, ])})));
	tys.push(Rc::new(Type::new(751, "vma", 8, 8, false, false, TypeKind::Vma{begin: 0, end: 0})));
	tys.push(Rc::new(Type::new(752, "vma64", 8, 8, false, false, TypeKind::Vma{begin: 0, end: 0})));
	tys.push(Rc::new(Type::new(753, "ANYPTRS", 8, 8, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYPTR".to_string()), ty: TypeRef::Id(649), dir: None }, Field{ name: String::into_boxed_str("ANYPTR64".to_string()), ty: TypeRef::Id(659), dir: None }, ]))));
	tys.push(Rc::new(Type::new(754, "ANYUNION", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ANYBLOB".to_string()), ty: TypeRef::Id(53), dir: None }, Field{ name: String::into_boxed_str("ANYRES16".to_string()), ty: TypeRef::Id(720), dir: None }, Field{ name: String::into_boxed_str("ANYRES32".to_string()), ty: TypeRef::Id(721), dir: None }, Field{ name: String::into_boxed_str("ANYRES64".to_string()), ty: TypeRef::Id(725), dir: None }, Field{ name: String::into_boxed_str("ANYRESDEC".to_string()), ty: TypeRef::Id(723), dir: None }, Field{ name: String::into_boxed_str("ANYRESHEX".to_string()), ty: TypeRef::Id(722), dir: None }, Field{ name: String::into_boxed_str("ANYRESOCT".to_string()), ty: TypeRef::Id(724), dir: None }, ]))));
	tys.push(Rc::new(Type::new(755, "arp_ether_ipv4_packet", 28, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ar_hrd".to_string()), ty: TypeRef::Id(122), dir: None }, Field{ name: String::into_boxed_str("ar_pro".to_string()), ty: TypeRef::Id(123), dir: None }, Field{ name: String::into_boxed_str("ar_hln".to_string()), ty: TypeRef::Id(118), dir: None }, Field{ name: String::into_boxed_str("ar_pln".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("ar_op".to_string()), ty: TypeRef::Id(334), dir: None }, Field{ name: String::into_boxed_str("ar_sha".to_string()), ty: TypeRef::Id(885), dir: None }, Field{ name: String::into_boxed_str("ar_spa".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("ar_tha".to_string()), ty: TypeRef::Id(885), dir: None }, Field{ name: String::into_boxed_str("ar_tpa".to_string()), ty: TypeRef::Id(841), dir: None }, ]))));
	tys.push(Rc::new(Type::new(756, "arp_generic_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ar_hrd".to_string()), ty: TypeRef::Id(333), dir: None }, Field{ name: String::into_boxed_str("ar_pro".to_string()), ty: TypeRef::Id(355), dir: None }, Field{ name: String::into_boxed_str("ar_hln".to_string()), ty: TypeRef::Id(118), dir: None }, Field{ name: String::into_boxed_str("ar_pln".to_string()), ty: TypeRef::Id(486), dir: None }, Field{ name: String::into_boxed_str("ar_op".to_string()), ty: TypeRef::Id(334), dir: None }, Field{ name: String::into_boxed_str("ar_sha".to_string()), ty: TypeRef::Id(885), dir: None }, Field{ name: String::into_boxed_str("ar_spa".to_string()), ty: TypeRef::Id(51), dir: None }, Field{ name: String::into_boxed_str("ar_tha".to_string()), ty: TypeRef::Id(885), dir: None }, Field{ name: String::into_boxed_str("ar_tpa".to_string()), ty: TypeRef::Id(54), dir: None }, ]))));
	tys.push(Rc::new(Type::new(757, "arp_packet", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(756), dir: None }, Field{ name: String::into_boxed_str("ether_ipv4".to_string()), ty: TypeRef::Id(755), dir: None }, ]))));
	tys.push(Rc::new(Type::new(758, "bf_insns", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("jt".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("jf".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("k".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(759, "bpf_dltlist", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("bfl_len".to_string()), ty: TypeRef::Id(495), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("bfl_list".to_string()), ty: TypeRef::Id(540), dir: None }, ]))));
	tys.push(Rc::new(Type::new(760, "bpf_program", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("bf_len".to_string()), ty: TypeRef::Id(494), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("bf_insns".to_string()), ty: TypeRef::Id(543), dir: None }, ]))));
	tys.push(Rc::new(Type::new(761, "bpf_stat", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("bs_recv".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("bs_drop".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(762, "bpf_version", 4, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("bv_major".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("bv_minor".to_string()), ty: TypeRef::Id(462), dir: None }, ]))));
	tys.push(Rc::new(Type::new(763, "cmsghdr", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("cmsg_len".to_string()), ty: TypeRef::Id(519), dir: None }, Field{ name: String::into_boxed_str("cmsg_level".to_string()), ty: TypeRef::Id(336), dir: None }, Field{ name: String::into_boxed_str("cmsg_type".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(764, "cmsghdr_un", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("rights".to_string()), ty: TypeRef::Id(766), dir: None }, Field{ name: String::into_boxed_str("cred".to_string()), ty: TypeRef::Id(765), dir: None }, ]))));
	tys.push(Rc::new(Type::new(765, "cmsghdr_un_cred", 32, 8, false, false, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(519), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(160), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(165), dir: None }, Field{ name: String::into_boxed_str("pid".to_string()), ty: TypeRef::Id(743), dir: None }, Field{ name: String::into_boxed_str("uid".to_string()), ty: TypeRef::Id(750), dir: None }, Field{ name: String::into_boxed_str("gid".to_string()), ty: TypeRef::Id(739), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, ]))));
	tys.push(Rc::new(Type::new(766, "cmsghdr_un_rights", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(519), dir: None }, Field{ name: String::into_boxed_str("level".to_string()), ty: TypeRef::Id(160), dir: None }, Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(145), dir: None }, Field{ name: String::into_boxed_str("fds".to_string()), ty: TypeRef::Id(16), dir: None }, ]))));
	tys.push(Rc::new(Type::new(767, "ctl_ddb", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(164), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(337), dir: None }, ]))));
}
fn types_12(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(768, "ctl_fs", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(151), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(418), dir: None }, ]))));
	tys.push(Rc::new(Type::new(769, "ctl_hw", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(161), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(338), dir: None }, ]))));
	tys.push(Rc::new(Type::new(770, "ctl_kern", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(145), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(339), dir: None }, ]))));
	tys.push(Rc::new(Type::new(771, "ctl_machdep", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(162), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(419), dir: None }, ]))));
	tys.push(Rc::new(Type::new(772, "ctl_net_inet6_icmp6", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(146), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(158), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(340), dir: None }, ]))));
	tys.push(Rc::new(Type::new(773, "ctl_net_inet6_ip6", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(146), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(153), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(341), dir: None }, ]))));
	tys.push(Rc::new(Type::new(774, "ctl_net_inet_ah", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(157), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(420), dir: None }, ]))));
	tys.push(Rc::new(Type::new(775, "ctl_net_inet_carp", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(141), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(342), dir: None }, ]))));
	tys.push(Rc::new(Type::new(776, "ctl_net_inet_divert", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(147), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(343), dir: None }, ]))));
	tys.push(Rc::new(Type::new(777, "ctl_net_inet_esp", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(156), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(344), dir: None }, ]))));
	tys.push(Rc::new(Type::new(778, "ctl_net_inet_etherip", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(163), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(421), dir: None }, ]))));
	tys.push(Rc::new(Type::new(779, "ctl_net_inet_gre", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(154), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(422), dir: None }, ]))));
	tys.push(Rc::new(Type::new(780, "ctl_net_inet_icmp", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(145), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(345), dir: None }, ]))));
	tys.push(Rc::new(Type::new(781, "ctl_net_inet_ip", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(165), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(346), dir: None }, ]))));
	tys.push(Rc::new(Type::new(782, "ctl_net_inet_ipcomp", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(139), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(423), dir: None }, ]))));
	tys.push(Rc::new(Type::new(783, "ctl_net_inet_ipip", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(424), dir: None }, ]))));
	tys.push(Rc::new(Type::new(784, "ctl_net_inet_tcp", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(161), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(347), dir: None }, ]))));
	tys.push(Rc::new(Type::new(785, "ctl_net_inet_udp", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(143), dir: None }, Field{ name: String::into_boxed_str("n4".to_string()), ty: TypeRef::Id(348), dir: None }, ]))));
	tys.push(Rc::new(Type::new(786, "ctl_net_mpls", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(149), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(349), dir: None }, ]))));
	tys.push(Rc::new(Type::new(787, "ctl_net_pipex", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(155), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(150), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(350), dir: None }, ]))));
	tys.push(Rc::new(Type::new(788, "ctl_vfs_ffs", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(140), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(145), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(351), dir: None }, ]))));
	tys.push(Rc::new(Type::new(789, "ctl_vfs_fuse", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(140), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(144), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(352), dir: None }, ]))));
	tys.push(Rc::new(Type::new(790, "ctl_vfs_nfs", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(140), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(425), dir: None }, ]))));
	tys.push(Rc::new(Type::new(791, "ctl_vm", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(353), dir: None }, ]))));
	tys.push(Rc::new(Type::new(792, "ctl_vm_swapencrypt", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("n1".to_string()), ty: TypeRef::Id(148), dir: None }, Field{ name: String::into_boxed_str("n2".to_string()), ty: TypeRef::Id(159), dir: None }, Field{ name: String::into_boxed_str("n3".to_string()), ty: TypeRef::Id(354), dir: None }, ]))));
	tys.push(Rc::new(Type::new(793, "dk_diskmap", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("device".to_string()), ty: TypeRef::Id(553), dir: None }, Field{ name: String::into_boxed_str("fd".to_string()), ty: TypeRef::Id(726), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(426), dir: None }, ]))));
	tys.push(Rc::new(Type::new(794, "eth2_packet", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(795), dir: None }, Field{ name: String::into_boxed_str("arp".to_string()), ty: TypeRef::Id(796), dir: None }, Field{ name: String::into_boxed_str("ipv4".to_string()), ty: TypeRef::Id(797), dir: None }, Field{ name: String::into_boxed_str("ipv6".to_string()), ty: TypeRef::Id(798), dir: None }, ]))));
	tys.push(Rc::new(Type::new(795, "eth2_packet_generic", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("etype".to_string()), ty: TypeRef::Id(355), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(796, "eth2_packet_t[ETHERTYPE_ARP, arp_packet]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("etype".to_string()), ty: TypeRef::Id(124), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(757), dir: None }, ]))));
	tys.push(Rc::new(Type::new(797, "eth2_packet_t[ETHERTYPE_IP, ipv4_packet]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("etype".to_string()), ty: TypeRef::Id(123), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(856), dir: None }, ]))));
	tys.push(Rc::new(Type::new(798, "eth2_packet_t[ETHERTYPE_IPV6, ipv6_packet_t]", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("etype".to_string()), ty: TypeRef::Id(126), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(871), dir: None }, ]))));
	tys.push(Rc::new(Type::new(799, "eth_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dst_mac".to_string()), ty: TypeRef::Id(885), dir: None }, Field{ name: String::into_boxed_str("src_mac".to_string()), ty: TypeRef::Id(885), dir: None }, Field{ name: String::into_boxed_str("vtag".to_string()), ty: TypeRef::Id(2), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(800), dir: None }, ]))));
	tys.push(Rc::new(Type::new(800, "eth_payload", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("eth2".to_string()), ty: TypeRef::Id(794), dir: None }, ]))));
	tys.push(Rc::new(Type::new(801, "fd_set", 64, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mask0".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mask1".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mask2".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mask3".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mask4".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mask5".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mask6".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mask7".to_string()), ty: TypeRef::Id(468), dir: None }, ]))));
	tys.push(Rc::new(Type::new(802, "flock", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(360), dir: None }, Field{ name: String::into_boxed_str("whence".to_string()), ty: TypeRef::Id(391), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("start".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("pid".to_string()), ty: TypeRef::Id(743), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, ]))));
	tys.push(Rc::new(Type::new(803, "icmp_dest_unreach_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(114), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(362), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("mtu".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(809), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(52), dir: None }, ]))));
	tys.push(Rc::new(Type::new(804, "icmp_echo_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(120), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(805, "icmp_echo_reply_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(463), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(806, "icmp_generic_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(366), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(807, "icmp_info_reply_packet", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(101), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(464), dir: None }, ]))));
	tys.push(Rc::new(Type::new(808, "icmp_info_request_packet", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(100), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(464), dir: None }, ]))));
	tys.push(Rc::new(Type::new(809, "icmp_ipv4_header", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ihl".to_string()), ty: TypeRef::Id(480), dir: None }, Field{ name: String::into_boxed_str("version".to_string()), ty: TypeRef::Id(85), dir: None }, Field{ name: String::into_boxed_str("ecn".to_string()), ty: TypeRef::Id(471), dir: None }, Field{ name: String::into_boxed_str("dscp".to_string()), ty: TypeRef::Id(473), dir: None }, Field{ name: String::into_boxed_str("total_len".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(463), dir: None }, Field{ name: String::into_boxed_str("frag_off".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("ttl".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("protocol".to_string()), ty: TypeRef::Id(376), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("src_ip".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("dst_ip".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(855), dir: None }, ]))));
	tys.push(Rc::new(Type::new(810, "icmp_mask_reply_packet", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(106), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(467), dir: None }, ]))));
	tys.push(Rc::new(Type::new(811, "icmp_mask_request_packet", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(104), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("mask".to_string()), ty: TypeRef::Id(467), dir: None }, ]))));
	tys.push(Rc::new(Type::new(812, "icmp_packet", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(806), dir: None }, Field{ name: String::into_boxed_str("echo_reply".to_string()), ty: TypeRef::Id(805), dir: None }, Field{ name: String::into_boxed_str("dest_unreach".to_string()), ty: TypeRef::Id(803), dir: None }, Field{ name: String::into_boxed_str("source_quench".to_string()), ty: TypeRef::Id(815), dir: None }, Field{ name: String::into_boxed_str("redirect".to_string()), ty: TypeRef::Id(814), dir: None }, Field{ name: String::into_boxed_str("echo".to_string()), ty: TypeRef::Id(804), dir: None }, Field{ name: String::into_boxed_str("time_exceeded".to_string()), ty: TypeRef::Id(816), dir: None }, Field{ name: String::into_boxed_str("parameter_prob".to_string()), ty: TypeRef::Id(813), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(817), dir: None }, Field{ name: String::into_boxed_str("timestamp_reply".to_string()), ty: TypeRef::Id(818), dir: None }, Field{ name: String::into_boxed_str("info_request".to_string()), ty: TypeRef::Id(808), dir: None }, Field{ name: String::into_boxed_str("info_reply".to_string()), ty: TypeRef::Id(807), dir: None }, Field{ name: String::into_boxed_str("mask_request".to_string()), ty: TypeRef::Id(811), dir: None }, Field{ name: String::into_boxed_str("mask_reply".to_string()), ty: TypeRef::Id(810), dir: None }, ]))));
	tys.push(Rc::new(Type::new(813, "icmp_parameter_prob_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(90), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(363), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(130), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(809), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(52), dir: None }, ]))));
	tys.push(Rc::new(Type::new(814, "icmp_redirect_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(116), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(364), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("ip".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(809), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(52), dir: None }, ]))));
	tys.push(Rc::new(Type::new(815, "icmp_source_quench_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(165), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(809), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(52), dir: None }, ]))));
	tys.push(Rc::new(Type::new(816, "icmp_time_exceeded_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(87), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(365), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("unused1".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("unused2".to_string()), ty: TypeRef::Id(130), dir: None }, Field{ name: String::into_boxed_str("iph".to_string()), ty: TypeRef::Id(809), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(52), dir: None }, ]))));
	tys.push(Rc::new(Type::new(817, "icmp_timestamp_packet", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(97), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("orig_ts".to_string()), ty: TypeRef::Id(467), dir: None }, Field{ name: String::into_boxed_str("recv_ts".to_string()), ty: TypeRef::Id(467), dir: None }, Field{ name: String::into_boxed_str("trans_ts".to_string()), ty: TypeRef::Id(467), dir: None }, ]))));
	tys.push(Rc::new(Type::new(818, "icmp_timestamp_reply_packet", 20, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(99), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("orig_ts".to_string()), ty: TypeRef::Id(467), dir: None }, Field{ name: String::into_boxed_str("recv_ts".to_string()), ty: TypeRef::Id(467), dir: None }, Field{ name: String::into_boxed_str("trans_ts".to_string()), ty: TypeRef::Id(467), dir: None }, ]))));
	tys.push(Rc::new(Type::new(819, "icmpv6_dest_unreach_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(109), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(367), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(39), dir: None }, Field{ name: String::into_boxed_str("packet".to_string()), ty: TypeRef::Id(822), dir: None }, ]))));
	tys.push(Rc::new(Type::new(820, "icmpv6_echo_reply_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(89), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(821, "icmpv6_echo_request_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(88), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(822, "icmpv6_ipv6_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("priority".to_string()), ty: TypeRef::Id(472), dir: None }, Field{ name: String::into_boxed_str("version".to_string()), ty: TypeRef::Id(86), dir: None }, Field{ name: String::into_boxed_str("flow_label".to_string()), ty: TypeRef::Id(56), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(377), dir: None }, Field{ name: String::into_boxed_str("hop_limit".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("src_ip".to_string()), ty: TypeRef::Id(858), dir: None }, Field{ name: String::into_boxed_str("dst_ip".to_string()), ty: TypeRef::Id(858), dir: None }, Field{ name: String::into_boxed_str("ext_headers".to_string()), ty: TypeRef::Id(28), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(823, "icmpv6_mld_packet", 24, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(368), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("mrd".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(858), dir: None }, ]))));
	tys.push(Rc::new(Type::new(824, "icmpv6_ndisc_neigh_advert_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(95), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("neighbor_flags".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(39), dir: None }, Field{ name: String::into_boxed_str("target_addr".to_string()), ty: TypeRef::Id(858), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(8), dir: None }, ]))));
	tys.push(Rc::new(Type::new(825, "icmpv6_ndisc_neigh_solicit_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(94), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("target_addr".to_string()), ty: TypeRef::Id(858), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(8), dir: None }, ]))));
	tys.push(Rc::new(Type::new(826, "icmpv6_ndisc_option", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("option_type".to_string()), ty: TypeRef::Id(369), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(485), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(827, "icmpv6_ndisc_redir_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(96), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(42), dir: None }, Field{ name: String::into_boxed_str("target_addr".to_string()), ty: TypeRef::Id(858), dir: None }, Field{ name: String::into_boxed_str("dst_addr".to_string()), ty: TypeRef::Id(858), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(8), dir: None }, ]))));
	tys.push(Rc::new(Type::new(828, "icmpv6_ndisc_router_advert_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(93), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("cur_hop_limit".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("router_flags".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("router_lifetime".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("reachable_time".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("retrans_time".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(8), dir: None }, ]))));
	tys.push(Rc::new(Type::new(829, "icmpv6_ndisc_router_solicit_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(92), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(42), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(8), dir: None }, ]))));
	tys.push(Rc::new(Type::new(830, "icmpv6_ni_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(370), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("qtype".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("nonce".to_string()), ty: TypeRef::Id(469), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(831, "icmpv6_packet", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("dest_unreach".to_string()), ty: TypeRef::Id(819), dir: None }, Field{ name: String::into_boxed_str("pkt_toobig".to_string()), ty: TypeRef::Id(833), dir: None }, Field{ name: String::into_boxed_str("time_exceed".to_string()), ty: TypeRef::Id(834), dir: None }, Field{ name: String::into_boxed_str("param_prob".to_string()), ty: TypeRef::Id(832), dir: None }, Field{ name: String::into_boxed_str("echo_request".to_string()), ty: TypeRef::Id(821), dir: None }, Field{ name: String::into_boxed_str("echo_reply".to_string()), ty: TypeRef::Id(820), dir: None }, Field{ name: String::into_boxed_str("mld".to_string()), ty: TypeRef::Id(823), dir: None }, Field{ name: String::into_boxed_str("ni".to_string()), ty: TypeRef::Id(830), dir: None }, Field{ name: String::into_boxed_str("ndisc_rs".to_string()), ty: TypeRef::Id(829), dir: None }, Field{ name: String::into_boxed_str("ndisc_ra".to_string()), ty: TypeRef::Id(828), dir: None }, Field{ name: String::into_boxed_str("ndisc_na".to_string()), ty: TypeRef::Id(824), dir: None }, Field{ name: String::into_boxed_str("ndisc_ns".to_string()), ty: TypeRef::Id(825), dir: None }, Field{ name: String::into_boxed_str("ndisc_redir".to_string()), ty: TypeRef::Id(827), dir: None }, ]))));
}
fn types_13(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(832, "icmpv6_param_prob_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(371), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(467), dir: None }, Field{ name: String::into_boxed_str("packet".to_string()), ty: TypeRef::Id(822), dir: None }, ]))));
	tys.push(Rc::new(Type::new(833, "icmpv6_pkt_toobig_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(113), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("mtu".to_string()), ty: TypeRef::Id(467), dir: None }, Field{ name: String::into_boxed_str("packet".to_string()), ty: TypeRef::Id(822), dir: None }, ]))));
	tys.push(Rc::new(Type::new(834, "icmpv6_time_exceed_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(114), dir: None }, Field{ name: String::into_boxed_str("code".to_string()), ty: TypeRef::Id(372), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(331), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("unused".to_string()), ty: TypeRef::Id(39), dir: None }, Field{ name: String::into_boxed_str("packet".to_string()), ty: TypeRef::Id(822), dir: None }, ]))));
	tys.push(Rc::new(Type::new(835, "ifr_ifru", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("ifru_addr".to_string()), ty: TypeRef::Id(908), dir: None }, Field{ name: String::into_boxed_str("ifru_dstaddr".to_string()), ty: TypeRef::Id(908), dir: None }, Field{ name: String::into_boxed_str("ifru_broadaddr".to_string()), ty: TypeRef::Id(908), dir: None }, Field{ name: String::into_boxed_str("ifru_flags".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("ifru_metric".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("ifru_vnetid".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("ifru_media".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("ifru_data".to_string()), ty: TypeRef::Id(635), dir: None }, Field{ name: String::into_boxed_str("ifru_index".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(836, "ifreq", 0, 8, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ifr_name".to_string()), ty: TypeRef::Id(60), dir: None }, Field{ name: String::into_boxed_str("ifr_ifru".to_string()), ty: TypeRef::Id(835), dir: None }, ]))));
	tys.push(Rc::new(Type::new(837, "ifreq_name", 32, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ifr_name".to_string()), ty: TypeRef::Id(81), dir: None }, Field{ name: String::into_boxed_str("tapindex".to_string()), ty: TypeRef::Id(526), dir: None }, Field{ name: String::into_boxed_str("z".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(324), dir: None }, ]))));
	tys.push(Rc::new(Type::new(838, "iovec_in", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(635), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(504), dir: None }, ]))));
	tys.push(Rc::new(Type::new(839, "iovec_out", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(706), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(504), dir: None }, ]))));
	tys.push(Rc::new(Type::new(840, "ipc_perm", 48, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("key".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("uid".to_string()), ty: TypeRef::Id(750), dir: None }, Field{ name: String::into_boxed_str("gid".to_string()), ty: TypeRef::Id(739), dir: None }, Field{ name: String::into_boxed_str("cuid".to_string()), ty: TypeRef::Id(750), dir: None }, Field{ name: String::into_boxed_str("cgid".to_string()), ty: TypeRef::Id(739), dir: None }, Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(443), dir: None }, Field{ name: String::into_boxed_str("seq".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("pad0".to_string()), ty: TypeRef::Id(130), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("pad1".to_string()), ty: TypeRef::Id(321), dir: None }, Field{ name: String::into_boxed_str("pad2".to_string()), ty: TypeRef::Id(321), dir: None }, ]))));
	tys.push(Rc::new(Type::new(841, "ipv4_addr", 4, 4, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("empty".to_string()), ty: TypeRef::Id(135), dir: None }, Field{ name: String::into_boxed_str("local".to_string()), ty: TypeRef::Id(842), dir: None }, Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(843), dir: None }, Field{ name: String::into_boxed_str("loopback".to_string()), ty: TypeRef::Id(131), dir: None }, Field{ name: String::into_boxed_str("multicast1".to_string()), ty: TypeRef::Id(132), dir: None }, Field{ name: String::into_boxed_str("multicast2".to_string()), ty: TypeRef::Id(133), dir: None }, Field{ name: String::into_boxed_str("broadcast".to_string()), ty: TypeRef::Id(134), dir: None }, Field{ name: String::into_boxed_str("rand_addr".to_string()), ty: TypeRef::Id(467), dir: None }, ]))));
	tys.push(Rc::new(Type::new(842, "ipv4_addr_local", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(103), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(110), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(525), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(102), dir: None }, ]))));
	tys.push(Rc::new(Type::new(843, "ipv4_addr_remote", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(103), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(110), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(525), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(105), dir: None }, ]))));
	tys.push(Rc::new(Type::new(844, "ipv4_header", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ihl".to_string()), ty: TypeRef::Id(480), dir: None }, Field{ name: String::into_boxed_str("version".to_string()), ty: TypeRef::Id(85), dir: None }, Field{ name: String::into_boxed_str("ecn".to_string()), ty: TypeRef::Id(471), dir: None }, Field{ name: String::into_boxed_str("dscp".to_string()), ty: TypeRef::Id(473), dir: None }, Field{ name: String::into_boxed_str("total_len".to_string()), ty: TypeRef::Id(490), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(463), dir: None }, Field{ name: String::into_boxed_str("frag_off".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("ttl".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("protocol".to_string()), ty: TypeRef::Id(376), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(329), dir: None }, Field{ name: String::into_boxed_str("src_ip".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("dst_ip".to_string()), ty: TypeRef::Id(841), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(855), dir: None }, ]))));
	tys.push(Rc::new(Type::new(845, "ipv4_option", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(847), dir: None }, Field{ name: String::into_boxed_str("end".to_string()), ty: TypeRef::Id(846), dir: None }, Field{ name: String::into_boxed_str("noop".to_string()), ty: TypeRef::Id(849), dir: None }, Field{ name: String::into_boxed_str("lsrr".to_string()), ty: TypeRef::Id(848), dir: None }, Field{ name: String::into_boxed_str("ssrr".to_string()), ty: TypeRef::Id(852), dir: None }, Field{ name: String::into_boxed_str("rr".to_string()), ty: TypeRef::Id(851), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(853), dir: None }, Field{ name: String::into_boxed_str("ra".to_string()), ty: TypeRef::Id(850), dir: None }, ]))));
	tys.push(Rc::new(Type::new(846, "ipv4_option_end", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(121), dir: None }, ]))));
	tys.push(Rc::new(Type::new(847, "ipv4_option_generic", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(375), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(51), dir: None }, ]))));
	tys.push(Rc::new(Type::new(848, "ipv4_option_lsrr", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(91), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(20), dir: None }, ]))));
	tys.push(Rc::new(Type::new(849, "ipv4_option_noop", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(109), dir: None }, ]))));
	tys.push(Rc::new(Type::new(850, "ipv4_option_ra", 6, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(98), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("value".to_string()), ty: TypeRef::Id(467), dir: None }, ]))));
	tys.push(Rc::new(Type::new(851, "ipv4_option_rr", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(119), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(20), dir: None }, ]))));
	tys.push(Rc::new(Type::new(852, "ipv4_option_ssrr", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(96), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(20), dir: None }, ]))));
	tys.push(Rc::new(Type::new(853, "ipv4_option_timestamp", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(117), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("pointer".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("flg".to_string()), ty: TypeRef::Id(374), dir: None }, Field{ name: String::into_boxed_str("oflw".to_string()), ty: TypeRef::Id(475), dir: None }, Field{ name: String::into_boxed_str("timestamps".to_string()), ty: TypeRef::Id(3), dir: None }, ]))));
	tys.push(Rc::new(Type::new(854, "ipv4_option_timestamp_timestamp", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(19), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(467), dir: None }, ]))));
	tys.push(Rc::new(Type::new(855, "ipv4_options", 0, 4, false, true, TypeKind::new_struct(4, vec![Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(4), dir: None }, ]))));
	tys.push(Rc::new(Type::new(856, "ipv4_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("header".to_string()), ty: TypeRef::Id(844), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(857), dir: None }, ]))));
	tys.push(Rc::new(Type::new(857, "ipv4_payload", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(53), dir: None }, Field{ name: String::into_boxed_str("tcp".to_string()), ty: TypeRef::Id(921), dir: None }, Field{ name: String::into_boxed_str("udp".to_string()), ty: TypeRef::Id(935), dir: None }, Field{ name: String::into_boxed_str("icmp".to_string()), ty: TypeRef::Id(812), dir: None }, ]))));
	tys.push(Rc::new(Type::new(858, "ipv6_addr", 16, 1, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("rand_addr".to_string()), ty: TypeRef::Id(54), dir: None }, Field{ name: String::into_boxed_str("empty".to_string()), ty: TypeRef::Id(859), dir: None }, Field{ name: String::into_boxed_str("local".to_string()), ty: TypeRef::Id(861), dir: None }, Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(865), dir: None }, Field{ name: String::into_boxed_str("loopback".to_string()), ty: TypeRef::Id(862), dir: None }, Field{ name: String::into_boxed_str("ipv4".to_string()), ty: TypeRef::Id(860), dir: None }, Field{ name: String::into_boxed_str("mcast1".to_string()), ty: TypeRef::Id(863), dir: None }, Field{ name: String::into_boxed_str("mcast2".to_string()), ty: TypeRef::Id(864), dir: None }, ]))));
	tys.push(Rc::new(Type::new(859, "ipv6_addr_empty", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(33), dir: None }, ]))));
	tys.push(Rc::new(Type::new(860, "ipv6_addr_ipv4", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(29), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(35), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(841), dir: None }, ]))));
	tys.push(Rc::new(Type::new(861, "ipv6_addr_local", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(111), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(88), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(30), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(525), dir: None }, Field{ name: String::into_boxed_str("a4".to_string()), ty: TypeRef::Id(102), dir: None }, ]))));
	tys.push(Rc::new(Type::new(862, "ipv6_addr_loopback", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(167), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(166), dir: None }, ]))));
	tys.push(Rc::new(Type::new(863, "ipv6_addr_multicast1", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(112), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(109), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(31), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(109), dir: None }, ]))));
	tys.push(Rc::new(Type::new(864, "ipv6_addr_multicast2", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(112), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(113), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(31), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(109), dir: None }, ]))));
	tys.push(Rc::new(Type::new(865, "ipv6_addr_remote", 16, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(111), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(88), dir: None }, Field{ name: String::into_boxed_str("a2".to_string()), ty: TypeRef::Id(30), dir: None }, Field{ name: String::into_boxed_str("a3".to_string()), ty: TypeRef::Id(525), dir: None }, Field{ name: String::into_boxed_str("a4".to_string()), ty: TypeRef::Id(105), dir: None }, ]))));
	tys.push(Rc::new(Type::new(866, "ipv6_dstopts_ext_header", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(377), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(484), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(47), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(7), dir: None }, ]))));
	tys.push(Rc::new(Type::new(867, "ipv6_ext_header", 0, 8, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("hopopts".to_string()), ty: TypeRef::Id(869), dir: None }, Field{ name: String::into_boxed_str("routing".to_string()), ty: TypeRef::Id(873), dir: None }, Field{ name: String::into_boxed_str("fragment".to_string()), ty: TypeRef::Id(868), dir: None }, Field{ name: String::into_boxed_str("dstopts".to_string()), ty: TypeRef::Id(866), dir: None }, ]))));
	tys.push(Rc::new(Type::new(868, "ipv6_fragment_ext_header", 8, 8, false, false, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(377), dir: None }, Field{ name: String::into_boxed_str("reserved1".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("fragment_off_hi".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("m_flag".to_string()), ty: TypeRef::Id(470), dir: None }, Field{ name: String::into_boxed_str("reserved2".to_string()), ty: TypeRef::Id(83), dir: None }, Field{ name: String::into_boxed_str("fragment_off_lo".to_string()), ty: TypeRef::Id(474), dir: None }, Field{ name: String::into_boxed_str("identification".to_string()), ty: TypeRef::Id(465), dir: None }, ]))));
	tys.push(Rc::new(Type::new(869, "ipv6_hopots_ext_header", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(377), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(484), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(47), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(7), dir: None }, ]))));
	tys.push(Rc::new(Type::new(870, "ipv6_packet_payload", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ext_headers".to_string()), ty: TypeRef::Id(28), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(872), dir: None }, ]))));
	tys.push(Rc::new(Type::new(871, "ipv6_packet_t", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("priority".to_string()), ty: TypeRef::Id(472), dir: None }, Field{ name: String::into_boxed_str("version".to_string()), ty: TypeRef::Id(86), dir: None }, Field{ name: String::into_boxed_str("flow_label".to_string()), ty: TypeRef::Id(56), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(492), dir: None }, Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(377), dir: None }, Field{ name: String::into_boxed_str("hop_limit".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("src_ip".to_string()), ty: TypeRef::Id(858), dir: None }, Field{ name: String::into_boxed_str("dst_ip".to_string()), ty: TypeRef::Id(858), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(870), dir: None }, ]))));
	tys.push(Rc::new(Type::new(872, "ipv6_payload", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(53), dir: None }, Field{ name: String::into_boxed_str("tcp".to_string()), ty: TypeRef::Id(921), dir: None }, Field{ name: String::into_boxed_str("udp".to_string()), ty: TypeRef::Id(935), dir: None }, Field{ name: String::into_boxed_str("icmpv6".to_string()), ty: TypeRef::Id(831), dir: None }, ]))));
	tys.push(Rc::new(Type::new(873, "ipv6_rt_hdr", 0, 8, false, true, TypeKind::new_struct(8, vec![Field{ name: String::into_boxed_str("next_header".to_string()), ty: TypeRef::Id(377), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(483), dir: None }, Field{ name: String::into_boxed_str("routing_type".to_string()), ty: TypeRef::Id(322), dir: None }, Field{ name: String::into_boxed_str("segments_left".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("reserved".to_string()), ty: TypeRef::Id(165), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(6), dir: None }, ]))));
	tys.push(Rc::new(Type::new(874, "ipv6_tlv_generic", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(487), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(875, "ipv6_tlv_jumbo", 6, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(107), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("pkt_len".to_string()), ty: TypeRef::Id(467), dir: None }, ]))));
	tys.push(Rc::new(Type::new(876, "ipv6_tlv_option", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(874), dir: None }, Field{ name: String::into_boxed_str("pad1".to_string()), ty: TypeRef::Id(877), dir: None }, Field{ name: String::into_boxed_str("padn".to_string()), ty: TypeRef::Id(878), dir: None }, Field{ name: String::into_boxed_str("jumbo".to_string()), ty: TypeRef::Id(875), dir: None }, Field{ name: String::into_boxed_str("enc_lim".to_string()), ty: TypeRef::Id(880), dir: None }, Field{ name: String::into_boxed_str("ra".to_string()), ty: TypeRef::Id(879), dir: None }, ]))));
	tys.push(Rc::new(Type::new(877, "ipv6_tlv_pad1", 3, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(109), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(121), dir: None }, ]))));
	tys.push(Rc::new(Type::new(878, "ipv6_tlv_padn", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(109), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(488), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(0), dir: None }, ]))));
	tys.push(Rc::new(Type::new(879, "ipv6_tlv_ra", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(116), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(113), dir: None }, Field{ name: String::into_boxed_str("ra".to_string()), ty: TypeRef::Id(464), dir: None }, ]))));
	tys.push(Rc::new(Type::new(880, "ipv6_tlv_tun_lim", 3, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("len".to_string()), ty: TypeRef::Id(109), dir: None }, Field{ name: String::into_boxed_str("encap_limit".to_string()), ty: TypeRef::Id(476), dir: None }, ]))));
	tys.push(Rc::new(Type::new(881, "itimerval", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("interv".to_string()), ty: TypeRef::Id(930), dir: None }, Field{ name: String::into_boxed_str("value".to_string()), ty: TypeRef::Id(930), dir: None }, ]))));
	tys.push(Rc::new(Type::new(882, "kevent", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ident".to_string()), ty: TypeRef::Id(883), dir: None }, Field{ name: String::into_boxed_str("filter".to_string()), ty: TypeRef::Id(381), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(431), dir: None }, Field{ name: String::into_boxed_str("fflags".to_string()), ty: TypeRef::Id(380), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("udata".to_string()), ty: TypeRef::Id(477), dir: None }, ]))));
	tys.push(Rc::new(Type::new(883, "kevent_ident", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ident".to_string()), ty: TypeRef::Id(726), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, ]))));
	tys.push(Rc::new(Type::new(884, "linger", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("onoff".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("linger".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(885, "mac_addr", 6, 1, false, false, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("empty".to_string()), ty: TypeRef::Id(47), dir: None }, Field{ name: String::into_boxed_str("local".to_string()), ty: TypeRef::Id(886), dir: None }, Field{ name: String::into_boxed_str("remote".to_string()), ty: TypeRef::Id(887), dir: None }, Field{ name: String::into_boxed_str("broadcast".to_string()), ty: TypeRef::Id(48), dir: None }, Field{ name: String::into_boxed_str("random".to_string()), ty: TypeRef::Id(57), dir: None }, ]))));
	tys.push(Rc::new(Type::new(886, "mac_addr_t[const[0xaa, int8]]", 6, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(44), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(102), dir: None }, ]))));
	tys.push(Rc::new(Type::new(887, "mac_addr_t[const[0xbb, int8]]", 6, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("a0".to_string()), ty: TypeRef::Id(44), dir: None }, Field{ name: String::into_boxed_str("a1".to_string()), ty: TypeRef::Id(105), dir: None }, ]))));
	tys.push(Rc::new(Type::new(888, "mf6cctl", 60, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mf6cc_origin".to_string()), ty: TypeRef::Id(907), dir: None }, Field{ name: String::into_boxed_str("mf6cc_mcastgrp".to_string()), ty: TypeRef::Id(907), dir: None }, Field{ name: String::into_boxed_str("mf6cc_parent".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(325), dir: None }, Field{ name: String::into_boxed_str("mf6cc_ifset".to_string()), ty: TypeRef::Id(40), dir: None }, ]))));
	tys.push(Rc::new(Type::new(889, "mif6ctl", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mif6c_mifi".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("mif6c_flags".to_string()), ty: TypeRef::Id(435), dir: None }, Field{ name: String::into_boxed_str("vifc_threshold".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("mif6c_pifi".to_string()), ty: TypeRef::Id(461), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(325), dir: None }, Field{ name: String::into_boxed_str("vifc_rate_limit".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(890, "msgbuf", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("typ".to_string()), ty: TypeRef::Id(386), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(891, "msghdr_un", 56, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("addr".to_string()), ty: TypeRef::Id(653), dir: None }, Field{ name: String::into_boxed_str("addrlen".to_string()), ty: TypeRef::Id(493), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("vec".to_string()), ty: TypeRef::Id(610), dir: None }, Field{ name: String::into_boxed_str("vlen".to_string()), ty: TypeRef::Id(523), dir: None }, Field{ name: String::into_boxed_str("ctrl".to_string()), ty: TypeRef::Id(536), dir: None }, Field{ name: String::into_boxed_str("ctrllen".to_string()), ty: TypeRef::Id(478), dir: None }, Field{ name: String::into_boxed_str("f".to_string()), ty: TypeRef::Id(449), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, ]))));
	tys.push(Rc::new(Type::new(892, "msqid_ds", 120, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("perm".to_string()), ty: TypeRef::Id(840), dir: None }, Field{ name: String::into_boxed_str("qnum".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("qbytes".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("lspid".to_string()), ty: TypeRef::Id(743), dir: None }, Field{ name: String::into_boxed_str("lrpid".to_string()), ty: TypeRef::Id(743), dir: None }, Field{ name: String::into_boxed_str("stime".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("rtime".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("ctime".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("cbytes".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("pad0".to_string()), ty: TypeRef::Id(321), dir: None }, Field{ name: String::into_boxed_str("pad1".to_string()), ty: TypeRef::Id(321), dir: None }, ]))));
	tys.push(Rc::new(Type::new(893, "pci_io", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pi_sel".to_string()), ty: TypeRef::Id(895), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(323), dir: None }, Field{ name: String::into_boxed_str("pi_reg".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("pi_width".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("pi_data".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(894, "pci_rom", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pr_sel".to_string()), ty: TypeRef::Id(895), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(323), dir: None }, Field{ name: String::into_boxed_str("pr_romlen".to_string()), ty: TypeRef::Id(502), dir: None }, Field{ name: String::into_boxed_str("pr_rom".to_string()), ty: TypeRef::Id(669), dir: None }, ]))));
	tys.push(Rc::new(Type::new(895, "pcisel", 3, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pc_bus".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("pc_dev".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("pc_func".to_string()), ty: TypeRef::Id(476), dir: None }, ]))));
}
fn types_14(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(896, "pipefd", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("rfd".to_string()), ty: TypeRef::Id(726), dir: None }, Field{ name: String::into_boxed_str("wfd".to_string()), ty: TypeRef::Id(726), dir: None }, ]))));
	tys.push(Rc::new(Type::new(897, "pollfd", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fd".to_string()), ty: TypeRef::Id(726), dir: None }, Field{ name: String::into_boxed_str("events".to_string()), ty: TypeRef::Id(388), dir: None }, Field{ name: String::into_boxed_str("revents".to_string()), ty: TypeRef::Id(130), dir: None }, ]))));
	tys.push(Rc::new(Type::new(898, "recv_msghdr", 56, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("msg_name".to_string()), ty: TypeRef::Id(663), dir: None }, Field{ name: String::into_boxed_str("msg_namelen".to_string()), ty: TypeRef::Id(498), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("msg_iov".to_string()), ty: TypeRef::Id(609), dir: None }, Field{ name: String::into_boxed_str("msg_iovlen".to_string()), ty: TypeRef::Id(512), dir: None }, Field{ name: String::into_boxed_str("msg_control".to_string()), ty: TypeRef::Id(706), dir: None }, Field{ name: String::into_boxed_str("msg_controllen".to_string()), ty: TypeRef::Id(511), dir: None }, Field{ name: String::into_boxed_str("msg_flags".to_string()), ty: TypeRef::Id(165), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, ]))));
	tys.push(Rc::new(Type::new(899, "rlimit", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("soft".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("hard".to_string()), ty: TypeRef::Id(477), dir: None }, ]))));
	tys.push(Rc::new(Type::new(900, "rusage", 144, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("utime".to_string()), ty: TypeRef::Id(930), dir: None }, Field{ name: String::into_boxed_str("stime".to_string()), ty: TypeRef::Id(930), dir: None }, Field{ name: String::into_boxed_str("maxrss".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("ixrss".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("idrss".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("isrss".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("minflt".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("majflt".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("nswap".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("inblock".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("oublock".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("msgsnd".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("msgrcv".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("signals".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("nvcsw".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("nivcsw".to_string()), ty: TypeRef::Id(477), dir: None }, ]))));
	tys.push(Rc::new(Type::new(901, "sembuf", 6, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("num".to_string()), ty: TypeRef::Id(393), dir: None }, Field{ name: String::into_boxed_str("op".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("flg".to_string()), ty: TypeRef::Id(448), dir: None }, ]))));
	tys.push(Rc::new(Type::new(902, "semid_ds", 88, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("perm".to_string()), ty: TypeRef::Id(840), dir: None }, Field{ name: String::into_boxed_str("otime".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("ctime".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("nsems".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("pad0".to_string()), ty: TypeRef::Id(321), dir: None }, Field{ name: String::into_boxed_str("pad1".to_string()), ty: TypeRef::Id(321), dir: None }, ]))));
	tys.push(Rc::new(Type::new(903, "send_msghdr", 56, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("msg_name".to_string()), ty: TypeRef::Id(535), dir: None }, Field{ name: String::into_boxed_str("msg_namelen".to_string()), ty: TypeRef::Id(498), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("msg_iov".to_string()), ty: TypeRef::Id(610), dir: None }, Field{ name: String::into_boxed_str("msg_iovlen".to_string()), ty: TypeRef::Id(512), dir: None }, Field{ name: String::into_boxed_str("msg_control".to_string()), ty: TypeRef::Id(614), dir: None }, Field{ name: String::into_boxed_str("msg_controllen".to_string()), ty: TypeRef::Id(479), dir: None }, Field{ name: String::into_boxed_str("msg_flags".to_string()), ty: TypeRef::Id(165), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, ]))));
	tys.push(Rc::new(Type::new(904, "shmid_ds", 112, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("perm".to_string()), ty: TypeRef::Id(840), dir: None }, Field{ name: String::into_boxed_str("segsz".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("nattch".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(325), dir: None }, Field{ name: String::into_boxed_str("cpid".to_string()), ty: TypeRef::Id(743), dir: None }, Field{ name: String::into_boxed_str("lpid".to_string()), ty: TypeRef::Id(743), dir: None }, Field{ name: String::into_boxed_str("atime".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("dtime".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("ctime".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("unused0".to_string()), ty: TypeRef::Id(130), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(328), dir: None }, Field{ name: String::into_boxed_str("unused1".to_string()), ty: TypeRef::Id(321), dir: None }, Field{ name: String::into_boxed_str("unused2".to_string()), ty: TypeRef::Id(321), dir: None }, ]))));
	tys.push(Rc::new(Type::new(905, "sock_pair", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fd0".to_string()), ty: TypeRef::Id(745), dir: None }, Field{ name: String::into_boxed_str("fd1".to_string()), ty: TypeRef::Id(745), dir: None }, ]))));
	tys.push(Rc::new(Type::new(906, "sockaddr_in", 12, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("family".to_string()), ty: TypeRef::Id(129), dir: None }, Field{ name: String::into_boxed_str("port".to_string()), ty: TypeRef::Id(527), dir: None }, Field{ name: String::into_boxed_str("pad".to_string()), ty: TypeRef::Id(49), dir: None }, ]))));
	tys.push(Rc::new(Type::new(907, "sockaddr_in6", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("family".to_string()), ty: TypeRef::Id(128), dir: None }, Field{ name: String::into_boxed_str("port".to_string()), ty: TypeRef::Id(527), dir: None }, Field{ name: String::into_boxed_str("flow".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("scope".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(908, "sockaddr_storage", 0, 4, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("un".to_string()), ty: TypeRef::Id(909), dir: None }, Field{ name: String::into_boxed_str("in".to_string()), ty: TypeRef::Id(906), dir: None }, Field{ name: String::into_boxed_str("in6".to_string()), ty: TypeRef::Id(907), dir: None }, ]))));
	tys.push(Rc::new(Type::new(909, "sockaddr_un", 0, 4, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("file".to_string()), ty: TypeRef::Id(911), dir: None }, Field{ name: String::into_boxed_str("abs".to_string()), ty: TypeRef::Id(910), dir: None }, ]))));
	tys.push(Rc::new(Type::new(910, "sockaddr_un_abstract", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("family".to_string()), ty: TypeRef::Id(402), dir: None }, Field{ name: String::into_boxed_str("ind".to_string()), ty: TypeRef::Id(121), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(323), dir: None }, Field{ name: String::into_boxed_str("id".to_string()), ty: TypeRef::Id(529), dir: None }, ]))));
	tys.push(Rc::new(Type::new(911, "sockaddr_un_file", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("family".to_string()), ty: TypeRef::Id(402), dir: None }, Field{ name: String::into_boxed_str("path".to_string()), ty: TypeRef::Id(58), dir: None }, ]))));
	tys.push(Rc::new(Type::new(912, "stat", 112, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("dev".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("ino".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("nlink".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("rdev".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("size".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("blksize".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("blocks".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("atime".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("ansec".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mtime".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("mnsec".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("ctime".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("cnsec".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("pad1".to_string()), ty: TypeRef::Id(165), dir: None }, Field{ name: String::into_boxed_str("pad2".to_string()), ty: TypeRef::Id(165), dir: None }, ]))));
	tys.push(Rc::new(Type::new(913, "tcp_eol_option", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(121), dir: None }, ]))));
	tys.push(Rc::new(Type::new(914, "tcp_generic_option", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(401), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(51), dir: None }, ]))));
	tys.push(Rc::new(Type::new(915, "tcp_header", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("src_port".to_string()), ty: TypeRef::Id(527), dir: None }, Field{ name: String::into_boxed_str("dst_port".to_string()), ty: TypeRef::Id(527), dir: None }, Field{ name: String::into_boxed_str("seq_num".to_string()), ty: TypeRef::Id(749), dir: None }, Field{ name: String::into_boxed_str("ack_num".to_string()), ty: TypeRef::Id(749), dir: None }, Field{ name: String::into_boxed_str("ns".to_string()), ty: TypeRef::Id(470), dir: None }, Field{ name: String::into_boxed_str("reserved".to_string()), ty: TypeRef::Id(84), dir: None }, Field{ name: String::into_boxed_str("data_off".to_string()), ty: TypeRef::Id(481), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(400), dir: None }, Field{ name: String::into_boxed_str("window_size".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(332), dir: None }, Field{ name: String::into_boxed_str("urg_ptr".to_string()), ty: TypeRef::Id(464), dir: None }, Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(920), dir: None }, ]))));
	tys.push(Rc::new(Type::new(916, "tcp_md5sig_option", 18, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(108), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("md5".to_string()), ty: TypeRef::Id(54), dir: None }, ]))));
	tys.push(Rc::new(Type::new(917, "tcp_mss_option", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(113), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("seg_size".to_string()), ty: TypeRef::Id(462), dir: None }, ]))));
	tys.push(Rc::new(Type::new(918, "tcp_nop_option", 1, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(109), dir: None }, ]))));
	tys.push(Rc::new(Type::new(919, "tcp_option", 0, 1, false, true, TypeKind::new_union(vec![Field{ name: String::into_boxed_str("generic".to_string()), ty: TypeRef::Id(914), dir: None }, Field{ name: String::into_boxed_str("nop".to_string()), ty: TypeRef::Id(918), dir: None }, Field{ name: String::into_boxed_str("eol".to_string()), ty: TypeRef::Id(913), dir: None }, Field{ name: String::into_boxed_str("mss".to_string()), ty: TypeRef::Id(917), dir: None }, Field{ name: String::into_boxed_str("window".to_string()), ty: TypeRef::Id(927), dir: None }, Field{ name: String::into_boxed_str("sack_perm".to_string()), ty: TypeRef::Id(925), dir: None }, Field{ name: String::into_boxed_str("sack".to_string()), ty: TypeRef::Id(924), dir: None }, Field{ name: String::into_boxed_str("timestamp".to_string()), ty: TypeRef::Id(926), dir: None }, Field{ name: String::into_boxed_str("md5sig".to_string()), ty: TypeRef::Id(916), dir: None }, ]))));
	tys.push(Rc::new(Type::new(920, "tcp_options", 0, 4, false, true, TypeKind::new_struct(4, vec![Field{ name: String::into_boxed_str("options".to_string()), ty: TypeRef::Id(5), dir: None }, ]))));
	tys.push(Rc::new(Type::new(921, "tcp_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("header".to_string()), ty: TypeRef::Id(915), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(922), dir: None }, ]))));
	tys.push(Rc::new(Type::new(922, "tcp_payload", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(923, "tcp_resources", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("seq".to_string()), ty: TypeRef::Id(749), dir: None }, Field{ name: String::into_boxed_str("ack".to_string()), ty: TypeRef::Id(749), dir: None }, ]))));
	tys.push(Rc::new(Type::new(924, "tcp_sack_option", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(116), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(18), dir: None }, ]))));
	tys.push(Rc::new(Type::new(925, "tcp_sack_perm_option", 2, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(115), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, ]))));
	tys.push(Rc::new(Type::new(926, "tcp_timestamp_option", 10, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(120), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("tsval".to_string()), ty: TypeRef::Id(467), dir: None }, Field{ name: String::into_boxed_str("tsecr".to_string()), ty: TypeRef::Id(467), dir: None }, ]))));
	tys.push(Rc::new(Type::new(927, "tcp_window_option", 3, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(114), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(489), dir: None }, Field{ name: String::into_boxed_str("shift".to_string()), ty: TypeRef::Id(476), dir: None }, ]))));
	tys.push(Rc::new(Type::new(928, "termios", 44, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("iflag".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("oflag".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("cflag".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("lflag".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("cc".to_string()), ty: TypeRef::Id(55), dir: None }, Field{ name: String::into_boxed_str("ispeed".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("ospeed".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(929, "timespec", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sec".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("nsec".to_string()), ty: TypeRef::Id(477), dir: None }, ]))));
	tys.push(Rc::new(Type::new(930, "timeval", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("sec".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("usec".to_string()), ty: TypeRef::Id(477), dir: None }, ]))));
	tys.push(Rc::new(Type::new(931, "tone", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("frequency".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("duration".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(932, "tstamps", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("set".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("clr".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(933, "ucred", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("pid".to_string()), ty: TypeRef::Id(743), dir: None }, Field{ name: String::into_boxed_str("uid".to_string()), ty: TypeRef::Id(750), dir: None }, Field{ name: String::into_boxed_str("gid".to_string()), ty: TypeRef::Id(739), dir: None }, ]))));
	tys.push(Rc::new(Type::new(934, "udp_header", 8, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("src_port".to_string()), ty: TypeRef::Id(527), dir: None }, Field{ name: String::into_boxed_str("dst_port".to_string()), ty: TypeRef::Id(527), dir: None }, Field{ name: String::into_boxed_str("length".to_string()), ty: TypeRef::Id(491), dir: None }, Field{ name: String::into_boxed_str("csum".to_string()), ty: TypeRef::Id(330), dir: None }, ]))));
	tys.push(Rc::new(Type::new(935, "udp_packet", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("header".to_string()), ty: TypeRef::Id(934), dir: None }, Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(936), dir: None }, ]))));
	tys.push(Rc::new(Type::new(936, "udp_payload", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("payload".to_string()), ty: TypeRef::Id(53), dir: None }, ]))));
	tys.push(Rc::new(Type::new(937, "unix_pair", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("fd0".to_string()), ty: TypeRef::Id(748), dir: None }, Field{ name: String::into_boxed_str("fd1".to_string()), ty: TypeRef::Id(748), dir: None }, ]))));
	tys.push(Rc::new(Type::new(938, "vcpu_reg_state", 568, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vrs_gprs".to_string()), ty: TypeRef::Id(32), dir: None }, Field{ name: String::into_boxed_str("vrs_crs".to_string()), ty: TypeRef::Id(50), dir: None }, Field{ name: String::into_boxed_str("vrs_msrs".to_string()), ty: TypeRef::Id(46), dir: None }, Field{ name: String::into_boxed_str("vrs_drs".to_string()), ty: TypeRef::Id(43), dir: None }, Field{ name: String::into_boxed_str("vrs_sregs".to_string()), ty: TypeRef::Id(34), dir: None }, Field{ name: String::into_boxed_str("vrs_gdtr".to_string()), ty: TypeRef::Id(939), dir: None }, Field{ name: String::into_boxed_str("vrs_idtr".to_string()), ty: TypeRef::Id(939), dir: None }, ]))));
	tys.push(Rc::new(Type::new(939, "vcpu_segment_info", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vsi_sel".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(325), dir: None }, Field{ name: String::into_boxed_str("vsi_limit".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("vsi_ar".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("vsi_base".to_string()), ty: TypeRef::Id(468), dir: None }, ]))));
	tys.push(Rc::new(Type::new(940, "vlan_tag", 0, 1, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tag_ad".to_string()), ty: TypeRef::Id(1), dir: None }, Field{ name: String::into_boxed_str("tag_q".to_string()), ty: TypeRef::Id(942), dir: None }, ]))));
	tys.push(Rc::new(Type::new(941, "vlan_tag_ad", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tpid".to_string()), ty: TypeRef::Id(127), dir: None }, Field{ name: String::into_boxed_str("pcp".to_string()), ty: TypeRef::Id(458), dir: None }, Field{ name: String::into_boxed_str("dei".to_string()), ty: TypeRef::Id(459), dir: None }, Field{ name: String::into_boxed_str("vid".to_string()), ty: TypeRef::Id(460), dir: None }, ]))));
	tys.push(Rc::new(Type::new(942, "vlan_tag_q", 4, 1, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("tpid".to_string()), ty: TypeRef::Id(125), dir: None }, Field{ name: String::into_boxed_str("pcp".to_string()), ty: TypeRef::Id(458), dir: None }, Field{ name: String::into_boxed_str("dei".to_string()), ty: TypeRef::Id(459), dir: None }, Field{ name: String::into_boxed_str("vid".to_string()), ty: TypeRef::Id(460), dir: None }, ]))));
	tys.push(Rc::new(Type::new(943, "vm_create_params", 1280, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vcp_nmemranges".to_string()), ty: TypeRef::Id(522), dir: None }, Field{ name: String::into_boxed_str("vcp_ncpus".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("vcp_ndisks".to_string()), ty: TypeRef::Id(521), dir: None }, Field{ name: String::into_boxed_str("vcp_nnics".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("vcp_memranges".to_string()), ty: TypeRef::Id(41), dir: None }, Field{ name: String::into_boxed_str("vcp_disks".to_string()), ty: TypeRef::Id(45), dir: None }, Field{ name: String::into_boxed_str("vcp_cdrom".to_string()), ty: TypeRef::Id(59), dir: None }, Field{ name: String::into_boxed_str("vcp_name".to_string()), ty: TypeRef::Id(63), dir: None }, Field{ name: String::into_boxed_str("vcp_kernel".to_string()), ty: TypeRef::Id(59), dir: None }, Field{ name: String::into_boxed_str("vcp_macs".to_string()), ty: TypeRef::Id(36), dir: None }, Field{ name: String::into_boxed_str("vcp_id".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, ]))));
	tys.push(Rc::new(Type::new(944, "vm_exit", 584, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vei".to_string()), ty: TypeRef::Id(945), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("vrs".to_string()), ty: TypeRef::Id(938), dir: None }, ]))));
	tys.push(Rc::new(Type::new(945, "vm_exit_inout", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vei_size".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("vei_dir".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("vei_rep".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("vei_string".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("vei_encoding".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(323), dir: None }, Field{ name: String::into_boxed_str("vei_port".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("vei_data".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(946, "vm_info_params", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vip_size".to_string()), ty: TypeRef::Id(524), dir: None }, Field{ name: String::into_boxed_str("vip_info_ct".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("vip_info".to_string()), ty: TypeRef::Id(706), dir: None }, ]))));
	tys.push(Rc::new(Type::new(947, "vm_intr_params", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vip_vm_id".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("vip_vcpu_id".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("vip_intr".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(325), dir: None }, ]))));
	tys.push(Rc::new(Type::new(948, "vm_mem_range", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vmr_gpa".to_string()), ty: TypeRef::Id(752), dir: None }, Field{ name: String::into_boxed_str("vmr_va".to_string()), ty: TypeRef::Id(752), dir: None }, Field{ name: String::into_boxed_str("vmr_size".to_string()), ty: TypeRef::Id(468), dir: None }, ]))));
	tys.push(Rc::new(Type::new(949, "vm_resetcpu_params", 576, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vrp_vm_id".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("vrp_vcpu_id".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("vrp_init_state".to_string()), ty: TypeRef::Id(938), dir: None }, ]))));
	tys.push(Rc::new(Type::new(950, "vm_run_params", 32, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vrp_vm_id".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("vrp_vcpu_id".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("vrp_continue".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(323), dir: None }, Field{ name: String::into_boxed_str("vrp_irq".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("vrp_exit".to_string()), ty: TypeRef::Id(685), dir: None }, Field{ name: String::into_boxed_str("vrp_exit_reason".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("vrp_irqready".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(327), dir: None }, ]))));
	tys.push(Rc::new(Type::new(951, "vm_rwregs_params", 584, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vrwp_vm_id".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("vrwp_vcpu_id".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("vrwp_mask".to_string()), ty: TypeRef::Id(468), dir: None }, Field{ name: String::into_boxed_str("vrwp_regs".to_string()), ty: TypeRef::Id(938), dir: None }, ]))));
	tys.push(Rc::new(Type::new(952, "vm_terminate_params", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("vtp_vm_id".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(953, "vt_mode", 8, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(406), dir: None }, Field{ name: String::into_boxed_str("waitv".to_string()), ty: TypeRef::Id(476), dir: None }, Field{ name: String::into_boxed_str("relsig".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("acqsig".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("frsig".to_string()), ty: TypeRef::Id(462), dir: None }, ]))));
	tys.push(Rc::new(Type::new(954, "vt_stat", 6, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("v_active".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("v_signal".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("v_state".to_string()), ty: TypeRef::Id(462), dir: None }, ]))));
	tys.push(Rc::new(Type::new(955, "winsize", 8, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("row".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("col".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("xpixel".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("ypixel".to_string()), ty: TypeRef::Id(462), dir: None }, ]))));
	tys.push(Rc::new(Type::new(956, "wscons_event", 24, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("value".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("time".to_string()), ty: TypeRef::Id(929), dir: None }, ]))));
	tys.push(Rc::new(Type::new(957, "wscons_keymap", 10, 2, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("command".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("group1_0".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("group1_1".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("group2_0".to_string()), ty: TypeRef::Id(462), dir: None }, Field{ name: String::into_boxed_str("group2_1".to_string()), ty: TypeRef::Id(462), dir: None }, ]))));
	tys.push(Rc::new(Type::new(958, "wsdisplay_addscreendata", 36, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("idx".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("screentype".to_string()), ty: TypeRef::Id(60), dir: None }, Field{ name: String::into_boxed_str("emul".to_string()), ty: TypeRef::Id(60), dir: None }, ]))));
	tys.push(Rc::new(Type::new(959, "wsdisplay_burner", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("off".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("on".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(455), dir: None }, ]))));
}
fn types_15(tys: &mut Vec<Rc<Type>>){
	tys.push(Rc::new(Type::new(960, "wsdisplay_delscreendata", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("idx".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("flags".to_string()), ty: TypeRef::Id(456), dir: None }, ]))));
	tys.push(Rc::new(Type::new(961, "wsdisplay_emultype", 20, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("idx".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("name".to_string()), ty: TypeRef::Id(60), dir: None }, ]))));
	tys.push(Rc::new(Type::new(962, "wsdisplay_font", 88, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("name".to_string()), ty: TypeRef::Id(61), dir: None }, Field{ name: String::into_boxed_str("index".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("firstchar".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("numchars".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("encoding".to_string()), ty: TypeRef::Id(408), dir: None }, Field{ name: String::into_boxed_str("fontwidth".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("fontheight".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("stride".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("bitorder".to_string()), ty: TypeRef::Id(409), dir: None }, Field{ name: String::into_boxed_str("byteorder".to_string()), ty: TypeRef::Id(409), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("cookie".to_string()), ty: TypeRef::Id(477), dir: None }, Field{ name: String::into_boxed_str("data".to_string()), ty: TypeRef::Id(477), dir: None }, ]))));
	tys.push(Rc::new(Type::new(963, "wsdisplay_screentype", 40, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("idx".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("nidx".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("name".to_string()), ty: TypeRef::Id(60), dir: None }, Field{ name: String::into_boxed_str("ncols".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("nrows".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("fontwidth".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("fontheight".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(964, "wskbd_backlight", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("min".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("max".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("curval".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(965, "wskbd_bell_data", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("which".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("pitch".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("period".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("volume".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(966, "wskbd_encoding_data", 0, 4, false, true, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("nencodings".to_string()), ty: TypeRef::Id(496), dir: None }, Field{ name: String::into_boxed_str("encodings".to_string()), ty: TypeRef::Id(12), dir: None }, ]))));
	tys.push(Rc::new(Type::new(967, "wskbd_keyrepeat_data", 12, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("which".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("del1".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("delN".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(968, "wskbd_map_data", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("maplen".to_string()), ty: TypeRef::Id(497), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, Field{ name: String::into_boxed_str("map".to_string()), ty: TypeRef::Id(578), dir: None }, ]))));
	tys.push(Rc::new(Type::new(969, "wsmouse_calibcoord", 16, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("rawx".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("rawy".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("x".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("y".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(970, "wsmouse_calibcoords", 288, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("minx".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("miny".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("maxx".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("maxy".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("swapxy".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("resx".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("resy".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("samplelen".to_string()), ty: TypeRef::Id(503), dir: None }, Field{ name: String::into_boxed_str("samples".to_string()), ty: TypeRef::Id(37), dir: None }, ]))));
	tys.push(Rc::new(Type::new(971, "wsmouse_mode", 4, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("mode".to_string()), ty: TypeRef::Id(412), dir: None }, ]))));
	tys.push(Rc::new(Type::new(972, "wsmouse_param", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("key".to_string()), ty: TypeRef::Id(413), dir: None }, Field{ name: String::into_boxed_str("value".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(973, "wsmouse_parameters", 16, 8, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("params".to_string()), ty: TypeRef::Id(583), dir: None }, Field{ name: String::into_boxed_str("nparams".to_string()), ty: TypeRef::Id(500), dir: None }, Field{ name: String::into_boxed_str("".to_string()), ty: TypeRef::Id(326), dir: None }, ]))));
	tys.push(Rc::new(Type::new(974, "wsmux_device", 8, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("type".to_string()), ty: TypeRef::Id(414), dir: None }, Field{ name: String::into_boxed_str("idx".to_string()), ty: TypeRef::Id(466), dir: None }, ]))));
	tys.push(Rc::new(Type::new(975, "wsmux_device_list", 260, 4, false, false, TypeKind::new_struct(0, vec![Field{ name: String::into_boxed_str("ndevices".to_string()), ty: TypeRef::Id(466), dir: None }, Field{ name: String::into_boxed_str("devices".to_string()), ty: TypeRef::Id(38), dir: None }, ]))));
}
fn types() -> Vec<Rc<Type>>{
	let mut tys = Vec::new();
	types_0(&mut tys);
	types_1(&mut tys);
	types_2(&mut tys);
	types_3(&mut tys);
	types_4(&mut tys);
	types_5(&mut tys);
	types_6(&mut tys);
	types_7(&mut tys);
	types_8(&mut tys);
	types_9(&mut tys);
	types_10(&mut tys);
	types_11(&mut tys);
	types_12(&mut tys);
	types_13(&mut tys);
	types_14(&mut tys);
	types_15(&mut tys);
	tys
}

pub const REVISION : &str = "04d6808e12d7a62d5b4b5b548aa8716d6d6fca80";
