r0 = syz_usb_connect$hid(0x0, 0x36(len), &0x0=struct{struct{0x12(const),0x1(const),0x0,0x0(const),0x0(const),0x0(const),0x0,0x0(const),0x0(const),0x40(const),0x1(const),0x2(const),0x3(const),0x1(len),array[struct{struct{0x9(const),0x2(const),0x0(len),0x0(len),0x1(const),0xDBBCCC1D9DEDC70A,0x40,0x952F126E15B8C8BE,array[struct{struct{0x9(const),0x4(const),0x0(const),0x0,0x2,0x3(const),0x1(const),0x3,0x7C2221EED74A2355,struct{0x0(len),0x21(const),0x0,0x1,0x1(const),struct{0x22(const),0xEE2}},struct{struct{struct{0x9(const),0x5(const),0x81(const),0x3(const),0x0,0x103A5D69E1B4DCE9,0x1,0xBFC1EB20DB05C2B8,[43, 4F, E8, BC, A2, A9, 1A, 2A]}},array[]}}}]}}]}}, &0x280=struct{0xA(len),&0x40=struct{0xA(len),0x6(const),0x0,0x2C377A2FF3CC76E,0xB76B980F114149B5,0x84FA8057EB60A4CE,0x0,0x1,0x0(const)},0x14(len),&0x80=struct{0x5(const),0xF(const),0x14(len),0x2(len),array[union{ssp_cap: struct{0x0(len),0x10(const),0xA(const),0x1,0x0(len),0x4DEB33F,0xFF,0x1,array[]}},union{ptm_cap: struct{0x0(len),0x10(const),0xB(const)}}]},0x7(len),array[struct{0x0(len),&0xC0=union{lang_id: struct{0x0(len),0x3(const),0x0}}},struct{0x0(len),&0x100=union{lang_id: struct{0x0(len),0x3(const),0x444}}},struct{0x0(len),&0x140=union{string: struct{0x0(len),0x3(const),[0, 0, 0, 0, 0, 0, 0, 0, 6C, 25, 7B, 6C, 1, 53, C0, 32]}}},struct{0x0(len),&0x180=union{string: struct{0x0(len),0x3(const),[E1, BB, 7E, 7A, 53, A3, 54, 31, 1, 0, 0, 0, 0, 0, 0, 0]}}},struct{0x0(len),&0x1C0=union{string: struct{0x0(len),0x3(const),[45, A8, E5, A6, 24, FE, DA, 8C, 6F, 8, 41, 78, ED, A0, EF, EA]}}},struct{0x0(len),&0x200=union{string: struct{0x0(len),0x3(const),[0, 0, 0, 0, 0, 0, 0, 0]}}},struct{0x0(len),&0x240=union{string: struct{0x0(len),0x3(const),[B1, EF, 58, 9, D5, A6, B9, 3E]}}}]})
r1 = getuid()
ioctl$DRM_IOCTL_ADD_CTX(r0, 0xC0086420(const), &0x300=struct{r2(out),0x2})
r3 = socket$bt_hidp(0x1F(const), 0x3(const), 0x6(const))