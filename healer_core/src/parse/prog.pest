// Grammer for prog
Prog = _{SOI ~ Call* ~ EOI}
Call = { (ResName ~ '=')? ~ CallName ~ '(' ~ Value? ~ (',' ~ Value)? ~ ')' }

Value = @{ Int | Data | Ptr | Vma | Res | Array | Struct | Union}
Int = @{ ("0x" | "0X") ~ ASCII_HEX_DIGIT+ } 

Data = {OutData | ReadableData | NonReadableData} 
OutData = @{'"' ~ '"' ~ '/' ~ Number}
ReadableData = @{'\'' ~ ASCII_HEX_DIGIT+ ~ '\'' ~ ('/' ~ Number)?}
NonReadableData = @{ '"' ~ ~ '"' ~ ('/' ~ Number)?} # TODO 

Ptr = { SpecialValue | AddrPointee}
SpecialValue = @{ ("0x" | "0X") ~ ASCII_HEX_DIGIT+ } 
AddrPointee = { '&' ~ '(' ~ Int ~ ')' ~  ('=' ~ Pointee)? }  // addr + pointee
Pointee = { AnyValue? ~ ("nil" | Value) }
AnyValue = {'ANY' ~ '='}
Vma = { SpecialValue | VmaAddr}
VmaAddr = @{ '&' ~ '(' ~ Int ~ '/' Int ~ ')' ~ '=' ~ 'nil'}

Res = { OutRes | InRes | Int }
OutRes = ${ "<r" ~ ResId ~ "=>" ~ Int}
InRes = ${ ResName ~ ResOpDiv? ~ ResOpAdd?}
ResOpDiv = ${'/' ~ Number}
ResOpAdd = ${'+' ~ Number}

Array = {'[' ~ Value* ~ ']'}  
Struct = {'{' ~ Value* ~ '}' } 
Union = { OptionName ~ ('=' ~ Value)? }
OptionName = @{ '@' ~ Ident }

CallName = @{ Ident ~ ('$' ~ Ident)?} 
ResName = ${'r' ~ ResId}
ResId = @{ASCII_DIGIT+}
Number = @{ASCII_DIGIT+}
Ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ "#" ~ (!"\n" ~ ANY)* }